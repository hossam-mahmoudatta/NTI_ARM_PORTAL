
AutoParkingVersion1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001b64  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08001c94  08001c94  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08001c94  08001c94  00020004  2**0
                  CONTENTS
  4 .ARM          00000000  08001c94  08001c94  00020004  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001c94  08001c94  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001c94  08001c94  00011c94  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001c98  08001c98  00011c98  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000004  20000000  08001c9c  00020000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000080  20000004  08001ca0  00020004  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000084  08001ca0  00020084  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020004  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  0002002d  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000191e  00000000  00000000  00020070  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000ae8  00000000  00000000  0002198e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000380  00000000  00000000  00022478  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000276  00000000  00000000  000227f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001a21  00000000  00000000  00022a6e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001d9f  00000000  00000000  0002448f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000066d1  00000000  00000000  0002622e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000b04  00000000  00000000  0002c900  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000007d  00000000  00000000  0002d404  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000004 	.word	0x20000004
 800014c:	00000000 	.word	0x00000000
 8000150:	08001c7c 	.word	0x08001c7c

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000008 	.word	0x20000008
 800016c:	08001c7c 	.word	0x08001c7c

08000170 <_delay_ms>:
 8000170:	b580      	push	{r7, lr}
 8000172:	b082      	sub	sp, #8
 8000174:	af00      	add	r7, sp, #0
 8000176:	6078      	str	r0, [r7, #4]
 8000178:	f000 faa4 	bl	80006c4 <MSTK_VidInit>
 800017c:	2000      	movs	r0, #0
 800017e:	f000 fac5 	bl	800070c <MSTK_VidINTStatus>
 8000182:	687b      	ldr	r3, [r7, #4]
 8000184:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8000188:	fb02 f303 	mul.w	r3, r2, r3
 800018c:	4618      	mov	r0, r3
 800018e:	f000 faa5 	bl	80006dc <MSTK_VidStart>
 8000192:	bf00      	nop
 8000194:	f000 fad4 	bl	8000740 <MSTK_u8ReadFlag>
 8000198:	4603      	mov	r3, r0
 800019a:	2b00      	cmp	r3, #0
 800019c:	d0fa      	beq.n	8000194 <_delay_ms+0x24>
 800019e:	bf00      	nop
 80001a0:	bf00      	nop
 80001a2:	3708      	adds	r7, #8
 80001a4:	46bd      	mov	sp, r7
 80001a6:	bd80      	pop	{r7, pc}

080001a8 <_delay_us>:
 80001a8:	b580      	push	{r7, lr}
 80001aa:	b082      	sub	sp, #8
 80001ac:	af00      	add	r7, sp, #0
 80001ae:	6078      	str	r0, [r7, #4]
 80001b0:	f000 fa88 	bl	80006c4 <MSTK_VidInit>
 80001b4:	2000      	movs	r0, #0
 80001b6:	f000 faa9 	bl	800070c <MSTK_VidINTStatus>
 80001ba:	6878      	ldr	r0, [r7, #4]
 80001bc:	f000 fa8e 	bl	80006dc <MSTK_VidStart>
 80001c0:	bf00      	nop
 80001c2:	f000 fabd 	bl	8000740 <MSTK_u8ReadFlag>
 80001c6:	4603      	mov	r3, r0
 80001c8:	2b00      	cmp	r3, #0
 80001ca:	d0fa      	beq.n	80001c2 <_delay_us+0x1a>
 80001cc:	bf00      	nop
 80001ce:	bf00      	nop
 80001d0:	3708      	adds	r7, #8
 80001d2:	46bd      	mov	sp, r7
 80001d4:	bd80      	pop	{r7, pc}
	...

080001d8 <MGPIO_VidSetPinDirection>:
 80001d8:	b480      	push	{r7}
 80001da:	b083      	sub	sp, #12
 80001dc:	af00      	add	r7, sp, #0
 80001de:	4603      	mov	r3, r0
 80001e0:	71fb      	strb	r3, [r7, #7]
 80001e2:	460b      	mov	r3, r1
 80001e4:	71bb      	strb	r3, [r7, #6]
 80001e6:	4613      	mov	r3, r2
 80001e8:	717b      	strb	r3, [r7, #5]
 80001ea:	79fb      	ldrb	r3, [r7, #7]
 80001ec:	2b02      	cmp	r3, #2
 80001ee:	d07a      	beq.n	80002e6 <MGPIO_VidSetPinDirection+0x10e>
 80001f0:	2b02      	cmp	r3, #2
 80001f2:	f300 80b1 	bgt.w	8000358 <MGPIO_VidSetPinDirection+0x180>
 80001f6:	2b00      	cmp	r3, #0
 80001f8:	d002      	beq.n	8000200 <MGPIO_VidSetPinDirection+0x28>
 80001fa:	2b01      	cmp	r3, #1
 80001fc:	d03a      	beq.n	8000274 <MGPIO_VidSetPinDirection+0x9c>
 80001fe:	e0ab      	b.n	8000358 <MGPIO_VidSetPinDirection+0x180>
 8000200:	79bb      	ldrb	r3, [r7, #6]
 8000202:	2b07      	cmp	r3, #7
 8000204:	d817      	bhi.n	8000236 <MGPIO_VidSetPinDirection+0x5e>
 8000206:	4b5a      	ldr	r3, [pc, #360]	; (8000370 <MGPIO_VidSetPinDirection+0x198>)
 8000208:	681b      	ldr	r3, [r3, #0]
 800020a:	79ba      	ldrb	r2, [r7, #6]
 800020c:	0092      	lsls	r2, r2, #2
 800020e:	210f      	movs	r1, #15
 8000210:	fa01 f202 	lsl.w	r2, r1, r2
 8000214:	43d2      	mvns	r2, r2
 8000216:	4611      	mov	r1, r2
 8000218:	4a55      	ldr	r2, [pc, #340]	; (8000370 <MGPIO_VidSetPinDirection+0x198>)
 800021a:	400b      	ands	r3, r1
 800021c:	6013      	str	r3, [r2, #0]
 800021e:	4b54      	ldr	r3, [pc, #336]	; (8000370 <MGPIO_VidSetPinDirection+0x198>)
 8000220:	681b      	ldr	r3, [r3, #0]
 8000222:	7979      	ldrb	r1, [r7, #5]
 8000224:	79ba      	ldrb	r2, [r7, #6]
 8000226:	0092      	lsls	r2, r2, #2
 8000228:	fa01 f202 	lsl.w	r2, r1, r2
 800022c:	4611      	mov	r1, r2
 800022e:	4a50      	ldr	r2, [pc, #320]	; (8000370 <MGPIO_VidSetPinDirection+0x198>)
 8000230:	430b      	orrs	r3, r1
 8000232:	6013      	str	r3, [r2, #0]
 8000234:	e092      	b.n	800035c <MGPIO_VidSetPinDirection+0x184>
 8000236:	79bb      	ldrb	r3, [r7, #6]
 8000238:	2b0f      	cmp	r3, #15
 800023a:	f200 808f 	bhi.w	800035c <MGPIO_VidSetPinDirection+0x184>
 800023e:	79bb      	ldrb	r3, [r7, #6]
 8000240:	3b08      	subs	r3, #8
 8000242:	71bb      	strb	r3, [r7, #6]
 8000244:	4b4a      	ldr	r3, [pc, #296]	; (8000370 <MGPIO_VidSetPinDirection+0x198>)
 8000246:	685b      	ldr	r3, [r3, #4]
 8000248:	79ba      	ldrb	r2, [r7, #6]
 800024a:	0092      	lsls	r2, r2, #2
 800024c:	210f      	movs	r1, #15
 800024e:	fa01 f202 	lsl.w	r2, r1, r2
 8000252:	43d2      	mvns	r2, r2
 8000254:	4611      	mov	r1, r2
 8000256:	4a46      	ldr	r2, [pc, #280]	; (8000370 <MGPIO_VidSetPinDirection+0x198>)
 8000258:	400b      	ands	r3, r1
 800025a:	6053      	str	r3, [r2, #4]
 800025c:	4b44      	ldr	r3, [pc, #272]	; (8000370 <MGPIO_VidSetPinDirection+0x198>)
 800025e:	685b      	ldr	r3, [r3, #4]
 8000260:	7979      	ldrb	r1, [r7, #5]
 8000262:	79ba      	ldrb	r2, [r7, #6]
 8000264:	0092      	lsls	r2, r2, #2
 8000266:	fa01 f202 	lsl.w	r2, r1, r2
 800026a:	4611      	mov	r1, r2
 800026c:	4a40      	ldr	r2, [pc, #256]	; (8000370 <MGPIO_VidSetPinDirection+0x198>)
 800026e:	430b      	orrs	r3, r1
 8000270:	6053      	str	r3, [r2, #4]
 8000272:	e073      	b.n	800035c <MGPIO_VidSetPinDirection+0x184>
 8000274:	79bb      	ldrb	r3, [r7, #6]
 8000276:	2b07      	cmp	r3, #7
 8000278:	d817      	bhi.n	80002aa <MGPIO_VidSetPinDirection+0xd2>
 800027a:	4b3e      	ldr	r3, [pc, #248]	; (8000374 <MGPIO_VidSetPinDirection+0x19c>)
 800027c:	681b      	ldr	r3, [r3, #0]
 800027e:	79ba      	ldrb	r2, [r7, #6]
 8000280:	0092      	lsls	r2, r2, #2
 8000282:	210f      	movs	r1, #15
 8000284:	fa01 f202 	lsl.w	r2, r1, r2
 8000288:	43d2      	mvns	r2, r2
 800028a:	4611      	mov	r1, r2
 800028c:	4a39      	ldr	r2, [pc, #228]	; (8000374 <MGPIO_VidSetPinDirection+0x19c>)
 800028e:	400b      	ands	r3, r1
 8000290:	6013      	str	r3, [r2, #0]
 8000292:	4b38      	ldr	r3, [pc, #224]	; (8000374 <MGPIO_VidSetPinDirection+0x19c>)
 8000294:	681b      	ldr	r3, [r3, #0]
 8000296:	7979      	ldrb	r1, [r7, #5]
 8000298:	79ba      	ldrb	r2, [r7, #6]
 800029a:	0092      	lsls	r2, r2, #2
 800029c:	fa01 f202 	lsl.w	r2, r1, r2
 80002a0:	4611      	mov	r1, r2
 80002a2:	4a34      	ldr	r2, [pc, #208]	; (8000374 <MGPIO_VidSetPinDirection+0x19c>)
 80002a4:	430b      	orrs	r3, r1
 80002a6:	6013      	str	r3, [r2, #0]
 80002a8:	e05a      	b.n	8000360 <MGPIO_VidSetPinDirection+0x188>
 80002aa:	79bb      	ldrb	r3, [r7, #6]
 80002ac:	2b0f      	cmp	r3, #15
 80002ae:	d857      	bhi.n	8000360 <MGPIO_VidSetPinDirection+0x188>
 80002b0:	79bb      	ldrb	r3, [r7, #6]
 80002b2:	3b08      	subs	r3, #8
 80002b4:	71bb      	strb	r3, [r7, #6]
 80002b6:	4b2f      	ldr	r3, [pc, #188]	; (8000374 <MGPIO_VidSetPinDirection+0x19c>)
 80002b8:	685b      	ldr	r3, [r3, #4]
 80002ba:	79ba      	ldrb	r2, [r7, #6]
 80002bc:	0092      	lsls	r2, r2, #2
 80002be:	210f      	movs	r1, #15
 80002c0:	fa01 f202 	lsl.w	r2, r1, r2
 80002c4:	43d2      	mvns	r2, r2
 80002c6:	4611      	mov	r1, r2
 80002c8:	4a2a      	ldr	r2, [pc, #168]	; (8000374 <MGPIO_VidSetPinDirection+0x19c>)
 80002ca:	400b      	ands	r3, r1
 80002cc:	6053      	str	r3, [r2, #4]
 80002ce:	4b29      	ldr	r3, [pc, #164]	; (8000374 <MGPIO_VidSetPinDirection+0x19c>)
 80002d0:	685b      	ldr	r3, [r3, #4]
 80002d2:	7979      	ldrb	r1, [r7, #5]
 80002d4:	79ba      	ldrb	r2, [r7, #6]
 80002d6:	0092      	lsls	r2, r2, #2
 80002d8:	fa01 f202 	lsl.w	r2, r1, r2
 80002dc:	4611      	mov	r1, r2
 80002de:	4a25      	ldr	r2, [pc, #148]	; (8000374 <MGPIO_VidSetPinDirection+0x19c>)
 80002e0:	430b      	orrs	r3, r1
 80002e2:	6053      	str	r3, [r2, #4]
 80002e4:	e03c      	b.n	8000360 <MGPIO_VidSetPinDirection+0x188>
 80002e6:	79bb      	ldrb	r3, [r7, #6]
 80002e8:	2b07      	cmp	r3, #7
 80002ea:	d817      	bhi.n	800031c <MGPIO_VidSetPinDirection+0x144>
 80002ec:	4b22      	ldr	r3, [pc, #136]	; (8000378 <MGPIO_VidSetPinDirection+0x1a0>)
 80002ee:	681b      	ldr	r3, [r3, #0]
 80002f0:	79ba      	ldrb	r2, [r7, #6]
 80002f2:	0092      	lsls	r2, r2, #2
 80002f4:	210f      	movs	r1, #15
 80002f6:	fa01 f202 	lsl.w	r2, r1, r2
 80002fa:	43d2      	mvns	r2, r2
 80002fc:	4611      	mov	r1, r2
 80002fe:	4a1e      	ldr	r2, [pc, #120]	; (8000378 <MGPIO_VidSetPinDirection+0x1a0>)
 8000300:	400b      	ands	r3, r1
 8000302:	6013      	str	r3, [r2, #0]
 8000304:	4b1c      	ldr	r3, [pc, #112]	; (8000378 <MGPIO_VidSetPinDirection+0x1a0>)
 8000306:	681b      	ldr	r3, [r3, #0]
 8000308:	7979      	ldrb	r1, [r7, #5]
 800030a:	79ba      	ldrb	r2, [r7, #6]
 800030c:	0092      	lsls	r2, r2, #2
 800030e:	fa01 f202 	lsl.w	r2, r1, r2
 8000312:	4611      	mov	r1, r2
 8000314:	4a18      	ldr	r2, [pc, #96]	; (8000378 <MGPIO_VidSetPinDirection+0x1a0>)
 8000316:	430b      	orrs	r3, r1
 8000318:	6013      	str	r3, [r2, #0]
 800031a:	e023      	b.n	8000364 <MGPIO_VidSetPinDirection+0x18c>
 800031c:	79bb      	ldrb	r3, [r7, #6]
 800031e:	2b0f      	cmp	r3, #15
 8000320:	d820      	bhi.n	8000364 <MGPIO_VidSetPinDirection+0x18c>
 8000322:	79bb      	ldrb	r3, [r7, #6]
 8000324:	3b08      	subs	r3, #8
 8000326:	71bb      	strb	r3, [r7, #6]
 8000328:	4b13      	ldr	r3, [pc, #76]	; (8000378 <MGPIO_VidSetPinDirection+0x1a0>)
 800032a:	685b      	ldr	r3, [r3, #4]
 800032c:	79ba      	ldrb	r2, [r7, #6]
 800032e:	0092      	lsls	r2, r2, #2
 8000330:	210f      	movs	r1, #15
 8000332:	fa01 f202 	lsl.w	r2, r1, r2
 8000336:	43d2      	mvns	r2, r2
 8000338:	4611      	mov	r1, r2
 800033a:	4a0f      	ldr	r2, [pc, #60]	; (8000378 <MGPIO_VidSetPinDirection+0x1a0>)
 800033c:	400b      	ands	r3, r1
 800033e:	6053      	str	r3, [r2, #4]
 8000340:	4b0d      	ldr	r3, [pc, #52]	; (8000378 <MGPIO_VidSetPinDirection+0x1a0>)
 8000342:	685b      	ldr	r3, [r3, #4]
 8000344:	7979      	ldrb	r1, [r7, #5]
 8000346:	79ba      	ldrb	r2, [r7, #6]
 8000348:	0092      	lsls	r2, r2, #2
 800034a:	fa01 f202 	lsl.w	r2, r1, r2
 800034e:	4611      	mov	r1, r2
 8000350:	4a09      	ldr	r2, [pc, #36]	; (8000378 <MGPIO_VidSetPinDirection+0x1a0>)
 8000352:	430b      	orrs	r3, r1
 8000354:	6053      	str	r3, [r2, #4]
 8000356:	e005      	b.n	8000364 <MGPIO_VidSetPinDirection+0x18c>
 8000358:	bf00      	nop
 800035a:	e004      	b.n	8000366 <MGPIO_VidSetPinDirection+0x18e>
 800035c:	bf00      	nop
 800035e:	e002      	b.n	8000366 <MGPIO_VidSetPinDirection+0x18e>
 8000360:	bf00      	nop
 8000362:	e000      	b.n	8000366 <MGPIO_VidSetPinDirection+0x18e>
 8000364:	bf00      	nop
 8000366:	bf00      	nop
 8000368:	370c      	adds	r7, #12
 800036a:	46bd      	mov	sp, r7
 800036c:	bc80      	pop	{r7}
 800036e:	4770      	bx	lr
 8000370:	40010800 	.word	0x40010800
 8000374:	40010c00 	.word	0x40010c00
 8000378:	40011000 	.word	0x40011000

0800037c <MGPIO_VidSetPinValue>:
 800037c:	b480      	push	{r7}
 800037e:	b083      	sub	sp, #12
 8000380:	af00      	add	r7, sp, #0
 8000382:	4603      	mov	r3, r0
 8000384:	71fb      	strb	r3, [r7, #7]
 8000386:	460b      	mov	r3, r1
 8000388:	71bb      	strb	r3, [r7, #6]
 800038a:	4613      	mov	r3, r2
 800038c:	717b      	strb	r3, [r7, #5]
 800038e:	79fb      	ldrb	r3, [r7, #7]
 8000390:	2b02      	cmp	r3, #2
 8000392:	d040      	beq.n	8000416 <MGPIO_VidSetPinValue+0x9a>
 8000394:	2b02      	cmp	r3, #2
 8000396:	dc60      	bgt.n	800045a <MGPIO_VidSetPinValue+0xde>
 8000398:	2b00      	cmp	r3, #0
 800039a:	d002      	beq.n	80003a2 <MGPIO_VidSetPinValue+0x26>
 800039c:	2b01      	cmp	r3, #1
 800039e:	d01d      	beq.n	80003dc <MGPIO_VidSetPinValue+0x60>
 80003a0:	e05b      	b.n	800045a <MGPIO_VidSetPinValue+0xde>
 80003a2:	797b      	ldrb	r3, [r7, #5]
 80003a4:	2b01      	cmp	r3, #1
 80003a6:	d10a      	bne.n	80003be <MGPIO_VidSetPinValue+0x42>
 80003a8:	4b2e      	ldr	r3, [pc, #184]	; (8000464 <MGPIO_VidSetPinValue+0xe8>)
 80003aa:	68db      	ldr	r3, [r3, #12]
 80003ac:	79ba      	ldrb	r2, [r7, #6]
 80003ae:	2101      	movs	r1, #1
 80003b0:	fa01 f202 	lsl.w	r2, r1, r2
 80003b4:	4611      	mov	r1, r2
 80003b6:	4a2b      	ldr	r2, [pc, #172]	; (8000464 <MGPIO_VidSetPinValue+0xe8>)
 80003b8:	430b      	orrs	r3, r1
 80003ba:	60d3      	str	r3, [r2, #12]
 80003bc:	e048      	b.n	8000450 <MGPIO_VidSetPinValue+0xd4>
 80003be:	797b      	ldrb	r3, [r7, #5]
 80003c0:	2b00      	cmp	r3, #0
 80003c2:	d145      	bne.n	8000450 <MGPIO_VidSetPinValue+0xd4>
 80003c4:	4b27      	ldr	r3, [pc, #156]	; (8000464 <MGPIO_VidSetPinValue+0xe8>)
 80003c6:	68db      	ldr	r3, [r3, #12]
 80003c8:	79ba      	ldrb	r2, [r7, #6]
 80003ca:	2101      	movs	r1, #1
 80003cc:	fa01 f202 	lsl.w	r2, r1, r2
 80003d0:	43d2      	mvns	r2, r2
 80003d2:	4611      	mov	r1, r2
 80003d4:	4a23      	ldr	r2, [pc, #140]	; (8000464 <MGPIO_VidSetPinValue+0xe8>)
 80003d6:	400b      	ands	r3, r1
 80003d8:	60d3      	str	r3, [r2, #12]
 80003da:	e039      	b.n	8000450 <MGPIO_VidSetPinValue+0xd4>
 80003dc:	797b      	ldrb	r3, [r7, #5]
 80003de:	2b01      	cmp	r3, #1
 80003e0:	d10a      	bne.n	80003f8 <MGPIO_VidSetPinValue+0x7c>
 80003e2:	4b21      	ldr	r3, [pc, #132]	; (8000468 <MGPIO_VidSetPinValue+0xec>)
 80003e4:	68db      	ldr	r3, [r3, #12]
 80003e6:	79ba      	ldrb	r2, [r7, #6]
 80003e8:	2101      	movs	r1, #1
 80003ea:	fa01 f202 	lsl.w	r2, r1, r2
 80003ee:	4611      	mov	r1, r2
 80003f0:	4a1d      	ldr	r2, [pc, #116]	; (8000468 <MGPIO_VidSetPinValue+0xec>)
 80003f2:	430b      	orrs	r3, r1
 80003f4:	60d3      	str	r3, [r2, #12]
 80003f6:	e02d      	b.n	8000454 <MGPIO_VidSetPinValue+0xd8>
 80003f8:	797b      	ldrb	r3, [r7, #5]
 80003fa:	2b00      	cmp	r3, #0
 80003fc:	d12a      	bne.n	8000454 <MGPIO_VidSetPinValue+0xd8>
 80003fe:	4b1a      	ldr	r3, [pc, #104]	; (8000468 <MGPIO_VidSetPinValue+0xec>)
 8000400:	68db      	ldr	r3, [r3, #12]
 8000402:	79ba      	ldrb	r2, [r7, #6]
 8000404:	2101      	movs	r1, #1
 8000406:	fa01 f202 	lsl.w	r2, r1, r2
 800040a:	43d2      	mvns	r2, r2
 800040c:	4611      	mov	r1, r2
 800040e:	4a16      	ldr	r2, [pc, #88]	; (8000468 <MGPIO_VidSetPinValue+0xec>)
 8000410:	400b      	ands	r3, r1
 8000412:	60d3      	str	r3, [r2, #12]
 8000414:	e01e      	b.n	8000454 <MGPIO_VidSetPinValue+0xd8>
 8000416:	797b      	ldrb	r3, [r7, #5]
 8000418:	2b01      	cmp	r3, #1
 800041a:	d10a      	bne.n	8000432 <MGPIO_VidSetPinValue+0xb6>
 800041c:	4b13      	ldr	r3, [pc, #76]	; (800046c <MGPIO_VidSetPinValue+0xf0>)
 800041e:	68db      	ldr	r3, [r3, #12]
 8000420:	79ba      	ldrb	r2, [r7, #6]
 8000422:	2101      	movs	r1, #1
 8000424:	fa01 f202 	lsl.w	r2, r1, r2
 8000428:	4611      	mov	r1, r2
 800042a:	4a10      	ldr	r2, [pc, #64]	; (800046c <MGPIO_VidSetPinValue+0xf0>)
 800042c:	430b      	orrs	r3, r1
 800042e:	60d3      	str	r3, [r2, #12]
 8000430:	e012      	b.n	8000458 <MGPIO_VidSetPinValue+0xdc>
 8000432:	797b      	ldrb	r3, [r7, #5]
 8000434:	2b00      	cmp	r3, #0
 8000436:	d10f      	bne.n	8000458 <MGPIO_VidSetPinValue+0xdc>
 8000438:	4b0c      	ldr	r3, [pc, #48]	; (800046c <MGPIO_VidSetPinValue+0xf0>)
 800043a:	68db      	ldr	r3, [r3, #12]
 800043c:	79ba      	ldrb	r2, [r7, #6]
 800043e:	2101      	movs	r1, #1
 8000440:	fa01 f202 	lsl.w	r2, r1, r2
 8000444:	43d2      	mvns	r2, r2
 8000446:	4611      	mov	r1, r2
 8000448:	4a08      	ldr	r2, [pc, #32]	; (800046c <MGPIO_VidSetPinValue+0xf0>)
 800044a:	400b      	ands	r3, r1
 800044c:	60d3      	str	r3, [r2, #12]
 800044e:	e003      	b.n	8000458 <MGPIO_VidSetPinValue+0xdc>
 8000450:	bf00      	nop
 8000452:	e002      	b.n	800045a <MGPIO_VidSetPinValue+0xde>
 8000454:	bf00      	nop
 8000456:	e000      	b.n	800045a <MGPIO_VidSetPinValue+0xde>
 8000458:	bf00      	nop
 800045a:	bf00      	nop
 800045c:	370c      	adds	r7, #12
 800045e:	46bd      	mov	sp, r7
 8000460:	bc80      	pop	{r7}
 8000462:	4770      	bx	lr
 8000464:	40010800 	.word	0x40010800
 8000468:	40010c00 	.word	0x40010c00
 800046c:	40011000 	.word	0x40011000

08000470 <MOTORS_Void_MotorInit>:
 8000470:	b580      	push	{r7, lr}
 8000472:	af00      	add	r7, sp, #0
 8000474:	2201      	movs	r2, #1
 8000476:	210e      	movs	r1, #14
 8000478:	2001      	movs	r0, #1
 800047a:	f7ff fead 	bl	80001d8 <MGPIO_VidSetPinDirection>
 800047e:	2201      	movs	r2, #1
 8000480:	210f      	movs	r1, #15
 8000482:	2001      	movs	r0, #1
 8000484:	f7ff fea8 	bl	80001d8 <MGPIO_VidSetPinDirection>
 8000488:	2209      	movs	r2, #9
 800048a:	2108      	movs	r1, #8
 800048c:	2001      	movs	r0, #1
 800048e:	f7ff fea3 	bl	80001d8 <MGPIO_VidSetPinDirection>
 8000492:	2201      	movs	r2, #1
 8000494:	210c      	movs	r1, #12
 8000496:	2001      	movs	r0, #1
 8000498:	f7ff fe9e 	bl	80001d8 <MGPIO_VidSetPinDirection>
 800049c:	2201      	movs	r2, #1
 800049e:	210d      	movs	r1, #13
 80004a0:	2001      	movs	r0, #1
 80004a2:	f7ff fe99 	bl	80001d8 <MGPIO_VidSetPinDirection>
 80004a6:	2209      	movs	r2, #9
 80004a8:	2109      	movs	r1, #9
 80004aa:	2001      	movs	r0, #1
 80004ac:	f7ff fe94 	bl	80001d8 <MGPIO_VidSetPinDirection>
 80004b0:	2003      	movs	r0, #3
 80004b2:	f000 fc87 	bl	8000dc4 <TIMER4_Void_PwmInit>
 80004b6:	2004      	movs	r0, #4
 80004b8:	f000 fc84 	bl	8000dc4 <TIMER4_Void_PwmInit>
 80004bc:	2001      	movs	r0, #1
 80004be:	f000 fc81 	bl	8000dc4 <TIMER4_Void_PwmInit>
 80004c2:	2002      	movs	r0, #2
 80004c4:	f000 fc7e 	bl	8000dc4 <TIMER4_Void_PwmInit>
 80004c8:	bf00      	nop
 80004ca:	bd80      	pop	{r7, pc}

080004cc <MOTOR_RF_Void_MotorSetSpeed>:
 80004cc:	b580      	push	{r7, lr}
 80004ce:	b082      	sub	sp, #8
 80004d0:	af00      	add	r7, sp, #0
 80004d2:	6078      	str	r0, [r7, #4]
 80004d4:	6879      	ldr	r1, [r7, #4]
 80004d6:	2003      	movs	r0, #3
 80004d8:	f000 fd3c 	bl	8000f54 <TIMER4_Void_PwmSetDutyCycle>
 80004dc:	bf00      	nop
 80004de:	3708      	adds	r7, #8
 80004e0:	46bd      	mov	sp, r7
 80004e2:	bd80      	pop	{r7, pc}

080004e4 <MOTOR_RF_GO_FORWARD>:
 80004e4:	b580      	push	{r7, lr}
 80004e6:	af00      	add	r7, sp, #0
 80004e8:	2201      	movs	r2, #1
 80004ea:	210e      	movs	r1, #14
 80004ec:	2001      	movs	r0, #1
 80004ee:	f7ff ff45 	bl	800037c <MGPIO_VidSetPinValue>
 80004f2:	2200      	movs	r2, #0
 80004f4:	210f      	movs	r1, #15
 80004f6:	2001      	movs	r0, #1
 80004f8:	f7ff ff40 	bl	800037c <MGPIO_VidSetPinValue>
 80004fc:	bf00      	nop
 80004fe:	bd80      	pop	{r7, pc}

08000500 <MOTOR_RF_GO_BACKWARD>:
 8000500:	b580      	push	{r7, lr}
 8000502:	af00      	add	r7, sp, #0
 8000504:	2200      	movs	r2, #0
 8000506:	210e      	movs	r1, #14
 8000508:	2001      	movs	r0, #1
 800050a:	f7ff ff37 	bl	800037c <MGPIO_VidSetPinValue>
 800050e:	2201      	movs	r2, #1
 8000510:	210f      	movs	r1, #15
 8000512:	2001      	movs	r0, #1
 8000514:	f7ff ff32 	bl	800037c <MGPIO_VidSetPinValue>
 8000518:	bf00      	nop
 800051a:	bd80      	pop	{r7, pc}

0800051c <MOTOR_RF_STOP>:
 800051c:	b580      	push	{r7, lr}
 800051e:	af00      	add	r7, sp, #0
 8000520:	2201      	movs	r2, #1
 8000522:	210e      	movs	r1, #14
 8000524:	2001      	movs	r0, #1
 8000526:	f7ff ff29 	bl	800037c <MGPIO_VidSetPinValue>
 800052a:	2201      	movs	r2, #1
 800052c:	210f      	movs	r1, #15
 800052e:	2001      	movs	r0, #1
 8000530:	f7ff ff24 	bl	800037c <MGPIO_VidSetPinValue>
 8000534:	bf00      	nop
 8000536:	bd80      	pop	{r7, pc}

08000538 <MOTOR_LF_Void_MotorSetSpeed>:
 8000538:	b580      	push	{r7, lr}
 800053a:	b082      	sub	sp, #8
 800053c:	af00      	add	r7, sp, #0
 800053e:	6078      	str	r0, [r7, #4]
 8000540:	6879      	ldr	r1, [r7, #4]
 8000542:	2004      	movs	r0, #4
 8000544:	f000 fd06 	bl	8000f54 <TIMER4_Void_PwmSetDutyCycle>
 8000548:	bf00      	nop
 800054a:	3708      	adds	r7, #8
 800054c:	46bd      	mov	sp, r7
 800054e:	bd80      	pop	{r7, pc}

08000550 <MOTOR_LF_GO_FORWARD>:
 8000550:	b580      	push	{r7, lr}
 8000552:	af00      	add	r7, sp, #0
 8000554:	2201      	movs	r2, #1
 8000556:	210c      	movs	r1, #12
 8000558:	2001      	movs	r0, #1
 800055a:	f7ff ff0f 	bl	800037c <MGPIO_VidSetPinValue>
 800055e:	2200      	movs	r2, #0
 8000560:	210d      	movs	r1, #13
 8000562:	2001      	movs	r0, #1
 8000564:	f7ff ff0a 	bl	800037c <MGPIO_VidSetPinValue>
 8000568:	bf00      	nop
 800056a:	bd80      	pop	{r7, pc}

0800056c <MOTOR_LF_GO_BACKWARD>:
 800056c:	b580      	push	{r7, lr}
 800056e:	af00      	add	r7, sp, #0
 8000570:	2200      	movs	r2, #0
 8000572:	210c      	movs	r1, #12
 8000574:	2001      	movs	r0, #1
 8000576:	f7ff ff01 	bl	800037c <MGPIO_VidSetPinValue>
 800057a:	2201      	movs	r2, #1
 800057c:	210d      	movs	r1, #13
 800057e:	2001      	movs	r0, #1
 8000580:	f7ff fefc 	bl	800037c <MGPIO_VidSetPinValue>
 8000584:	bf00      	nop
 8000586:	bd80      	pop	{r7, pc}

08000588 <MOTOR_LF_STOP>:
 8000588:	b580      	push	{r7, lr}
 800058a:	af00      	add	r7, sp, #0
 800058c:	2200      	movs	r2, #0
 800058e:	210c      	movs	r1, #12
 8000590:	2001      	movs	r0, #1
 8000592:	f7ff fef3 	bl	800037c <MGPIO_VidSetPinValue>
 8000596:	2200      	movs	r2, #0
 8000598:	210d      	movs	r1, #13
 800059a:	2001      	movs	r0, #1
 800059c:	f7ff feee 	bl	800037c <MGPIO_VidSetPinValue>
 80005a0:	bf00      	nop
 80005a2:	bd80      	pop	{r7, pc}

080005a4 <MNVIC_VidEnablePeripheral>:
 80005a4:	b480      	push	{r7}
 80005a6:	b083      	sub	sp, #12
 80005a8:	af00      	add	r7, sp, #0
 80005aa:	4603      	mov	r3, r0
 80005ac:	71fb      	strb	r3, [r7, #7]
 80005ae:	79fb      	ldrb	r3, [r7, #7]
 80005b0:	f003 031f 	and.w	r3, r3, #31
 80005b4:	2201      	movs	r2, #1
 80005b6:	fa02 f103 	lsl.w	r1, r2, r3
 80005ba:	4a05      	ldr	r2, [pc, #20]	; (80005d0 <MNVIC_VidEnablePeripheral+0x2c>)
 80005bc:	79fb      	ldrb	r3, [r7, #7]
 80005be:	095b      	lsrs	r3, r3, #5
 80005c0:	b2db      	uxtb	r3, r3
 80005c2:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 80005c6:	bf00      	nop
 80005c8:	370c      	adds	r7, #12
 80005ca:	46bd      	mov	sp, r7
 80005cc:	bc80      	pop	{r7}
 80005ce:	4770      	bx	lr
 80005d0:	e000e100 	.word	0xe000e100

080005d4 <MRCC_VidInit>:
 80005d4:	b480      	push	{r7}
 80005d6:	b083      	sub	sp, #12
 80005d8:	af00      	add	r7, sp, #0
 80005da:	2300      	movs	r3, #0
 80005dc:	607b      	str	r3, [r7, #4]
 80005de:	4b15      	ldr	r3, [pc, #84]	; (8000634 <MRCC_VidInit+0x60>)
 80005e0:	685b      	ldr	r3, [r3, #4]
 80005e2:	4a14      	ldr	r2, [pc, #80]	; (8000634 <MRCC_VidInit+0x60>)
 80005e4:	f043 0301 	orr.w	r3, r3, #1
 80005e8:	6053      	str	r3, [r2, #4]
 80005ea:	4b12      	ldr	r3, [pc, #72]	; (8000634 <MRCC_VidInit+0x60>)
 80005ec:	685b      	ldr	r3, [r3, #4]
 80005ee:	4a11      	ldr	r2, [pc, #68]	; (8000634 <MRCC_VidInit+0x60>)
 80005f0:	f023 0302 	bic.w	r3, r3, #2
 80005f4:	6053      	str	r3, [r2, #4]
 80005f6:	4b0f      	ldr	r3, [pc, #60]	; (8000634 <MRCC_VidInit+0x60>)
 80005f8:	681b      	ldr	r3, [r3, #0]
 80005fa:	4a0e      	ldr	r2, [pc, #56]	; (8000634 <MRCC_VidInit+0x60>)
 80005fc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000600:	6013      	str	r3, [r2, #0]
 8000602:	e002      	b.n	800060a <MRCC_VidInit+0x36>
 8000604:	687b      	ldr	r3, [r7, #4]
 8000606:	3301      	adds	r3, #1
 8000608:	607b      	str	r3, [r7, #4]
 800060a:	4b0a      	ldr	r3, [pc, #40]	; (8000634 <MRCC_VidInit+0x60>)
 800060c:	681b      	ldr	r3, [r3, #0]
 800060e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000612:	2b00      	cmp	r3, #0
 8000614:	d103      	bne.n	800061e <MRCC_VidInit+0x4a>
 8000616:	687b      	ldr	r3, [r7, #4]
 8000618:	4a07      	ldr	r2, [pc, #28]	; (8000638 <MRCC_VidInit+0x64>)
 800061a:	4293      	cmp	r3, r2
 800061c:	d9f2      	bls.n	8000604 <MRCC_VidInit+0x30>
 800061e:	4b05      	ldr	r3, [pc, #20]	; (8000634 <MRCC_VidInit+0x60>)
 8000620:	681b      	ldr	r3, [r3, #0]
 8000622:	4a04      	ldr	r2, [pc, #16]	; (8000634 <MRCC_VidInit+0x60>)
 8000624:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
 8000628:	6013      	str	r3, [r2, #0]
 800062a:	bf00      	nop
 800062c:	370c      	adds	r7, #12
 800062e:	46bd      	mov	sp, r7
 8000630:	bc80      	pop	{r7}
 8000632:	4770      	bx	lr
 8000634:	40021000 	.word	0x40021000
 8000638:	0001869f 	.word	0x0001869f

0800063c <MRCC_VidEnablePeripheralClock>:
 800063c:	b480      	push	{r7}
 800063e:	b083      	sub	sp, #12
 8000640:	af00      	add	r7, sp, #0
 8000642:	4603      	mov	r3, r0
 8000644:	460a      	mov	r2, r1
 8000646:	71fb      	strb	r3, [r7, #7]
 8000648:	4613      	mov	r3, r2
 800064a:	71bb      	strb	r3, [r7, #6]
 800064c:	79fb      	ldrb	r3, [r7, #7]
 800064e:	2b02      	cmp	r3, #2
 8000650:	d01c      	beq.n	800068c <MRCC_VidEnablePeripheralClock+0x50>
 8000652:	2b02      	cmp	r3, #2
 8000654:	dc25      	bgt.n	80006a2 <MRCC_VidEnablePeripheralClock+0x66>
 8000656:	2b00      	cmp	r3, #0
 8000658:	d002      	beq.n	8000660 <MRCC_VidEnablePeripheralClock+0x24>
 800065a:	2b01      	cmp	r3, #1
 800065c:	d00b      	beq.n	8000676 <MRCC_VidEnablePeripheralClock+0x3a>
 800065e:	e020      	b.n	80006a2 <MRCC_VidEnablePeripheralClock+0x66>
 8000660:	4b12      	ldr	r3, [pc, #72]	; (80006ac <MRCC_VidEnablePeripheralClock+0x70>)
 8000662:	695b      	ldr	r3, [r3, #20]
 8000664:	79ba      	ldrb	r2, [r7, #6]
 8000666:	2101      	movs	r1, #1
 8000668:	fa01 f202 	lsl.w	r2, r1, r2
 800066c:	4611      	mov	r1, r2
 800066e:	4a0f      	ldr	r2, [pc, #60]	; (80006ac <MRCC_VidEnablePeripheralClock+0x70>)
 8000670:	430b      	orrs	r3, r1
 8000672:	6153      	str	r3, [r2, #20]
 8000674:	e015      	b.n	80006a2 <MRCC_VidEnablePeripheralClock+0x66>
 8000676:	4b0d      	ldr	r3, [pc, #52]	; (80006ac <MRCC_VidEnablePeripheralClock+0x70>)
 8000678:	69db      	ldr	r3, [r3, #28]
 800067a:	79ba      	ldrb	r2, [r7, #6]
 800067c:	2101      	movs	r1, #1
 800067e:	fa01 f202 	lsl.w	r2, r1, r2
 8000682:	4611      	mov	r1, r2
 8000684:	4a09      	ldr	r2, [pc, #36]	; (80006ac <MRCC_VidEnablePeripheralClock+0x70>)
 8000686:	430b      	orrs	r3, r1
 8000688:	61d3      	str	r3, [r2, #28]
 800068a:	e00a      	b.n	80006a2 <MRCC_VidEnablePeripheralClock+0x66>
 800068c:	4b07      	ldr	r3, [pc, #28]	; (80006ac <MRCC_VidEnablePeripheralClock+0x70>)
 800068e:	699b      	ldr	r3, [r3, #24]
 8000690:	79ba      	ldrb	r2, [r7, #6]
 8000692:	2101      	movs	r1, #1
 8000694:	fa01 f202 	lsl.w	r2, r1, r2
 8000698:	4611      	mov	r1, r2
 800069a:	4a04      	ldr	r2, [pc, #16]	; (80006ac <MRCC_VidEnablePeripheralClock+0x70>)
 800069c:	430b      	orrs	r3, r1
 800069e:	6193      	str	r3, [r2, #24]
 80006a0:	bf00      	nop
 80006a2:	bf00      	nop
 80006a4:	370c      	adds	r7, #12
 80006a6:	46bd      	mov	sp, r7
 80006a8:	bc80      	pop	{r7}
 80006aa:	4770      	bx	lr
 80006ac:	40021000 	.word	0x40021000

080006b0 <SysTick_Handler>:
 80006b0:	b580      	push	{r7, lr}
 80006b2:	af00      	add	r7, sp, #0
 80006b4:	4b02      	ldr	r3, [pc, #8]	; (80006c0 <SysTick_Handler+0x10>)
 80006b6:	681b      	ldr	r3, [r3, #0]
 80006b8:	4798      	blx	r3
 80006ba:	bf00      	nop
 80006bc:	bd80      	pop	{r7, pc}
 80006be:	bf00      	nop
 80006c0:	20000020 	.word	0x20000020

080006c4 <MSTK_VidInit>:
 80006c4:	b480      	push	{r7}
 80006c6:	af00      	add	r7, sp, #0
 80006c8:	4b03      	ldr	r3, [pc, #12]	; (80006d8 <MSTK_VidInit+0x14>)
 80006ca:	2202      	movs	r2, #2
 80006cc:	601a      	str	r2, [r3, #0]
 80006ce:	bf00      	nop
 80006d0:	46bd      	mov	sp, r7
 80006d2:	bc80      	pop	{r7}
 80006d4:	4770      	bx	lr
 80006d6:	bf00      	nop
 80006d8:	e000e010 	.word	0xe000e010

080006dc <MSTK_VidStart>:
 80006dc:	b480      	push	{r7}
 80006de:	b083      	sub	sp, #12
 80006e0:	af00      	add	r7, sp, #0
 80006e2:	6078      	str	r0, [r7, #4]
 80006e4:	4a08      	ldr	r2, [pc, #32]	; (8000708 <MSTK_VidStart+0x2c>)
 80006e6:	687b      	ldr	r3, [r7, #4]
 80006e8:	3b01      	subs	r3, #1
 80006ea:	6053      	str	r3, [r2, #4]
 80006ec:	4b06      	ldr	r3, [pc, #24]	; (8000708 <MSTK_VidStart+0x2c>)
 80006ee:	2200      	movs	r2, #0
 80006f0:	609a      	str	r2, [r3, #8]
 80006f2:	4b05      	ldr	r3, [pc, #20]	; (8000708 <MSTK_VidStart+0x2c>)
 80006f4:	681b      	ldr	r3, [r3, #0]
 80006f6:	4a04      	ldr	r2, [pc, #16]	; (8000708 <MSTK_VidStart+0x2c>)
 80006f8:	f043 0301 	orr.w	r3, r3, #1
 80006fc:	6013      	str	r3, [r2, #0]
 80006fe:	bf00      	nop
 8000700:	370c      	adds	r7, #12
 8000702:	46bd      	mov	sp, r7
 8000704:	bc80      	pop	{r7}
 8000706:	4770      	bx	lr
 8000708:	e000e010 	.word	0xe000e010

0800070c <MSTK_VidINTStatus>:
 800070c:	b480      	push	{r7}
 800070e:	b083      	sub	sp, #12
 8000710:	af00      	add	r7, sp, #0
 8000712:	4603      	mov	r3, r0
 8000714:	71fb      	strb	r3, [r7, #7]
 8000716:	4b09      	ldr	r3, [pc, #36]	; (800073c <MSTK_VidINTStatus+0x30>)
 8000718:	681b      	ldr	r3, [r3, #0]
 800071a:	4a08      	ldr	r2, [pc, #32]	; (800073c <MSTK_VidINTStatus+0x30>)
 800071c:	f023 0302 	bic.w	r3, r3, #2
 8000720:	6013      	str	r3, [r2, #0]
 8000722:	4b06      	ldr	r3, [pc, #24]	; (800073c <MSTK_VidINTStatus+0x30>)
 8000724:	681b      	ldr	r3, [r3, #0]
 8000726:	79fa      	ldrb	r2, [r7, #7]
 8000728:	0052      	lsls	r2, r2, #1
 800072a:	4611      	mov	r1, r2
 800072c:	4a03      	ldr	r2, [pc, #12]	; (800073c <MSTK_VidINTStatus+0x30>)
 800072e:	430b      	orrs	r3, r1
 8000730:	6013      	str	r3, [r2, #0]
 8000732:	bf00      	nop
 8000734:	370c      	adds	r7, #12
 8000736:	46bd      	mov	sp, r7
 8000738:	bc80      	pop	{r7}
 800073a:	4770      	bx	lr
 800073c:	e000e010 	.word	0xe000e010

08000740 <MSTK_u8ReadFlag>:
 8000740:	b480      	push	{r7}
 8000742:	af00      	add	r7, sp, #0
 8000744:	4b05      	ldr	r3, [pc, #20]	; (800075c <MSTK_u8ReadFlag+0x1c>)
 8000746:	681b      	ldr	r3, [r3, #0]
 8000748:	0c1b      	lsrs	r3, r3, #16
 800074a:	b2db      	uxtb	r3, r3
 800074c:	f003 0301 	and.w	r3, r3, #1
 8000750:	b2db      	uxtb	r3, r3
 8000752:	4618      	mov	r0, r3
 8000754:	46bd      	mov	sp, r7
 8000756:	bc80      	pop	{r7}
 8000758:	4770      	bx	lr
 800075a:	bf00      	nop
 800075c:	e000e010 	.word	0xe000e010

08000760 <TIMER2_VoidInitInputCapture>:
 8000760:	b480      	push	{r7}
 8000762:	b083      	sub	sp, #12
 8000764:	af00      	add	r7, sp, #0
 8000766:	4603      	mov	r3, r0
 8000768:	71fb      	strb	r3, [r7, #7]
 800076a:	4b2b      	ldr	r3, [pc, #172]	; (8000818 <TIMER2_VoidInitInputCapture+0xb8>)
 800076c:	2207      	movs	r2, #7
 800076e:	601a      	str	r2, [r3, #0]
 8000770:	4b2a      	ldr	r3, [pc, #168]	; (800081c <TIMER2_VoidInitInputCapture+0xbc>)
 8000772:	2200      	movs	r2, #0
 8000774:	601a      	str	r2, [r3, #0]
 8000776:	79fb      	ldrb	r3, [r7, #7]
 8000778:	2b00      	cmp	r3, #0
 800077a:	d002      	beq.n	8000782 <TIMER2_VoidInitInputCapture+0x22>
 800077c:	2b01      	cmp	r3, #1
 800077e:	d01f      	beq.n	80007c0 <TIMER2_VoidInitInputCapture+0x60>
 8000780:	e03d      	b.n	80007fe <TIMER2_VoidInitInputCapture+0x9e>
 8000782:	4b27      	ldr	r3, [pc, #156]	; (8000820 <TIMER2_VoidInitInputCapture+0xc0>)
 8000784:	681b      	ldr	r3, [r3, #0]
 8000786:	4a26      	ldr	r2, [pc, #152]	; (8000820 <TIMER2_VoidInitInputCapture+0xc0>)
 8000788:	f043 0301 	orr.w	r3, r3, #1
 800078c:	6013      	str	r3, [r2, #0]
 800078e:	4b24      	ldr	r3, [pc, #144]	; (8000820 <TIMER2_VoidInitInputCapture+0xc0>)
 8000790:	681b      	ldr	r3, [r3, #0]
 8000792:	4a23      	ldr	r2, [pc, #140]	; (8000820 <TIMER2_VoidInitInputCapture+0xc0>)
 8000794:	f023 0302 	bic.w	r3, r3, #2
 8000798:	6013      	str	r3, [r2, #0]
 800079a:	4b22      	ldr	r3, [pc, #136]	; (8000824 <TIMER2_VoidInitInputCapture+0xc4>)
 800079c:	681b      	ldr	r3, [r3, #0]
 800079e:	4a21      	ldr	r2, [pc, #132]	; (8000824 <TIMER2_VoidInitInputCapture+0xc4>)
 80007a0:	f043 0301 	orr.w	r3, r3, #1
 80007a4:	6013      	str	r3, [r2, #0]
 80007a6:	4b1f      	ldr	r3, [pc, #124]	; (8000824 <TIMER2_VoidInitInputCapture+0xc4>)
 80007a8:	681b      	ldr	r3, [r3, #0]
 80007aa:	4a1e      	ldr	r2, [pc, #120]	; (8000824 <TIMER2_VoidInitInputCapture+0xc4>)
 80007ac:	f023 0302 	bic.w	r3, r3, #2
 80007b0:	6013      	str	r3, [r2, #0]
 80007b2:	4b1d      	ldr	r3, [pc, #116]	; (8000828 <TIMER2_VoidInitInputCapture+0xc8>)
 80007b4:	681b      	ldr	r3, [r3, #0]
 80007b6:	4a1c      	ldr	r2, [pc, #112]	; (8000828 <TIMER2_VoidInitInputCapture+0xc8>)
 80007b8:	f043 0302 	orr.w	r3, r3, #2
 80007bc:	6013      	str	r3, [r2, #0]
 80007be:	e01e      	b.n	80007fe <TIMER2_VoidInitInputCapture+0x9e>
 80007c0:	4b17      	ldr	r3, [pc, #92]	; (8000820 <TIMER2_VoidInitInputCapture+0xc0>)
 80007c2:	681b      	ldr	r3, [r3, #0]
 80007c4:	4a16      	ldr	r2, [pc, #88]	; (8000820 <TIMER2_VoidInitInputCapture+0xc0>)
 80007c6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80007ca:	6013      	str	r3, [r2, #0]
 80007cc:	4b14      	ldr	r3, [pc, #80]	; (8000820 <TIMER2_VoidInitInputCapture+0xc0>)
 80007ce:	681b      	ldr	r3, [r3, #0]
 80007d0:	4a13      	ldr	r2, [pc, #76]	; (8000820 <TIMER2_VoidInitInputCapture+0xc0>)
 80007d2:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80007d6:	6013      	str	r3, [r2, #0]
 80007d8:	4b12      	ldr	r3, [pc, #72]	; (8000824 <TIMER2_VoidInitInputCapture+0xc4>)
 80007da:	681b      	ldr	r3, [r3, #0]
 80007dc:	4a11      	ldr	r2, [pc, #68]	; (8000824 <TIMER2_VoidInitInputCapture+0xc4>)
 80007de:	f043 0310 	orr.w	r3, r3, #16
 80007e2:	6013      	str	r3, [r2, #0]
 80007e4:	4b0f      	ldr	r3, [pc, #60]	; (8000824 <TIMER2_VoidInitInputCapture+0xc4>)
 80007e6:	681b      	ldr	r3, [r3, #0]
 80007e8:	4a0e      	ldr	r2, [pc, #56]	; (8000824 <TIMER2_VoidInitInputCapture+0xc4>)
 80007ea:	f023 0320 	bic.w	r3, r3, #32
 80007ee:	6013      	str	r3, [r2, #0]
 80007f0:	4b0d      	ldr	r3, [pc, #52]	; (8000828 <TIMER2_VoidInitInputCapture+0xc8>)
 80007f2:	681b      	ldr	r3, [r3, #0]
 80007f4:	4a0c      	ldr	r2, [pc, #48]	; (8000828 <TIMER2_VoidInitInputCapture+0xc8>)
 80007f6:	f043 0304 	orr.w	r3, r3, #4
 80007fa:	6013      	str	r3, [r2, #0]
 80007fc:	bf00      	nop
 80007fe:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000802:	681b      	ldr	r3, [r3, #0]
 8000804:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000808:	f043 0301 	orr.w	r3, r3, #1
 800080c:	6013      	str	r3, [r2, #0]
 800080e:	bf00      	nop
 8000810:	370c      	adds	r7, #12
 8000812:	46bd      	mov	sp, r7
 8000814:	bc80      	pop	{r7}
 8000816:	4770      	bx	lr
 8000818:	40000028 	.word	0x40000028
 800081c:	40000024 	.word	0x40000024
 8000820:	40000018 	.word	0x40000018
 8000824:	40000020 	.word	0x40000020
 8000828:	4000000c 	.word	0x4000000c

0800082c <Timer2_u8InputCaptureSetCallBack>:
 800082c:	b480      	push	{r7}
 800082e:	b085      	sub	sp, #20
 8000830:	af00      	add	r7, sp, #0
 8000832:	6078      	str	r0, [r7, #4]
 8000834:	2300      	movs	r3, #0
 8000836:	73fb      	strb	r3, [r7, #15]
 8000838:	687b      	ldr	r3, [r7, #4]
 800083a:	2b00      	cmp	r3, #0
 800083c:	d002      	beq.n	8000844 <Timer2_u8InputCaptureSetCallBack+0x18>
 800083e:	4a04      	ldr	r2, [pc, #16]	; (8000850 <Timer2_u8InputCaptureSetCallBack+0x24>)
 8000840:	687b      	ldr	r3, [r7, #4]
 8000842:	6013      	str	r3, [r2, #0]
 8000844:	7bfb      	ldrb	r3, [r7, #15]
 8000846:	4618      	mov	r0, r3
 8000848:	3714      	adds	r7, #20
 800084a:	46bd      	mov	sp, r7
 800084c:	bc80      	pop	{r7}
 800084e:	4770      	bx	lr
 8000850:	20000024 	.word	0x20000024

08000854 <Timer2_VoidSetPreload>:
 8000854:	b480      	push	{r7}
 8000856:	b083      	sub	sp, #12
 8000858:	af00      	add	r7, sp, #0
 800085a:	4603      	mov	r3, r0
 800085c:	71fb      	strb	r3, [r7, #7]
 800085e:	4a04      	ldr	r2, [pc, #16]	; (8000870 <Timer2_VoidSetPreload+0x1c>)
 8000860:	79fb      	ldrb	r3, [r7, #7]
 8000862:	6013      	str	r3, [r2, #0]
 8000864:	bf00      	nop
 8000866:	370c      	adds	r7, #12
 8000868:	46bd      	mov	sp, r7
 800086a:	bc80      	pop	{r7}
 800086c:	4770      	bx	lr
 800086e:	bf00      	nop
 8000870:	40000024 	.word	0x40000024

08000874 <Timer2_VoidEnableIntOnEachChannle>:
 8000874:	b480      	push	{r7}
 8000876:	b083      	sub	sp, #12
 8000878:	af00      	add	r7, sp, #0
 800087a:	4603      	mov	r3, r0
 800087c:	71fb      	strb	r3, [r7, #7]
 800087e:	79fb      	ldrb	r3, [r7, #7]
 8000880:	2b00      	cmp	r3, #0
 8000882:	d002      	beq.n	800088a <Timer2_VoidEnableIntOnEachChannle+0x16>
 8000884:	2b01      	cmp	r3, #1
 8000886:	d007      	beq.n	8000898 <Timer2_VoidEnableIntOnEachChannle+0x24>
 8000888:	e00d      	b.n	80008a6 <Timer2_VoidEnableIntOnEachChannle+0x32>
 800088a:	4b09      	ldr	r3, [pc, #36]	; (80008b0 <Timer2_VoidEnableIntOnEachChannle+0x3c>)
 800088c:	681b      	ldr	r3, [r3, #0]
 800088e:	4a08      	ldr	r2, [pc, #32]	; (80008b0 <Timer2_VoidEnableIntOnEachChannle+0x3c>)
 8000890:	f043 0302 	orr.w	r3, r3, #2
 8000894:	6013      	str	r3, [r2, #0]
 8000896:	e006      	b.n	80008a6 <Timer2_VoidEnableIntOnEachChannle+0x32>
 8000898:	4b05      	ldr	r3, [pc, #20]	; (80008b0 <Timer2_VoidEnableIntOnEachChannle+0x3c>)
 800089a:	681b      	ldr	r3, [r3, #0]
 800089c:	4a04      	ldr	r2, [pc, #16]	; (80008b0 <Timer2_VoidEnableIntOnEachChannle+0x3c>)
 800089e:	f043 0304 	orr.w	r3, r3, #4
 80008a2:	6013      	str	r3, [r2, #0]
 80008a4:	bf00      	nop
 80008a6:	bf00      	nop
 80008a8:	370c      	adds	r7, #12
 80008aa:	46bd      	mov	sp, r7
 80008ac:	bc80      	pop	{r7}
 80008ae:	4770      	bx	lr
 80008b0:	4000000c 	.word	0x4000000c

080008b4 <Timer2_VoidDisableIntOnEachChannle>:
 80008b4:	b480      	push	{r7}
 80008b6:	b083      	sub	sp, #12
 80008b8:	af00      	add	r7, sp, #0
 80008ba:	4603      	mov	r3, r0
 80008bc:	71fb      	strb	r3, [r7, #7]
 80008be:	79fb      	ldrb	r3, [r7, #7]
 80008c0:	2b00      	cmp	r3, #0
 80008c2:	d002      	beq.n	80008ca <Timer2_VoidDisableIntOnEachChannle+0x16>
 80008c4:	2b01      	cmp	r3, #1
 80008c6:	d007      	beq.n	80008d8 <Timer2_VoidDisableIntOnEachChannle+0x24>
 80008c8:	e00d      	b.n	80008e6 <Timer2_VoidDisableIntOnEachChannle+0x32>
 80008ca:	4b09      	ldr	r3, [pc, #36]	; (80008f0 <Timer2_VoidDisableIntOnEachChannle+0x3c>)
 80008cc:	681b      	ldr	r3, [r3, #0]
 80008ce:	4a08      	ldr	r2, [pc, #32]	; (80008f0 <Timer2_VoidDisableIntOnEachChannle+0x3c>)
 80008d0:	f023 0302 	bic.w	r3, r3, #2
 80008d4:	6013      	str	r3, [r2, #0]
 80008d6:	e006      	b.n	80008e6 <Timer2_VoidDisableIntOnEachChannle+0x32>
 80008d8:	4b05      	ldr	r3, [pc, #20]	; (80008f0 <Timer2_VoidDisableIntOnEachChannle+0x3c>)
 80008da:	681b      	ldr	r3, [r3, #0]
 80008dc:	4a04      	ldr	r2, [pc, #16]	; (80008f0 <Timer2_VoidDisableIntOnEachChannle+0x3c>)
 80008de:	f023 0304 	bic.w	r3, r3, #4
 80008e2:	6013      	str	r3, [r2, #0]
 80008e4:	bf00      	nop
 80008e6:	bf00      	nop
 80008e8:	370c      	adds	r7, #12
 80008ea:	46bd      	mov	sp, r7
 80008ec:	bc80      	pop	{r7}
 80008ee:	4770      	bx	lr
 80008f0:	4000000c 	.word	0x4000000c

080008f4 <Timer2_VoidChangePolarityOnEachChannle>:
 80008f4:	b480      	push	{r7}
 80008f6:	b083      	sub	sp, #12
 80008f8:	af00      	add	r7, sp, #0
 80008fa:	4603      	mov	r3, r0
 80008fc:	460a      	mov	r2, r1
 80008fe:	71fb      	strb	r3, [r7, #7]
 8000900:	4613      	mov	r3, r2
 8000902:	71bb      	strb	r3, [r7, #6]
 8000904:	79bb      	ldrb	r3, [r7, #6]
 8000906:	2b00      	cmp	r3, #0
 8000908:	d002      	beq.n	8000910 <Timer2_VoidChangePolarityOnEachChannle+0x1c>
 800090a:	2b01      	cmp	r3, #1
 800090c:	d015      	beq.n	800093a <Timer2_VoidChangePolarityOnEachChannle+0x46>
 800090e:	e029      	b.n	8000964 <Timer2_VoidChangePolarityOnEachChannle+0x70>
 8000910:	79fb      	ldrb	r3, [r7, #7]
 8000912:	2b00      	cmp	r3, #0
 8000914:	d002      	beq.n	800091c <Timer2_VoidChangePolarityOnEachChannle+0x28>
 8000916:	2b01      	cmp	r3, #1
 8000918:	d007      	beq.n	800092a <Timer2_VoidChangePolarityOnEachChannle+0x36>
 800091a:	e023      	b.n	8000964 <Timer2_VoidChangePolarityOnEachChannle+0x70>
 800091c:	4b14      	ldr	r3, [pc, #80]	; (8000970 <Timer2_VoidChangePolarityOnEachChannle+0x7c>)
 800091e:	681b      	ldr	r3, [r3, #0]
 8000920:	4a13      	ldr	r2, [pc, #76]	; (8000970 <Timer2_VoidChangePolarityOnEachChannle+0x7c>)
 8000922:	f023 0302 	bic.w	r3, r3, #2
 8000926:	6013      	str	r3, [r2, #0]
 8000928:	e006      	b.n	8000938 <Timer2_VoidChangePolarityOnEachChannle+0x44>
 800092a:	4b11      	ldr	r3, [pc, #68]	; (8000970 <Timer2_VoidChangePolarityOnEachChannle+0x7c>)
 800092c:	681b      	ldr	r3, [r3, #0]
 800092e:	4a10      	ldr	r2, [pc, #64]	; (8000970 <Timer2_VoidChangePolarityOnEachChannle+0x7c>)
 8000930:	f023 0320 	bic.w	r3, r3, #32
 8000934:	6013      	str	r3, [r2, #0]
 8000936:	bf00      	nop
 8000938:	e014      	b.n	8000964 <Timer2_VoidChangePolarityOnEachChannle+0x70>
 800093a:	79fb      	ldrb	r3, [r7, #7]
 800093c:	2b00      	cmp	r3, #0
 800093e:	d002      	beq.n	8000946 <Timer2_VoidChangePolarityOnEachChannle+0x52>
 8000940:	2b01      	cmp	r3, #1
 8000942:	d007      	beq.n	8000954 <Timer2_VoidChangePolarityOnEachChannle+0x60>
 8000944:	e00d      	b.n	8000962 <Timer2_VoidChangePolarityOnEachChannle+0x6e>
 8000946:	4b0a      	ldr	r3, [pc, #40]	; (8000970 <Timer2_VoidChangePolarityOnEachChannle+0x7c>)
 8000948:	681b      	ldr	r3, [r3, #0]
 800094a:	4a09      	ldr	r2, [pc, #36]	; (8000970 <Timer2_VoidChangePolarityOnEachChannle+0x7c>)
 800094c:	f043 0302 	orr.w	r3, r3, #2
 8000950:	6013      	str	r3, [r2, #0]
 8000952:	e006      	b.n	8000962 <Timer2_VoidChangePolarityOnEachChannle+0x6e>
 8000954:	4b06      	ldr	r3, [pc, #24]	; (8000970 <Timer2_VoidChangePolarityOnEachChannle+0x7c>)
 8000956:	681b      	ldr	r3, [r3, #0]
 8000958:	4a05      	ldr	r2, [pc, #20]	; (8000970 <Timer2_VoidChangePolarityOnEachChannle+0x7c>)
 800095a:	f043 0320 	orr.w	r3, r3, #32
 800095e:	6013      	str	r3, [r2, #0]
 8000960:	bf00      	nop
 8000962:	bf00      	nop
 8000964:	bf00      	nop
 8000966:	370c      	adds	r7, #12
 8000968:	46bd      	mov	sp, r7
 800096a:	bc80      	pop	{r7}
 800096c:	4770      	bx	lr
 800096e:	bf00      	nop
 8000970:	40000020 	.word	0x40000020

08000974 <Timer2_VoidGetCapturedValue>:
 8000974:	b480      	push	{r7}
 8000976:	b087      	sub	sp, #28
 8000978:	af00      	add	r7, sp, #0
 800097a:	4603      	mov	r3, r0
 800097c:	71fb      	strb	r3, [r7, #7]
 800097e:	79fb      	ldrb	r3, [r7, #7]
 8000980:	2b00      	cmp	r3, #0
 8000982:	d002      	beq.n	800098a <Timer2_VoidGetCapturedValue+0x16>
 8000984:	2b01      	cmp	r3, #1
 8000986:	d006      	beq.n	8000996 <Timer2_VoidGetCapturedValue+0x22>
 8000988:	e00b      	b.n	80009a2 <Timer2_VoidGetCapturedValue+0x2e>
 800098a:	4b09      	ldr	r3, [pc, #36]	; (80009b0 <Timer2_VoidGetCapturedValue+0x3c>)
 800098c:	681b      	ldr	r3, [r3, #0]
 800098e:	60fb      	str	r3, [r7, #12]
 8000990:	68fb      	ldr	r3, [r7, #12]
 8000992:	617b      	str	r3, [r7, #20]
 8000994:	e005      	b.n	80009a2 <Timer2_VoidGetCapturedValue+0x2e>
 8000996:	4b07      	ldr	r3, [pc, #28]	; (80009b4 <Timer2_VoidGetCapturedValue+0x40>)
 8000998:	681b      	ldr	r3, [r3, #0]
 800099a:	613b      	str	r3, [r7, #16]
 800099c:	693b      	ldr	r3, [r7, #16]
 800099e:	617b      	str	r3, [r7, #20]
 80009a0:	bf00      	nop
 80009a2:	697b      	ldr	r3, [r7, #20]
 80009a4:	4618      	mov	r0, r3
 80009a6:	371c      	adds	r7, #28
 80009a8:	46bd      	mov	sp, r7
 80009aa:	bc80      	pop	{r7}
 80009ac:	4770      	bx	lr
 80009ae:	bf00      	nop
 80009b0:	40000034 	.word	0x40000034
 80009b4:	40000038 	.word	0x40000038

080009b8 <TIM2_IRQHandler>:
 80009b8:	b580      	push	{r7, lr}
 80009ba:	af00      	add	r7, sp, #0
 80009bc:	4b04      	ldr	r3, [pc, #16]	; (80009d0 <TIM2_IRQHandler+0x18>)
 80009be:	681b      	ldr	r3, [r3, #0]
 80009c0:	2b00      	cmp	r3, #0
 80009c2:	d002      	beq.n	80009ca <TIM2_IRQHandler+0x12>
 80009c4:	4b02      	ldr	r3, [pc, #8]	; (80009d0 <TIM2_IRQHandler+0x18>)
 80009c6:	681b      	ldr	r3, [r3, #0]
 80009c8:	4798      	blx	r3
 80009ca:	bf00      	nop
 80009cc:	bd80      	pop	{r7, pc}
 80009ce:	bf00      	nop
 80009d0:	20000024 	.word	0x20000024

080009d4 <TIMER3_VoidInitInputCapture>:
 80009d4:	b480      	push	{r7}
 80009d6:	b083      	sub	sp, #12
 80009d8:	af00      	add	r7, sp, #0
 80009da:	4603      	mov	r3, r0
 80009dc:	71fb      	strb	r3, [r7, #7]
 80009de:	4b4e      	ldr	r3, [pc, #312]	; (8000b18 <TIMER3_VoidInitInputCapture+0x144>)
 80009e0:	2207      	movs	r2, #7
 80009e2:	601a      	str	r2, [r3, #0]
 80009e4:	4b4d      	ldr	r3, [pc, #308]	; (8000b1c <TIMER3_VoidInitInputCapture+0x148>)
 80009e6:	2200      	movs	r2, #0
 80009e8:	601a      	str	r2, [r3, #0]
 80009ea:	79fb      	ldrb	r3, [r7, #7]
 80009ec:	2b03      	cmp	r3, #3
 80009ee:	f200 8087 	bhi.w	8000b00 <TIMER3_VoidInitInputCapture+0x12c>
 80009f2:	a201      	add	r2, pc, #4	; (adr r2, 80009f8 <TIMER3_VoidInitInputCapture+0x24>)
 80009f4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80009f8:	08000a09 	.word	0x08000a09
 80009fc:	08000a47 	.word	0x08000a47
 8000a00:	08000a85 	.word	0x08000a85
 8000a04:	08000ac3 	.word	0x08000ac3
 8000a08:	4b45      	ldr	r3, [pc, #276]	; (8000b20 <TIMER3_VoidInitInputCapture+0x14c>)
 8000a0a:	681b      	ldr	r3, [r3, #0]
 8000a0c:	4a44      	ldr	r2, [pc, #272]	; (8000b20 <TIMER3_VoidInitInputCapture+0x14c>)
 8000a0e:	f043 0301 	orr.w	r3, r3, #1
 8000a12:	6013      	str	r3, [r2, #0]
 8000a14:	4b42      	ldr	r3, [pc, #264]	; (8000b20 <TIMER3_VoidInitInputCapture+0x14c>)
 8000a16:	681b      	ldr	r3, [r3, #0]
 8000a18:	4a41      	ldr	r2, [pc, #260]	; (8000b20 <TIMER3_VoidInitInputCapture+0x14c>)
 8000a1a:	f023 0302 	bic.w	r3, r3, #2
 8000a1e:	6013      	str	r3, [r2, #0]
 8000a20:	4b40      	ldr	r3, [pc, #256]	; (8000b24 <TIMER3_VoidInitInputCapture+0x150>)
 8000a22:	681b      	ldr	r3, [r3, #0]
 8000a24:	4a3f      	ldr	r2, [pc, #252]	; (8000b24 <TIMER3_VoidInitInputCapture+0x150>)
 8000a26:	f043 0301 	orr.w	r3, r3, #1
 8000a2a:	6013      	str	r3, [r2, #0]
 8000a2c:	4b3d      	ldr	r3, [pc, #244]	; (8000b24 <TIMER3_VoidInitInputCapture+0x150>)
 8000a2e:	681b      	ldr	r3, [r3, #0]
 8000a30:	4a3c      	ldr	r2, [pc, #240]	; (8000b24 <TIMER3_VoidInitInputCapture+0x150>)
 8000a32:	f023 0302 	bic.w	r3, r3, #2
 8000a36:	6013      	str	r3, [r2, #0]
 8000a38:	4b3b      	ldr	r3, [pc, #236]	; (8000b28 <TIMER3_VoidInitInputCapture+0x154>)
 8000a3a:	681b      	ldr	r3, [r3, #0]
 8000a3c:	4a3a      	ldr	r2, [pc, #232]	; (8000b28 <TIMER3_VoidInitInputCapture+0x154>)
 8000a3e:	f043 0302 	orr.w	r3, r3, #2
 8000a42:	6013      	str	r3, [r2, #0]
 8000a44:	e05c      	b.n	8000b00 <TIMER3_VoidInitInputCapture+0x12c>
 8000a46:	4b36      	ldr	r3, [pc, #216]	; (8000b20 <TIMER3_VoidInitInputCapture+0x14c>)
 8000a48:	681b      	ldr	r3, [r3, #0]
 8000a4a:	4a35      	ldr	r2, [pc, #212]	; (8000b20 <TIMER3_VoidInitInputCapture+0x14c>)
 8000a4c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000a50:	6013      	str	r3, [r2, #0]
 8000a52:	4b33      	ldr	r3, [pc, #204]	; (8000b20 <TIMER3_VoidInitInputCapture+0x14c>)
 8000a54:	681b      	ldr	r3, [r3, #0]
 8000a56:	4a32      	ldr	r2, [pc, #200]	; (8000b20 <TIMER3_VoidInitInputCapture+0x14c>)
 8000a58:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8000a5c:	6013      	str	r3, [r2, #0]
 8000a5e:	4b31      	ldr	r3, [pc, #196]	; (8000b24 <TIMER3_VoidInitInputCapture+0x150>)
 8000a60:	681b      	ldr	r3, [r3, #0]
 8000a62:	4a30      	ldr	r2, [pc, #192]	; (8000b24 <TIMER3_VoidInitInputCapture+0x150>)
 8000a64:	f043 0310 	orr.w	r3, r3, #16
 8000a68:	6013      	str	r3, [r2, #0]
 8000a6a:	4b2e      	ldr	r3, [pc, #184]	; (8000b24 <TIMER3_VoidInitInputCapture+0x150>)
 8000a6c:	681b      	ldr	r3, [r3, #0]
 8000a6e:	4a2d      	ldr	r2, [pc, #180]	; (8000b24 <TIMER3_VoidInitInputCapture+0x150>)
 8000a70:	f023 0320 	bic.w	r3, r3, #32
 8000a74:	6013      	str	r3, [r2, #0]
 8000a76:	4b2c      	ldr	r3, [pc, #176]	; (8000b28 <TIMER3_VoidInitInputCapture+0x154>)
 8000a78:	681b      	ldr	r3, [r3, #0]
 8000a7a:	4a2b      	ldr	r2, [pc, #172]	; (8000b28 <TIMER3_VoidInitInputCapture+0x154>)
 8000a7c:	f043 0304 	orr.w	r3, r3, #4
 8000a80:	6013      	str	r3, [r2, #0]
 8000a82:	e03d      	b.n	8000b00 <TIMER3_VoidInitInputCapture+0x12c>
 8000a84:	4b29      	ldr	r3, [pc, #164]	; (8000b2c <TIMER3_VoidInitInputCapture+0x158>)
 8000a86:	681b      	ldr	r3, [r3, #0]
 8000a88:	4a28      	ldr	r2, [pc, #160]	; (8000b2c <TIMER3_VoidInitInputCapture+0x158>)
 8000a8a:	f043 0301 	orr.w	r3, r3, #1
 8000a8e:	6013      	str	r3, [r2, #0]
 8000a90:	4b26      	ldr	r3, [pc, #152]	; (8000b2c <TIMER3_VoidInitInputCapture+0x158>)
 8000a92:	681b      	ldr	r3, [r3, #0]
 8000a94:	4a25      	ldr	r2, [pc, #148]	; (8000b2c <TIMER3_VoidInitInputCapture+0x158>)
 8000a96:	f023 0302 	bic.w	r3, r3, #2
 8000a9a:	6013      	str	r3, [r2, #0]
 8000a9c:	4b21      	ldr	r3, [pc, #132]	; (8000b24 <TIMER3_VoidInitInputCapture+0x150>)
 8000a9e:	681b      	ldr	r3, [r3, #0]
 8000aa0:	4a20      	ldr	r2, [pc, #128]	; (8000b24 <TIMER3_VoidInitInputCapture+0x150>)
 8000aa2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000aa6:	6013      	str	r3, [r2, #0]
 8000aa8:	4b1e      	ldr	r3, [pc, #120]	; (8000b24 <TIMER3_VoidInitInputCapture+0x150>)
 8000aaa:	681b      	ldr	r3, [r3, #0]
 8000aac:	4a1d      	ldr	r2, [pc, #116]	; (8000b24 <TIMER3_VoidInitInputCapture+0x150>)
 8000aae:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8000ab2:	6013      	str	r3, [r2, #0]
 8000ab4:	4b1c      	ldr	r3, [pc, #112]	; (8000b28 <TIMER3_VoidInitInputCapture+0x154>)
 8000ab6:	681b      	ldr	r3, [r3, #0]
 8000ab8:	4a1b      	ldr	r2, [pc, #108]	; (8000b28 <TIMER3_VoidInitInputCapture+0x154>)
 8000aba:	f043 0308 	orr.w	r3, r3, #8
 8000abe:	6013      	str	r3, [r2, #0]
 8000ac0:	e01e      	b.n	8000b00 <TIMER3_VoidInitInputCapture+0x12c>
 8000ac2:	4b1a      	ldr	r3, [pc, #104]	; (8000b2c <TIMER3_VoidInitInputCapture+0x158>)
 8000ac4:	681b      	ldr	r3, [r3, #0]
 8000ac6:	4a19      	ldr	r2, [pc, #100]	; (8000b2c <TIMER3_VoidInitInputCapture+0x158>)
 8000ac8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000acc:	6013      	str	r3, [r2, #0]
 8000ace:	4b17      	ldr	r3, [pc, #92]	; (8000b2c <TIMER3_VoidInitInputCapture+0x158>)
 8000ad0:	681b      	ldr	r3, [r3, #0]
 8000ad2:	4a16      	ldr	r2, [pc, #88]	; (8000b2c <TIMER3_VoidInitInputCapture+0x158>)
 8000ad4:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8000ad8:	6013      	str	r3, [r2, #0]
 8000ada:	4b12      	ldr	r3, [pc, #72]	; (8000b24 <TIMER3_VoidInitInputCapture+0x150>)
 8000adc:	681b      	ldr	r3, [r3, #0]
 8000ade:	4a11      	ldr	r2, [pc, #68]	; (8000b24 <TIMER3_VoidInitInputCapture+0x150>)
 8000ae0:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000ae4:	6013      	str	r3, [r2, #0]
 8000ae6:	4b0f      	ldr	r3, [pc, #60]	; (8000b24 <TIMER3_VoidInitInputCapture+0x150>)
 8000ae8:	681b      	ldr	r3, [r3, #0]
 8000aea:	4a0e      	ldr	r2, [pc, #56]	; (8000b24 <TIMER3_VoidInitInputCapture+0x150>)
 8000aec:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8000af0:	6013      	str	r3, [r2, #0]
 8000af2:	4b0d      	ldr	r3, [pc, #52]	; (8000b28 <TIMER3_VoidInitInputCapture+0x154>)
 8000af4:	681b      	ldr	r3, [r3, #0]
 8000af6:	4a0c      	ldr	r2, [pc, #48]	; (8000b28 <TIMER3_VoidInitInputCapture+0x154>)
 8000af8:	f043 0310 	orr.w	r3, r3, #16
 8000afc:	6013      	str	r3, [r2, #0]
 8000afe:	bf00      	nop
 8000b00:	4b0b      	ldr	r3, [pc, #44]	; (8000b30 <TIMER3_VoidInitInputCapture+0x15c>)
 8000b02:	681b      	ldr	r3, [r3, #0]
 8000b04:	4a0a      	ldr	r2, [pc, #40]	; (8000b30 <TIMER3_VoidInitInputCapture+0x15c>)
 8000b06:	f043 0301 	orr.w	r3, r3, #1
 8000b0a:	6013      	str	r3, [r2, #0]
 8000b0c:	bf00      	nop
 8000b0e:	370c      	adds	r7, #12
 8000b10:	46bd      	mov	sp, r7
 8000b12:	bc80      	pop	{r7}
 8000b14:	4770      	bx	lr
 8000b16:	bf00      	nop
 8000b18:	40000428 	.word	0x40000428
 8000b1c:	40000424 	.word	0x40000424
 8000b20:	40000418 	.word	0x40000418
 8000b24:	40000420 	.word	0x40000420
 8000b28:	4000040c 	.word	0x4000040c
 8000b2c:	4000041c 	.word	0x4000041c
 8000b30:	40000400 	.word	0x40000400

08000b34 <Timer3_u8InputCaptureSetCallBack>:
 8000b34:	b480      	push	{r7}
 8000b36:	b085      	sub	sp, #20
 8000b38:	af00      	add	r7, sp, #0
 8000b3a:	6078      	str	r0, [r7, #4]
 8000b3c:	2300      	movs	r3, #0
 8000b3e:	73fb      	strb	r3, [r7, #15]
 8000b40:	687b      	ldr	r3, [r7, #4]
 8000b42:	2b00      	cmp	r3, #0
 8000b44:	d002      	beq.n	8000b4c <Timer3_u8InputCaptureSetCallBack+0x18>
 8000b46:	4a04      	ldr	r2, [pc, #16]	; (8000b58 <Timer3_u8InputCaptureSetCallBack+0x24>)
 8000b48:	687b      	ldr	r3, [r7, #4]
 8000b4a:	6013      	str	r3, [r2, #0]
 8000b4c:	7bfb      	ldrb	r3, [r7, #15]
 8000b4e:	4618      	mov	r0, r3
 8000b50:	3714      	adds	r7, #20
 8000b52:	46bd      	mov	sp, r7
 8000b54:	bc80      	pop	{r7}
 8000b56:	4770      	bx	lr
 8000b58:	20000028 	.word	0x20000028

08000b5c <Timer3_VoidSetPreload>:
 8000b5c:	b480      	push	{r7}
 8000b5e:	b083      	sub	sp, #12
 8000b60:	af00      	add	r7, sp, #0
 8000b62:	4603      	mov	r3, r0
 8000b64:	71fb      	strb	r3, [r7, #7]
 8000b66:	4a04      	ldr	r2, [pc, #16]	; (8000b78 <Timer3_VoidSetPreload+0x1c>)
 8000b68:	79fb      	ldrb	r3, [r7, #7]
 8000b6a:	6013      	str	r3, [r2, #0]
 8000b6c:	bf00      	nop
 8000b6e:	370c      	adds	r7, #12
 8000b70:	46bd      	mov	sp, r7
 8000b72:	bc80      	pop	{r7}
 8000b74:	4770      	bx	lr
 8000b76:	bf00      	nop
 8000b78:	40000424 	.word	0x40000424

08000b7c <Timer3_VoidEnableIntOnEachChannle>:
 8000b7c:	b480      	push	{r7}
 8000b7e:	b083      	sub	sp, #12
 8000b80:	af00      	add	r7, sp, #0
 8000b82:	4603      	mov	r3, r0
 8000b84:	71fb      	strb	r3, [r7, #7]
 8000b86:	79fb      	ldrb	r3, [r7, #7]
 8000b88:	2b03      	cmp	r3, #3
 8000b8a:	d827      	bhi.n	8000bdc <Timer3_VoidEnableIntOnEachChannle+0x60>
 8000b8c:	a201      	add	r2, pc, #4	; (adr r2, 8000b94 <Timer3_VoidEnableIntOnEachChannle+0x18>)
 8000b8e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000b92:	bf00      	nop
 8000b94:	08000ba5 	.word	0x08000ba5
 8000b98:	08000bb3 	.word	0x08000bb3
 8000b9c:	08000bc1 	.word	0x08000bc1
 8000ba0:	08000bcf 	.word	0x08000bcf
 8000ba4:	4b10      	ldr	r3, [pc, #64]	; (8000be8 <Timer3_VoidEnableIntOnEachChannle+0x6c>)
 8000ba6:	681b      	ldr	r3, [r3, #0]
 8000ba8:	4a0f      	ldr	r2, [pc, #60]	; (8000be8 <Timer3_VoidEnableIntOnEachChannle+0x6c>)
 8000baa:	f043 0302 	orr.w	r3, r3, #2
 8000bae:	6013      	str	r3, [r2, #0]
 8000bb0:	e014      	b.n	8000bdc <Timer3_VoidEnableIntOnEachChannle+0x60>
 8000bb2:	4b0d      	ldr	r3, [pc, #52]	; (8000be8 <Timer3_VoidEnableIntOnEachChannle+0x6c>)
 8000bb4:	681b      	ldr	r3, [r3, #0]
 8000bb6:	4a0c      	ldr	r2, [pc, #48]	; (8000be8 <Timer3_VoidEnableIntOnEachChannle+0x6c>)
 8000bb8:	f043 0304 	orr.w	r3, r3, #4
 8000bbc:	6013      	str	r3, [r2, #0]
 8000bbe:	e00d      	b.n	8000bdc <Timer3_VoidEnableIntOnEachChannle+0x60>
 8000bc0:	4b09      	ldr	r3, [pc, #36]	; (8000be8 <Timer3_VoidEnableIntOnEachChannle+0x6c>)
 8000bc2:	681b      	ldr	r3, [r3, #0]
 8000bc4:	4a08      	ldr	r2, [pc, #32]	; (8000be8 <Timer3_VoidEnableIntOnEachChannle+0x6c>)
 8000bc6:	f043 0308 	orr.w	r3, r3, #8
 8000bca:	6013      	str	r3, [r2, #0]
 8000bcc:	e006      	b.n	8000bdc <Timer3_VoidEnableIntOnEachChannle+0x60>
 8000bce:	4b06      	ldr	r3, [pc, #24]	; (8000be8 <Timer3_VoidEnableIntOnEachChannle+0x6c>)
 8000bd0:	681b      	ldr	r3, [r3, #0]
 8000bd2:	4a05      	ldr	r2, [pc, #20]	; (8000be8 <Timer3_VoidEnableIntOnEachChannle+0x6c>)
 8000bd4:	f043 0310 	orr.w	r3, r3, #16
 8000bd8:	6013      	str	r3, [r2, #0]
 8000bda:	bf00      	nop
 8000bdc:	bf00      	nop
 8000bde:	370c      	adds	r7, #12
 8000be0:	46bd      	mov	sp, r7
 8000be2:	bc80      	pop	{r7}
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop
 8000be8:	4000040c 	.word	0x4000040c

08000bec <Timer3_VoidDisableIntOnEachChannle>:
 8000bec:	b480      	push	{r7}
 8000bee:	b083      	sub	sp, #12
 8000bf0:	af00      	add	r7, sp, #0
 8000bf2:	4603      	mov	r3, r0
 8000bf4:	71fb      	strb	r3, [r7, #7]
 8000bf6:	79fb      	ldrb	r3, [r7, #7]
 8000bf8:	2b03      	cmp	r3, #3
 8000bfa:	d827      	bhi.n	8000c4c <Timer3_VoidDisableIntOnEachChannle+0x60>
 8000bfc:	a201      	add	r2, pc, #4	; (adr r2, 8000c04 <Timer3_VoidDisableIntOnEachChannle+0x18>)
 8000bfe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000c02:	bf00      	nop
 8000c04:	08000c15 	.word	0x08000c15
 8000c08:	08000c23 	.word	0x08000c23
 8000c0c:	08000c31 	.word	0x08000c31
 8000c10:	08000c3f 	.word	0x08000c3f
 8000c14:	4b10      	ldr	r3, [pc, #64]	; (8000c58 <Timer3_VoidDisableIntOnEachChannle+0x6c>)
 8000c16:	681b      	ldr	r3, [r3, #0]
 8000c18:	4a0f      	ldr	r2, [pc, #60]	; (8000c58 <Timer3_VoidDisableIntOnEachChannle+0x6c>)
 8000c1a:	f023 0302 	bic.w	r3, r3, #2
 8000c1e:	6013      	str	r3, [r2, #0]
 8000c20:	e014      	b.n	8000c4c <Timer3_VoidDisableIntOnEachChannle+0x60>
 8000c22:	4b0d      	ldr	r3, [pc, #52]	; (8000c58 <Timer3_VoidDisableIntOnEachChannle+0x6c>)
 8000c24:	681b      	ldr	r3, [r3, #0]
 8000c26:	4a0c      	ldr	r2, [pc, #48]	; (8000c58 <Timer3_VoidDisableIntOnEachChannle+0x6c>)
 8000c28:	f023 0304 	bic.w	r3, r3, #4
 8000c2c:	6013      	str	r3, [r2, #0]
 8000c2e:	e00d      	b.n	8000c4c <Timer3_VoidDisableIntOnEachChannle+0x60>
 8000c30:	4b09      	ldr	r3, [pc, #36]	; (8000c58 <Timer3_VoidDisableIntOnEachChannle+0x6c>)
 8000c32:	681b      	ldr	r3, [r3, #0]
 8000c34:	4a08      	ldr	r2, [pc, #32]	; (8000c58 <Timer3_VoidDisableIntOnEachChannle+0x6c>)
 8000c36:	f023 0308 	bic.w	r3, r3, #8
 8000c3a:	6013      	str	r3, [r2, #0]
 8000c3c:	e006      	b.n	8000c4c <Timer3_VoidDisableIntOnEachChannle+0x60>
 8000c3e:	4b06      	ldr	r3, [pc, #24]	; (8000c58 <Timer3_VoidDisableIntOnEachChannle+0x6c>)
 8000c40:	681b      	ldr	r3, [r3, #0]
 8000c42:	4a05      	ldr	r2, [pc, #20]	; (8000c58 <Timer3_VoidDisableIntOnEachChannle+0x6c>)
 8000c44:	f023 0310 	bic.w	r3, r3, #16
 8000c48:	6013      	str	r3, [r2, #0]
 8000c4a:	bf00      	nop
 8000c4c:	bf00      	nop
 8000c4e:	370c      	adds	r7, #12
 8000c50:	46bd      	mov	sp, r7
 8000c52:	bc80      	pop	{r7}
 8000c54:	4770      	bx	lr
 8000c56:	bf00      	nop
 8000c58:	4000040c 	.word	0x4000040c

08000c5c <Timer3_VoidChangePolarityOnEachChannle>:
 8000c5c:	b480      	push	{r7}
 8000c5e:	b083      	sub	sp, #12
 8000c60:	af00      	add	r7, sp, #0
 8000c62:	4603      	mov	r3, r0
 8000c64:	460a      	mov	r2, r1
 8000c66:	71fb      	strb	r3, [r7, #7]
 8000c68:	4613      	mov	r3, r2
 8000c6a:	71bb      	strb	r3, [r7, #6]
 8000c6c:	79bb      	ldrb	r3, [r7, #6]
 8000c6e:	2b00      	cmp	r3, #0
 8000c70:	d002      	beq.n	8000c78 <Timer3_VoidChangePolarityOnEachChannle+0x1c>
 8000c72:	2b01      	cmp	r3, #1
 8000c74:	d02b      	beq.n	8000cce <Timer3_VoidChangePolarityOnEachChannle+0x72>
 8000c76:	e059      	b.n	8000d2c <Timer3_VoidChangePolarityOnEachChannle+0xd0>
 8000c78:	79fb      	ldrb	r3, [r7, #7]
 8000c7a:	2b03      	cmp	r3, #3
 8000c7c:	d853      	bhi.n	8000d26 <Timer3_VoidChangePolarityOnEachChannle+0xca>
 8000c7e:	a201      	add	r2, pc, #4	; (adr r2, 8000c84 <Timer3_VoidChangePolarityOnEachChannle+0x28>)
 8000c80:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000c84:	08000c95 	.word	0x08000c95
 8000c88:	08000ca3 	.word	0x08000ca3
 8000c8c:	08000cb1 	.word	0x08000cb1
 8000c90:	08000cbf 	.word	0x08000cbf
 8000c94:	4b28      	ldr	r3, [pc, #160]	; (8000d38 <Timer3_VoidChangePolarityOnEachChannle+0xdc>)
 8000c96:	681b      	ldr	r3, [r3, #0]
 8000c98:	4a27      	ldr	r2, [pc, #156]	; (8000d38 <Timer3_VoidChangePolarityOnEachChannle+0xdc>)
 8000c9a:	f023 0302 	bic.w	r3, r3, #2
 8000c9e:	6013      	str	r3, [r2, #0]
 8000ca0:	e014      	b.n	8000ccc <Timer3_VoidChangePolarityOnEachChannle+0x70>
 8000ca2:	4b25      	ldr	r3, [pc, #148]	; (8000d38 <Timer3_VoidChangePolarityOnEachChannle+0xdc>)
 8000ca4:	681b      	ldr	r3, [r3, #0]
 8000ca6:	4a24      	ldr	r2, [pc, #144]	; (8000d38 <Timer3_VoidChangePolarityOnEachChannle+0xdc>)
 8000ca8:	f023 0320 	bic.w	r3, r3, #32
 8000cac:	6013      	str	r3, [r2, #0]
 8000cae:	e00d      	b.n	8000ccc <Timer3_VoidChangePolarityOnEachChannle+0x70>
 8000cb0:	4b21      	ldr	r3, [pc, #132]	; (8000d38 <Timer3_VoidChangePolarityOnEachChannle+0xdc>)
 8000cb2:	681b      	ldr	r3, [r3, #0]
 8000cb4:	4a20      	ldr	r2, [pc, #128]	; (8000d38 <Timer3_VoidChangePolarityOnEachChannle+0xdc>)
 8000cb6:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8000cba:	6013      	str	r3, [r2, #0]
 8000cbc:	e006      	b.n	8000ccc <Timer3_VoidChangePolarityOnEachChannle+0x70>
 8000cbe:	4b1e      	ldr	r3, [pc, #120]	; (8000d38 <Timer3_VoidChangePolarityOnEachChannle+0xdc>)
 8000cc0:	681b      	ldr	r3, [r3, #0]
 8000cc2:	4a1d      	ldr	r2, [pc, #116]	; (8000d38 <Timer3_VoidChangePolarityOnEachChannle+0xdc>)
 8000cc4:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8000cc8:	6013      	str	r3, [r2, #0]
 8000cca:	bf00      	nop
 8000ccc:	e02b      	b.n	8000d26 <Timer3_VoidChangePolarityOnEachChannle+0xca>
 8000cce:	79fb      	ldrb	r3, [r7, #7]
 8000cd0:	2b03      	cmp	r3, #3
 8000cd2:	d82a      	bhi.n	8000d2a <Timer3_VoidChangePolarityOnEachChannle+0xce>
 8000cd4:	a201      	add	r2, pc, #4	; (adr r2, 8000cdc <Timer3_VoidChangePolarityOnEachChannle+0x80>)
 8000cd6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000cda:	bf00      	nop
 8000cdc:	08000ced 	.word	0x08000ced
 8000ce0:	08000cfb 	.word	0x08000cfb
 8000ce4:	08000d09 	.word	0x08000d09
 8000ce8:	08000d17 	.word	0x08000d17
 8000cec:	4b12      	ldr	r3, [pc, #72]	; (8000d38 <Timer3_VoidChangePolarityOnEachChannle+0xdc>)
 8000cee:	681b      	ldr	r3, [r3, #0]
 8000cf0:	4a11      	ldr	r2, [pc, #68]	; (8000d38 <Timer3_VoidChangePolarityOnEachChannle+0xdc>)
 8000cf2:	f043 0302 	orr.w	r3, r3, #2
 8000cf6:	6013      	str	r3, [r2, #0]
 8000cf8:	e014      	b.n	8000d24 <Timer3_VoidChangePolarityOnEachChannle+0xc8>
 8000cfa:	4b0f      	ldr	r3, [pc, #60]	; (8000d38 <Timer3_VoidChangePolarityOnEachChannle+0xdc>)
 8000cfc:	681b      	ldr	r3, [r3, #0]
 8000cfe:	4a0e      	ldr	r2, [pc, #56]	; (8000d38 <Timer3_VoidChangePolarityOnEachChannle+0xdc>)
 8000d00:	f043 0320 	orr.w	r3, r3, #32
 8000d04:	6013      	str	r3, [r2, #0]
 8000d06:	e00d      	b.n	8000d24 <Timer3_VoidChangePolarityOnEachChannle+0xc8>
 8000d08:	4b0b      	ldr	r3, [pc, #44]	; (8000d38 <Timer3_VoidChangePolarityOnEachChannle+0xdc>)
 8000d0a:	681b      	ldr	r3, [r3, #0]
 8000d0c:	4a0a      	ldr	r2, [pc, #40]	; (8000d38 <Timer3_VoidChangePolarityOnEachChannle+0xdc>)
 8000d0e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000d12:	6013      	str	r3, [r2, #0]
 8000d14:	e006      	b.n	8000d24 <Timer3_VoidChangePolarityOnEachChannle+0xc8>
 8000d16:	4b08      	ldr	r3, [pc, #32]	; (8000d38 <Timer3_VoidChangePolarityOnEachChannle+0xdc>)
 8000d18:	681b      	ldr	r3, [r3, #0]
 8000d1a:	4a07      	ldr	r2, [pc, #28]	; (8000d38 <Timer3_VoidChangePolarityOnEachChannle+0xdc>)
 8000d1c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000d20:	6013      	str	r3, [r2, #0]
 8000d22:	bf00      	nop
 8000d24:	e001      	b.n	8000d2a <Timer3_VoidChangePolarityOnEachChannle+0xce>
 8000d26:	bf00      	nop
 8000d28:	e000      	b.n	8000d2c <Timer3_VoidChangePolarityOnEachChannle+0xd0>
 8000d2a:	bf00      	nop
 8000d2c:	bf00      	nop
 8000d2e:	370c      	adds	r7, #12
 8000d30:	46bd      	mov	sp, r7
 8000d32:	bc80      	pop	{r7}
 8000d34:	4770      	bx	lr
 8000d36:	bf00      	nop
 8000d38:	40000420 	.word	0x40000420

08000d3c <Timer3_VoidGetCapturedValue>:
 8000d3c:	b480      	push	{r7}
 8000d3e:	b087      	sub	sp, #28
 8000d40:	af00      	add	r7, sp, #0
 8000d42:	4603      	mov	r3, r0
 8000d44:	71fb      	strb	r3, [r7, #7]
 8000d46:	79fb      	ldrb	r3, [r7, #7]
 8000d48:	2b03      	cmp	r3, #3
 8000d4a:	d81f      	bhi.n	8000d8c <Timer3_VoidGetCapturedValue+0x50>
 8000d4c:	a201      	add	r2, pc, #4	; (adr r2, 8000d54 <Timer3_VoidGetCapturedValue+0x18>)
 8000d4e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000d52:	bf00      	nop
 8000d54:	08000d65 	.word	0x08000d65
 8000d58:	08000d6f 	.word	0x08000d6f
 8000d5c:	08000d79 	.word	0x08000d79
 8000d60:	08000d83 	.word	0x08000d83
 8000d64:	4b0c      	ldr	r3, [pc, #48]	; (8000d98 <Timer3_VoidGetCapturedValue+0x5c>)
 8000d66:	681b      	ldr	r3, [r3, #0]
 8000d68:	60bb      	str	r3, [r7, #8]
 8000d6a:	68bb      	ldr	r3, [r7, #8]
 8000d6c:	e00e      	b.n	8000d8c <Timer3_VoidGetCapturedValue+0x50>
 8000d6e:	4b0b      	ldr	r3, [pc, #44]	; (8000d9c <Timer3_VoidGetCapturedValue+0x60>)
 8000d70:	681b      	ldr	r3, [r3, #0]
 8000d72:	60fb      	str	r3, [r7, #12]
 8000d74:	68fb      	ldr	r3, [r7, #12]
 8000d76:	e009      	b.n	8000d8c <Timer3_VoidGetCapturedValue+0x50>
 8000d78:	4b09      	ldr	r3, [pc, #36]	; (8000da0 <Timer3_VoidGetCapturedValue+0x64>)
 8000d7a:	681b      	ldr	r3, [r3, #0]
 8000d7c:	613b      	str	r3, [r7, #16]
 8000d7e:	693b      	ldr	r3, [r7, #16]
 8000d80:	e004      	b.n	8000d8c <Timer3_VoidGetCapturedValue+0x50>
 8000d82:	4b08      	ldr	r3, [pc, #32]	; (8000da4 <Timer3_VoidGetCapturedValue+0x68>)
 8000d84:	681b      	ldr	r3, [r3, #0]
 8000d86:	617b      	str	r3, [r7, #20]
 8000d88:	697b      	ldr	r3, [r7, #20]
 8000d8a:	e7ff      	b.n	8000d8c <Timer3_VoidGetCapturedValue+0x50>
 8000d8c:	4618      	mov	r0, r3
 8000d8e:	371c      	adds	r7, #28
 8000d90:	46bd      	mov	sp, r7
 8000d92:	bc80      	pop	{r7}
 8000d94:	4770      	bx	lr
 8000d96:	bf00      	nop
 8000d98:	40000434 	.word	0x40000434
 8000d9c:	40000438 	.word	0x40000438
 8000da0:	4000043c 	.word	0x4000043c
 8000da4:	40000440 	.word	0x40000440

08000da8 <TIM3_IRQHandler>:
 8000da8:	b580      	push	{r7, lr}
 8000daa:	af00      	add	r7, sp, #0
 8000dac:	4b04      	ldr	r3, [pc, #16]	; (8000dc0 <TIM3_IRQHandler+0x18>)
 8000dae:	681b      	ldr	r3, [r3, #0]
 8000db0:	2b00      	cmp	r3, #0
 8000db2:	d002      	beq.n	8000dba <TIM3_IRQHandler+0x12>
 8000db4:	4b02      	ldr	r3, [pc, #8]	; (8000dc0 <TIM3_IRQHandler+0x18>)
 8000db6:	681b      	ldr	r3, [r3, #0]
 8000db8:	4798      	blx	r3
 8000dba:	bf00      	nop
 8000dbc:	bd80      	pop	{r7, pc}
 8000dbe:	bf00      	nop
 8000dc0:	20000028 	.word	0x20000028

08000dc4 <TIMER4_Void_PwmInit>:
 8000dc4:	b480      	push	{r7}
 8000dc6:	b083      	sub	sp, #12
 8000dc8:	af00      	add	r7, sp, #0
 8000dca:	4603      	mov	r3, r0
 8000dcc:	71fb      	strb	r3, [r7, #7]
 8000dce:	4b5b      	ldr	r3, [pc, #364]	; (8000f3c <TIMER4_Void_PwmInit+0x178>)
 8000dd0:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
 8000dd4:	601a      	str	r2, [r3, #0]
 8000dd6:	4b5a      	ldr	r3, [pc, #360]	; (8000f40 <TIMER4_Void_PwmInit+0x17c>)
 8000dd8:	681b      	ldr	r3, [r3, #0]
 8000dda:	4a59      	ldr	r2, [pc, #356]	; (8000f40 <TIMER4_Void_PwmInit+0x17c>)
 8000ddc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000de0:	6013      	str	r3, [r2, #0]
 8000de2:	4b58      	ldr	r3, [pc, #352]	; (8000f44 <TIMER4_Void_PwmInit+0x180>)
 8000de4:	22ff      	movs	r2, #255	; 0xff
 8000de6:	601a      	str	r2, [r3, #0]
 8000de8:	79fb      	ldrb	r3, [r7, #7]
 8000dea:	3b01      	subs	r3, #1
 8000dec:	2b03      	cmp	r3, #3
 8000dee:	f200 8087 	bhi.w	8000f00 <TIMER4_Void_PwmInit+0x13c>
 8000df2:	a201      	add	r2, pc, #4	; (adr r2, 8000df8 <TIMER4_Void_PwmInit+0x34>)
 8000df4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000df8:	08000e09 	.word	0x08000e09
 8000dfc:	08000e47 	.word	0x08000e47
 8000e00:	08000e85 	.word	0x08000e85
 8000e04:	08000ec3 	.word	0x08000ec3
 8000e08:	4b4f      	ldr	r3, [pc, #316]	; (8000f48 <TIMER4_Void_PwmInit+0x184>)
 8000e0a:	681b      	ldr	r3, [r3, #0]
 8000e0c:	4a4e      	ldr	r2, [pc, #312]	; (8000f48 <TIMER4_Void_PwmInit+0x184>)
 8000e0e:	f043 0308 	orr.w	r3, r3, #8
 8000e12:	6013      	str	r3, [r2, #0]
 8000e14:	4b4c      	ldr	r3, [pc, #304]	; (8000f48 <TIMER4_Void_PwmInit+0x184>)
 8000e16:	681b      	ldr	r3, [r3, #0]
 8000e18:	4a4b      	ldr	r2, [pc, #300]	; (8000f48 <TIMER4_Void_PwmInit+0x184>)
 8000e1a:	f023 0310 	bic.w	r3, r3, #16
 8000e1e:	6013      	str	r3, [r2, #0]
 8000e20:	4b49      	ldr	r3, [pc, #292]	; (8000f48 <TIMER4_Void_PwmInit+0x184>)
 8000e22:	681b      	ldr	r3, [r3, #0]
 8000e24:	4a48      	ldr	r2, [pc, #288]	; (8000f48 <TIMER4_Void_PwmInit+0x184>)
 8000e26:	f043 0320 	orr.w	r3, r3, #32
 8000e2a:	6013      	str	r3, [r2, #0]
 8000e2c:	4b46      	ldr	r3, [pc, #280]	; (8000f48 <TIMER4_Void_PwmInit+0x184>)
 8000e2e:	681b      	ldr	r3, [r3, #0]
 8000e30:	4a45      	ldr	r2, [pc, #276]	; (8000f48 <TIMER4_Void_PwmInit+0x184>)
 8000e32:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000e36:	6013      	str	r3, [r2, #0]
 8000e38:	4b44      	ldr	r3, [pc, #272]	; (8000f4c <TIMER4_Void_PwmInit+0x188>)
 8000e3a:	681b      	ldr	r3, [r3, #0]
 8000e3c:	4a43      	ldr	r2, [pc, #268]	; (8000f4c <TIMER4_Void_PwmInit+0x188>)
 8000e3e:	f043 0301 	orr.w	r3, r3, #1
 8000e42:	6013      	str	r3, [r2, #0]
 8000e44:	e05d      	b.n	8000f02 <TIMER4_Void_PwmInit+0x13e>
 8000e46:	4b40      	ldr	r3, [pc, #256]	; (8000f48 <TIMER4_Void_PwmInit+0x184>)
 8000e48:	681b      	ldr	r3, [r3, #0]
 8000e4a:	4a3f      	ldr	r2, [pc, #252]	; (8000f48 <TIMER4_Void_PwmInit+0x184>)
 8000e4c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8000e50:	6013      	str	r3, [r2, #0]
 8000e52:	4b3d      	ldr	r3, [pc, #244]	; (8000f48 <TIMER4_Void_PwmInit+0x184>)
 8000e54:	681b      	ldr	r3, [r3, #0]
 8000e56:	4a3c      	ldr	r2, [pc, #240]	; (8000f48 <TIMER4_Void_PwmInit+0x184>)
 8000e58:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000e5c:	6013      	str	r3, [r2, #0]
 8000e5e:	4b3a      	ldr	r3, [pc, #232]	; (8000f48 <TIMER4_Void_PwmInit+0x184>)
 8000e60:	681b      	ldr	r3, [r3, #0]
 8000e62:	4a39      	ldr	r2, [pc, #228]	; (8000f48 <TIMER4_Void_PwmInit+0x184>)
 8000e64:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000e68:	6013      	str	r3, [r2, #0]
 8000e6a:	4b37      	ldr	r3, [pc, #220]	; (8000f48 <TIMER4_Void_PwmInit+0x184>)
 8000e6c:	681b      	ldr	r3, [r3, #0]
 8000e6e:	4a36      	ldr	r2, [pc, #216]	; (8000f48 <TIMER4_Void_PwmInit+0x184>)
 8000e70:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000e74:	6013      	str	r3, [r2, #0]
 8000e76:	4b35      	ldr	r3, [pc, #212]	; (8000f4c <TIMER4_Void_PwmInit+0x188>)
 8000e78:	681b      	ldr	r3, [r3, #0]
 8000e7a:	4a34      	ldr	r2, [pc, #208]	; (8000f4c <TIMER4_Void_PwmInit+0x188>)
 8000e7c:	f043 0310 	orr.w	r3, r3, #16
 8000e80:	6013      	str	r3, [r2, #0]
 8000e82:	e03e      	b.n	8000f02 <TIMER4_Void_PwmInit+0x13e>
 8000e84:	4b32      	ldr	r3, [pc, #200]	; (8000f50 <TIMER4_Void_PwmInit+0x18c>)
 8000e86:	681b      	ldr	r3, [r3, #0]
 8000e88:	4a31      	ldr	r2, [pc, #196]	; (8000f50 <TIMER4_Void_PwmInit+0x18c>)
 8000e8a:	f043 0308 	orr.w	r3, r3, #8
 8000e8e:	6013      	str	r3, [r2, #0]
 8000e90:	4b2f      	ldr	r3, [pc, #188]	; (8000f50 <TIMER4_Void_PwmInit+0x18c>)
 8000e92:	681b      	ldr	r3, [r3, #0]
 8000e94:	4a2e      	ldr	r2, [pc, #184]	; (8000f50 <TIMER4_Void_PwmInit+0x18c>)
 8000e96:	f023 0310 	bic.w	r3, r3, #16
 8000e9a:	6013      	str	r3, [r2, #0]
 8000e9c:	4b2c      	ldr	r3, [pc, #176]	; (8000f50 <TIMER4_Void_PwmInit+0x18c>)
 8000e9e:	681b      	ldr	r3, [r3, #0]
 8000ea0:	4a2b      	ldr	r2, [pc, #172]	; (8000f50 <TIMER4_Void_PwmInit+0x18c>)
 8000ea2:	f043 0320 	orr.w	r3, r3, #32
 8000ea6:	6013      	str	r3, [r2, #0]
 8000ea8:	4b29      	ldr	r3, [pc, #164]	; (8000f50 <TIMER4_Void_PwmInit+0x18c>)
 8000eaa:	681b      	ldr	r3, [r3, #0]
 8000eac:	4a28      	ldr	r2, [pc, #160]	; (8000f50 <TIMER4_Void_PwmInit+0x18c>)
 8000eae:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000eb2:	6013      	str	r3, [r2, #0]
 8000eb4:	4b25      	ldr	r3, [pc, #148]	; (8000f4c <TIMER4_Void_PwmInit+0x188>)
 8000eb6:	681b      	ldr	r3, [r3, #0]
 8000eb8:	4a24      	ldr	r2, [pc, #144]	; (8000f4c <TIMER4_Void_PwmInit+0x188>)
 8000eba:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000ebe:	6013      	str	r3, [r2, #0]
 8000ec0:	e01f      	b.n	8000f02 <TIMER4_Void_PwmInit+0x13e>
 8000ec2:	4b23      	ldr	r3, [pc, #140]	; (8000f50 <TIMER4_Void_PwmInit+0x18c>)
 8000ec4:	681b      	ldr	r3, [r3, #0]
 8000ec6:	4a22      	ldr	r2, [pc, #136]	; (8000f50 <TIMER4_Void_PwmInit+0x18c>)
 8000ec8:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8000ecc:	6013      	str	r3, [r2, #0]
 8000ece:	4b20      	ldr	r3, [pc, #128]	; (8000f50 <TIMER4_Void_PwmInit+0x18c>)
 8000ed0:	681b      	ldr	r3, [r3, #0]
 8000ed2:	4a1f      	ldr	r2, [pc, #124]	; (8000f50 <TIMER4_Void_PwmInit+0x18c>)
 8000ed4:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000ed8:	6013      	str	r3, [r2, #0]
 8000eda:	4b1d      	ldr	r3, [pc, #116]	; (8000f50 <TIMER4_Void_PwmInit+0x18c>)
 8000edc:	681b      	ldr	r3, [r3, #0]
 8000ede:	4a1c      	ldr	r2, [pc, #112]	; (8000f50 <TIMER4_Void_PwmInit+0x18c>)
 8000ee0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000ee4:	6013      	str	r3, [r2, #0]
 8000ee6:	4b1a      	ldr	r3, [pc, #104]	; (8000f50 <TIMER4_Void_PwmInit+0x18c>)
 8000ee8:	681b      	ldr	r3, [r3, #0]
 8000eea:	4a19      	ldr	r2, [pc, #100]	; (8000f50 <TIMER4_Void_PwmInit+0x18c>)
 8000eec:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000ef0:	6013      	str	r3, [r2, #0]
 8000ef2:	4b16      	ldr	r3, [pc, #88]	; (8000f4c <TIMER4_Void_PwmInit+0x188>)
 8000ef4:	681b      	ldr	r3, [r3, #0]
 8000ef6:	4a15      	ldr	r2, [pc, #84]	; (8000f4c <TIMER4_Void_PwmInit+0x188>)
 8000ef8:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000efc:	6013      	str	r3, [r2, #0]
 8000efe:	e000      	b.n	8000f02 <TIMER4_Void_PwmInit+0x13e>
 8000f00:	bf00      	nop
 8000f02:	4b13      	ldr	r3, [pc, #76]	; (8000f50 <TIMER4_Void_PwmInit+0x18c>)
 8000f04:	681b      	ldr	r3, [r3, #0]
 8000f06:	4a12      	ldr	r2, [pc, #72]	; (8000f50 <TIMER4_Void_PwmInit+0x18c>)
 8000f08:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000f0c:	6013      	str	r3, [r2, #0]
 8000f0e:	4b10      	ldr	r3, [pc, #64]	; (8000f50 <TIMER4_Void_PwmInit+0x18c>)
 8000f10:	681b      	ldr	r3, [r3, #0]
 8000f12:	4a0f      	ldr	r2, [pc, #60]	; (8000f50 <TIMER4_Void_PwmInit+0x18c>)
 8000f14:	f043 0304 	orr.w	r3, r3, #4
 8000f18:	6013      	str	r3, [r2, #0]
 8000f1a:	4b0d      	ldr	r3, [pc, #52]	; (8000f50 <TIMER4_Void_PwmInit+0x18c>)
 8000f1c:	681b      	ldr	r3, [r3, #0]
 8000f1e:	4a0c      	ldr	r2, [pc, #48]	; (8000f50 <TIMER4_Void_PwmInit+0x18c>)
 8000f20:	f043 0308 	orr.w	r3, r3, #8
 8000f24:	6013      	str	r3, [r2, #0]
 8000f26:	4b06      	ldr	r3, [pc, #24]	; (8000f40 <TIMER4_Void_PwmInit+0x17c>)
 8000f28:	681b      	ldr	r3, [r3, #0]
 8000f2a:	4a05      	ldr	r2, [pc, #20]	; (8000f40 <TIMER4_Void_PwmInit+0x17c>)
 8000f2c:	f043 0301 	orr.w	r3, r3, #1
 8000f30:	6013      	str	r3, [r2, #0]
 8000f32:	bf00      	nop
 8000f34:	370c      	adds	r7, #12
 8000f36:	46bd      	mov	sp, r7
 8000f38:	bc80      	pop	{r7}
 8000f3a:	4770      	bx	lr
 8000f3c:	40000828 	.word	0x40000828
 8000f40:	40000800 	.word	0x40000800
 8000f44:	4000082c 	.word	0x4000082c
 8000f48:	40000818 	.word	0x40000818
 8000f4c:	40000820 	.word	0x40000820
 8000f50:	4000081c 	.word	0x4000081c

08000f54 <TIMER4_Void_PwmSetDutyCycle>:
 8000f54:	b480      	push	{r7}
 8000f56:	b083      	sub	sp, #12
 8000f58:	af00      	add	r7, sp, #0
 8000f5a:	4603      	mov	r3, r0
 8000f5c:	6039      	str	r1, [r7, #0]
 8000f5e:	71fb      	strb	r3, [r7, #7]
 8000f60:	79fb      	ldrb	r3, [r7, #7]
 8000f62:	3b01      	subs	r3, #1
 8000f64:	2b03      	cmp	r3, #3
 8000f66:	d81b      	bhi.n	8000fa0 <TIMER4_Void_PwmSetDutyCycle+0x4c>
 8000f68:	a201      	add	r2, pc, #4	; (adr r2, 8000f70 <TIMER4_Void_PwmSetDutyCycle+0x1c>)
 8000f6a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000f6e:	bf00      	nop
 8000f70:	08000f81 	.word	0x08000f81
 8000f74:	08000f89 	.word	0x08000f89
 8000f78:	08000f91 	.word	0x08000f91
 8000f7c:	08000f99 	.word	0x08000f99
 8000f80:	4a0a      	ldr	r2, [pc, #40]	; (8000fac <TIMER4_Void_PwmSetDutyCycle+0x58>)
 8000f82:	683b      	ldr	r3, [r7, #0]
 8000f84:	6013      	str	r3, [r2, #0]
 8000f86:	e00c      	b.n	8000fa2 <TIMER4_Void_PwmSetDutyCycle+0x4e>
 8000f88:	4a09      	ldr	r2, [pc, #36]	; (8000fb0 <TIMER4_Void_PwmSetDutyCycle+0x5c>)
 8000f8a:	683b      	ldr	r3, [r7, #0]
 8000f8c:	6013      	str	r3, [r2, #0]
 8000f8e:	e008      	b.n	8000fa2 <TIMER4_Void_PwmSetDutyCycle+0x4e>
 8000f90:	4a08      	ldr	r2, [pc, #32]	; (8000fb4 <TIMER4_Void_PwmSetDutyCycle+0x60>)
 8000f92:	683b      	ldr	r3, [r7, #0]
 8000f94:	6013      	str	r3, [r2, #0]
 8000f96:	e004      	b.n	8000fa2 <TIMER4_Void_PwmSetDutyCycle+0x4e>
 8000f98:	4a07      	ldr	r2, [pc, #28]	; (8000fb8 <TIMER4_Void_PwmSetDutyCycle+0x64>)
 8000f9a:	683b      	ldr	r3, [r7, #0]
 8000f9c:	6013      	str	r3, [r2, #0]
 8000f9e:	e000      	b.n	8000fa2 <TIMER4_Void_PwmSetDutyCycle+0x4e>
 8000fa0:	bf00      	nop
 8000fa2:	bf00      	nop
 8000fa4:	370c      	adds	r7, #12
 8000fa6:	46bd      	mov	sp, r7
 8000fa8:	bc80      	pop	{r7}
 8000faa:	4770      	bx	lr
 8000fac:	40000834 	.word	0x40000834
 8000fb0:	40000838 	.word	0x40000838
 8000fb4:	4000083c 	.word	0x4000083c
 8000fb8:	40000840 	.word	0x40000840

08000fbc <MUSART_VidInit>:
 8000fbc:	b480      	push	{r7}
 8000fbe:	b083      	sub	sp, #12
 8000fc0:	af00      	add	r7, sp, #0
 8000fc2:	2334      	movs	r3, #52	; 0x34
 8000fc4:	607b      	str	r3, [r7, #4]
 8000fc6:	2380      	movs	r3, #128	; 0x80
 8000fc8:	603b      	str	r3, [r7, #0]
 8000fca:	683b      	ldr	r3, [r7, #0]
 8000fcc:	f240 52dc 	movw	r2, #1500	; 0x5dc
 8000fd0:	4293      	cmp	r3, r2
 8000fd2:	d904      	bls.n	8000fde <MUSART_VidInit+0x22>
 8000fd4:	687b      	ldr	r3, [r7, #4]
 8000fd6:	3301      	adds	r3, #1
 8000fd8:	607b      	str	r3, [r7, #4]
 8000fda:	2300      	movs	r3, #0
 8000fdc:	603b      	str	r3, [r7, #0]
 8000fde:	4b27      	ldr	r3, [pc, #156]	; (800107c <MUSART_VidInit+0xc0>)
 8000fe0:	2200      	movs	r2, #0
 8000fe2:	601a      	str	r2, [r3, #0]
 8000fe4:	4b25      	ldr	r3, [pc, #148]	; (800107c <MUSART_VidInit+0xc0>)
 8000fe6:	68db      	ldr	r3, [r3, #12]
 8000fe8:	4a24      	ldr	r2, [pc, #144]	; (800107c <MUSART_VidInit+0xc0>)
 8000fea:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000fee:	60d3      	str	r3, [r2, #12]
 8000ff0:	4b22      	ldr	r3, [pc, #136]	; (800107c <MUSART_VidInit+0xc0>)
 8000ff2:	68db      	ldr	r3, [r3, #12]
 8000ff4:	4a21      	ldr	r2, [pc, #132]	; (800107c <MUSART_VidInit+0xc0>)
 8000ff6:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8000ffa:	60d3      	str	r3, [r2, #12]
 8000ffc:	4b1f      	ldr	r3, [pc, #124]	; (800107c <MUSART_VidInit+0xc0>)
 8000ffe:	68db      	ldr	r3, [r3, #12]
 8001000:	4a1e      	ldr	r2, [pc, #120]	; (800107c <MUSART_VidInit+0xc0>)
 8001002:	f023 0320 	bic.w	r3, r3, #32
 8001006:	60d3      	str	r3, [r2, #12]
 8001008:	4b1c      	ldr	r3, [pc, #112]	; (800107c <MUSART_VidInit+0xc0>)
 800100a:	68db      	ldr	r3, [r3, #12]
 800100c:	4a1b      	ldr	r2, [pc, #108]	; (800107c <MUSART_VidInit+0xc0>)
 800100e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8001012:	60d3      	str	r3, [r2, #12]
 8001014:	4b19      	ldr	r3, [pc, #100]	; (800107c <MUSART_VidInit+0xc0>)
 8001016:	68db      	ldr	r3, [r3, #12]
 8001018:	4a18      	ldr	r2, [pc, #96]	; (800107c <MUSART_VidInit+0xc0>)
 800101a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800101e:	60d3      	str	r3, [r2, #12]
 8001020:	4b16      	ldr	r3, [pc, #88]	; (800107c <MUSART_VidInit+0xc0>)
 8001022:	68db      	ldr	r3, [r3, #12]
 8001024:	4a15      	ldr	r2, [pc, #84]	; (800107c <MUSART_VidInit+0xc0>)
 8001026:	f043 0308 	orr.w	r3, r3, #8
 800102a:	60d3      	str	r3, [r2, #12]
 800102c:	4b13      	ldr	r3, [pc, #76]	; (800107c <MUSART_VidInit+0xc0>)
 800102e:	68db      	ldr	r3, [r3, #12]
 8001030:	4a12      	ldr	r2, [pc, #72]	; (800107c <MUSART_VidInit+0xc0>)
 8001032:	f043 0304 	orr.w	r3, r3, #4
 8001036:	60d3      	str	r3, [r2, #12]
 8001038:	4b10      	ldr	r3, [pc, #64]	; (800107c <MUSART_VidInit+0xc0>)
 800103a:	691b      	ldr	r3, [r3, #16]
 800103c:	4a0f      	ldr	r2, [pc, #60]	; (800107c <MUSART_VidInit+0xc0>)
 800103e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001042:	6113      	str	r3, [r2, #16]
 8001044:	4b0d      	ldr	r3, [pc, #52]	; (800107c <MUSART_VidInit+0xc0>)
 8001046:	691b      	ldr	r3, [r3, #16]
 8001048:	4a0c      	ldr	r2, [pc, #48]	; (800107c <MUSART_VidInit+0xc0>)
 800104a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800104e:	6113      	str	r3, [r2, #16]
 8001050:	687b      	ldr	r3, [r7, #4]
 8001052:	011a      	lsls	r2, r3, #4
 8001054:	683b      	ldr	r3, [r7, #0]
 8001056:	490a      	ldr	r1, [pc, #40]	; (8001080 <MUSART_VidInit+0xc4>)
 8001058:	fba1 1303 	umull	r1, r3, r1, r3
 800105c:	095b      	lsrs	r3, r3, #5
 800105e:	4907      	ldr	r1, [pc, #28]	; (800107c <MUSART_VidInit+0xc0>)
 8001060:	4313      	orrs	r3, r2
 8001062:	608b      	str	r3, [r1, #8]
 8001064:	4b05      	ldr	r3, [pc, #20]	; (800107c <MUSART_VidInit+0xc0>)
 8001066:	68db      	ldr	r3, [r3, #12]
 8001068:	4a04      	ldr	r2, [pc, #16]	; (800107c <MUSART_VidInit+0xc0>)
 800106a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800106e:	60d3      	str	r3, [r2, #12]
 8001070:	bf00      	nop
 8001072:	370c      	adds	r7, #12
 8001074:	46bd      	mov	sp, r7
 8001076:	bc80      	pop	{r7}
 8001078:	4770      	bx	lr
 800107a:	bf00      	nop
 800107c:	40013800 	.word	0x40013800
 8001080:	51eb851f 	.word	0x51eb851f

08001084 <MUSART1_u8RecCharSynch>:
 8001084:	b480      	push	{r7}
 8001086:	b083      	sub	sp, #12
 8001088:	af00      	add	r7, sp, #0
 800108a:	2300      	movs	r3, #0
 800108c:	71fb      	strb	r3, [r7, #7]
 800108e:	2300      	movs	r3, #0
 8001090:	603b      	str	r3, [r7, #0]
 8001092:	4b0e      	ldr	r3, [pc, #56]	; (80010cc <MUSART1_u8RecCharSynch+0x48>)
 8001094:	681b      	ldr	r3, [r3, #0]
 8001096:	4a0d      	ldr	r2, [pc, #52]	; (80010cc <MUSART1_u8RecCharSynch+0x48>)
 8001098:	f023 0320 	bic.w	r3, r3, #32
 800109c:	6013      	str	r3, [r2, #0]
 800109e:	bf00      	nop
 80010a0:	4b0a      	ldr	r3, [pc, #40]	; (80010cc <MUSART1_u8RecCharSynch+0x48>)
 80010a2:	681b      	ldr	r3, [r3, #0]
 80010a4:	f003 0320 	and.w	r3, r3, #32
 80010a8:	2b00      	cmp	r3, #0
 80010aa:	d0f9      	beq.n	80010a0 <MUSART1_u8RecCharSynch+0x1c>
 80010ac:	683b      	ldr	r3, [r7, #0]
 80010ae:	4a08      	ldr	r2, [pc, #32]	; (80010d0 <MUSART1_u8RecCharSynch+0x4c>)
 80010b0:	4293      	cmp	r3, r2
 80010b2:	d102      	bne.n	80010ba <MUSART1_u8RecCharSynch+0x36>
 80010b4:	23ff      	movs	r3, #255	; 0xff
 80010b6:	71fb      	strb	r3, [r7, #7]
 80010b8:	e002      	b.n	80010c0 <MUSART1_u8RecCharSynch+0x3c>
 80010ba:	4b04      	ldr	r3, [pc, #16]	; (80010cc <MUSART1_u8RecCharSynch+0x48>)
 80010bc:	685b      	ldr	r3, [r3, #4]
 80010be:	71fb      	strb	r3, [r7, #7]
 80010c0:	79fb      	ldrb	r3, [r7, #7]
 80010c2:	4618      	mov	r0, r3
 80010c4:	370c      	adds	r7, #12
 80010c6:	46bd      	mov	sp, r7
 80010c8:	bc80      	pop	{r7}
 80010ca:	4770      	bx	lr
 80010cc:	40013800 	.word	0x40013800
 80010d0:	00895440 	.word	0x00895440

080010d4 <USART1_IRQHandler>:
 80010d4:	b580      	push	{r7, lr}
 80010d6:	af00      	add	r7, sp, #0
 80010d8:	4b03      	ldr	r3, [pc, #12]	; (80010e8 <USART1_IRQHandler+0x14>)
 80010da:	2200      	movs	r2, #0
 80010dc:	601a      	str	r2, [r3, #0]
 80010de:	4b03      	ldr	r3, [pc, #12]	; (80010ec <USART1_IRQHandler+0x18>)
 80010e0:	681b      	ldr	r3, [r3, #0]
 80010e2:	4798      	blx	r3
 80010e4:	bf00      	nop
 80010e6:	bd80      	pop	{r7, pc}
 80010e8:	40013800 	.word	0x40013800
 80010ec:	2000002c 	.word	0x2000002c

080010f0 <TIM2>:

u8 Received_distanceOne=0,Received_distanceTwo=0;
u8 Received_distanceThree=0,Received_distanceFour=0, Received_distanceFive = 0;

void TIM2(void)
{
 80010f0:	b580      	push	{r7, lr}
 80010f2:	af00      	add	r7, sp, #0
	Is_First_Captured2++;
 80010f4:	4b36      	ldr	r3, [pc, #216]	; (80011d0 <TIM2+0xe0>)
 80010f6:	781b      	ldrb	r3, [r3, #0]
 80010f8:	b2db      	uxtb	r3, r3
 80010fa:	3301      	adds	r3, #1
 80010fc:	b2da      	uxtb	r2, r3
 80010fe:	4b34      	ldr	r3, [pc, #208]	; (80011d0 <TIM2+0xe0>)
 8001100:	701a      	strb	r2, [r3, #0]
	Is_First_Captured1++;
 8001102:	4b34      	ldr	r3, [pc, #208]	; (80011d4 <TIM2+0xe4>)
 8001104:	781b      	ldrb	r3, [r3, #0]
 8001106:	b2db      	uxtb	r3, r3
 8001108:	3301      	adds	r3, #1
 800110a:	b2da      	uxtb	r2, r3
 800110c:	4b31      	ldr	r3, [pc, #196]	; (80011d4 <TIM2+0xe4>)
 800110e:	701a      	strb	r2, [r3, #0]
	if(GET_BIT(TIMER2_SR,1)==1)
 8001110:	4b31      	ldr	r3, [pc, #196]	; (80011d8 <TIM2+0xe8>)
 8001112:	681b      	ldr	r3, [r3, #0]
 8001114:	085b      	lsrs	r3, r3, #1
 8001116:	f003 0301 	and.w	r3, r3, #1
 800111a:	2b01      	cmp	r3, #1
 800111c:	d127      	bne.n	800116e <TIM2+0x7e>
	{
		SET_BIT(TIMER2_SR,1);
 800111e:	4b2e      	ldr	r3, [pc, #184]	; (80011d8 <TIM2+0xe8>)
 8001120:	681b      	ldr	r3, [r3, #0]
 8001122:	4a2d      	ldr	r2, [pc, #180]	; (80011d8 <TIM2+0xe8>)
 8001124:	f043 0302 	orr.w	r3, r3, #2
 8001128:	6013      	str	r3, [r2, #0]
		if(Is_First_Captured1==1)
 800112a:	4b2a      	ldr	r3, [pc, #168]	; (80011d4 <TIM2+0xe4>)
 800112c:	781b      	ldrb	r3, [r3, #0]
 800112e:	b2db      	uxtb	r3, r3
 8001130:	2b01      	cmp	r3, #1
 8001132:	d10a      	bne.n	800114a <TIM2+0x5a>
		{

			IC1_Val1=Timer2_VoidGetCapturedValue(Channle1);
 8001134:	2000      	movs	r0, #0
 8001136:	f7ff fc1d 	bl	8000974 <Timer2_VoidGetCapturedValue>
 800113a:	4603      	mov	r3, r0
 800113c:	4a27      	ldr	r2, [pc, #156]	; (80011dc <TIM2+0xec>)
 800113e:	6013      	str	r3, [r2, #0]
			//Is_First_Captured = 1;  // set the first captured as true
			// Now change the polarity to falling edge

			Timer2_VoidChangePolarityOnEachChannle(Channle1,TIMER2_FALLING_EDGE);
 8001140:	2101      	movs	r1, #1
 8001142:	2000      	movs	r0, #0
 8001144:	f7ff fbd6 	bl	80008f4 <Timer2_VoidChangePolarityOnEachChannle>
 8001148:	e011      	b.n	800116e <TIM2+0x7e>
		}
		else if (Is_First_Captured1==2)   // if the first is already captured
 800114a:	4b22      	ldr	r3, [pc, #136]	; (80011d4 <TIM2+0xe4>)
 800114c:	781b      	ldrb	r3, [r3, #0]
 800114e:	b2db      	uxtb	r3, r3
 8001150:	2b02      	cmp	r3, #2
 8001152:	d10c      	bne.n	800116e <TIM2+0x7e>
		{
			IC1_Val2 = Timer2_VoidGetCapturedValue(Channle1) ; // read second value
 8001154:	2000      	movs	r0, #0
 8001156:	f7ff fc0d 	bl	8000974 <Timer2_VoidGetCapturedValue>
 800115a:	4603      	mov	r3, r0
 800115c:	4a20      	ldr	r2, [pc, #128]	; (80011e0 <TIM2+0xf0>)
 800115e:	6013      	str	r3, [r2, #0]

			// Now change the polarity to rising edge

			Timer2_VoidChangePolarityOnEachChannle(Channle1,TIMER2_RISING_EDGE);
 8001160:	2100      	movs	r1, #0
 8001162:	2000      	movs	r0, #0
 8001164:	f7ff fbc6 	bl	80008f4 <Timer2_VoidChangePolarityOnEachChannle>
			// disable capture interrupt on each channel
			Timer2_VoidDisableIntOnEachChannle(Channle1);
 8001168:	2000      	movs	r0, #0
 800116a:	f7ff fba3 	bl	80008b4 <Timer2_VoidDisableIntOnEachChannle>
		}
	}
	if(GET_BIT(TIMER2_SR,2)==1)
 800116e:	4b1a      	ldr	r3, [pc, #104]	; (80011d8 <TIM2+0xe8>)
 8001170:	681b      	ldr	r3, [r3, #0]
 8001172:	089b      	lsrs	r3, r3, #2
 8001174:	f003 0301 	and.w	r3, r3, #1
 8001178:	2b01      	cmp	r3, #1
 800117a:	d127      	bne.n	80011cc <TIM2+0xdc>
	{

		SET_BIT(TIMER2_SR,2);
 800117c:	4b16      	ldr	r3, [pc, #88]	; (80011d8 <TIM2+0xe8>)
 800117e:	681b      	ldr	r3, [r3, #0]
 8001180:	4a15      	ldr	r2, [pc, #84]	; (80011d8 <TIM2+0xe8>)
 8001182:	f043 0304 	orr.w	r3, r3, #4
 8001186:	6013      	str	r3, [r2, #0]

		if(Is_First_Captured2==1)
 8001188:	4b11      	ldr	r3, [pc, #68]	; (80011d0 <TIM2+0xe0>)
 800118a:	781b      	ldrb	r3, [r3, #0]
 800118c:	b2db      	uxtb	r3, r3
 800118e:	2b01      	cmp	r3, #1
 8001190:	d10a      	bne.n	80011a8 <TIM2+0xb8>
		{

			IC2_Val1=Timer2_VoidGetCapturedValue(Channle2);
 8001192:	2001      	movs	r0, #1
 8001194:	f7ff fbee 	bl	8000974 <Timer2_VoidGetCapturedValue>
 8001198:	4603      	mov	r3, r0
 800119a:	4a12      	ldr	r2, [pc, #72]	; (80011e4 <TIM2+0xf4>)
 800119c:	6013      	str	r3, [r2, #0]
			//Is_First_Captured = 1;  // set the first captured as true
			// Now change the polarity to falling edge

			Timer2_VoidChangePolarityOnEachChannle(Channle2,TIMER2_FALLING_EDGE);
 800119e:	2101      	movs	r1, #1
 80011a0:	2001      	movs	r0, #1
 80011a2:	f7ff fba7 	bl	80008f4 <Timer2_VoidChangePolarityOnEachChannle>
			Timer2_VoidChangePolarityOnEachChannle(Channle2,TIMER2_RISING_EDGE);
			// disable capture interrupt on each channel
			Timer2_VoidDisableIntOnEachChannle(Channle2);
		}
	}
}
 80011a6:	e011      	b.n	80011cc <TIM2+0xdc>
		else if (Is_First_Captured2==2)   // if the first is already captured
 80011a8:	4b09      	ldr	r3, [pc, #36]	; (80011d0 <TIM2+0xe0>)
 80011aa:	781b      	ldrb	r3, [r3, #0]
 80011ac:	b2db      	uxtb	r3, r3
 80011ae:	2b02      	cmp	r3, #2
 80011b0:	d10c      	bne.n	80011cc <TIM2+0xdc>
			IC2_Val2 = Timer2_VoidGetCapturedValue(Channle2) ; // read second value
 80011b2:	2001      	movs	r0, #1
 80011b4:	f7ff fbde 	bl	8000974 <Timer2_VoidGetCapturedValue>
 80011b8:	4603      	mov	r3, r0
 80011ba:	4a0b      	ldr	r2, [pc, #44]	; (80011e8 <TIM2+0xf8>)
 80011bc:	6013      	str	r3, [r2, #0]
			Timer2_VoidChangePolarityOnEachChannle(Channle2,TIMER2_RISING_EDGE);
 80011be:	2100      	movs	r1, #0
 80011c0:	2001      	movs	r0, #1
 80011c2:	f7ff fb97 	bl	80008f4 <Timer2_VoidChangePolarityOnEachChannle>
			Timer2_VoidDisableIntOnEachChannle(Channle2);
 80011c6:	2001      	movs	r0, #1
 80011c8:	f7ff fb74 	bl	80008b4 <Timer2_VoidDisableIntOnEachChannle>
}
 80011cc:	bf00      	nop
 80011ce:	bd80      	pop	{r7, pc}
 80011d0:	2000004c 	.word	0x2000004c
 80011d4:	2000003c 	.word	0x2000003c
 80011d8:	40000010 	.word	0x40000010
 80011dc:	20000030 	.word	0x20000030
 80011e0:	20000034 	.word	0x20000034
 80011e4:	20000040 	.word	0x20000040
 80011e8:	20000044 	.word	0x20000044

080011ec <TIM3>:


void TIM3(void)
{
 80011ec:	b580      	push	{r7, lr}
 80011ee:	af00      	add	r7, sp, #0
	Is_First_Captured3++;
 80011f0:	4b69      	ldr	r3, [pc, #420]	; (8001398 <TIM3+0x1ac>)
 80011f2:	781b      	ldrb	r3, [r3, #0]
 80011f4:	b2db      	uxtb	r3, r3
 80011f6:	3301      	adds	r3, #1
 80011f8:	b2da      	uxtb	r2, r3
 80011fa:	4b67      	ldr	r3, [pc, #412]	; (8001398 <TIM3+0x1ac>)
 80011fc:	701a      	strb	r2, [r3, #0]
	Is_First_Captured4++;
 80011fe:	4b67      	ldr	r3, [pc, #412]	; (800139c <TIM3+0x1b0>)
 8001200:	781b      	ldrb	r3, [r3, #0]
 8001202:	b2db      	uxtb	r3, r3
 8001204:	3301      	adds	r3, #1
 8001206:	b2da      	uxtb	r2, r3
 8001208:	4b64      	ldr	r3, [pc, #400]	; (800139c <TIM3+0x1b0>)
 800120a:	701a      	strb	r2, [r3, #0]
	Is_First_Captured5++;
 800120c:	4b64      	ldr	r3, [pc, #400]	; (80013a0 <TIM3+0x1b4>)
 800120e:	781b      	ldrb	r3, [r3, #0]
 8001210:	b2db      	uxtb	r3, r3
 8001212:	3301      	adds	r3, #1
 8001214:	b2da      	uxtb	r2, r3
 8001216:	4b62      	ldr	r3, [pc, #392]	; (80013a0 <TIM3+0x1b4>)
 8001218:	701a      	strb	r2, [r3, #0]
	if(GET_BIT(TIMER3_SR,1)==1)
 800121a:	4b62      	ldr	r3, [pc, #392]	; (80013a4 <TIM3+0x1b8>)
 800121c:	681b      	ldr	r3, [r3, #0]
 800121e:	085b      	lsrs	r3, r3, #1
 8001220:	f003 0301 	and.w	r3, r3, #1
 8001224:	2b01      	cmp	r3, #1
 8001226:	d127      	bne.n	8001278 <TIM3+0x8c>
	{

		SET_BIT(TIMER3_SR,1);
 8001228:	4b5e      	ldr	r3, [pc, #376]	; (80013a4 <TIM3+0x1b8>)
 800122a:	681b      	ldr	r3, [r3, #0]
 800122c:	4a5d      	ldr	r2, [pc, #372]	; (80013a4 <TIM3+0x1b8>)
 800122e:	f043 0302 	orr.w	r3, r3, #2
 8001232:	6013      	str	r3, [r2, #0]

		if(Is_First_Captured3==1)
 8001234:	4b58      	ldr	r3, [pc, #352]	; (8001398 <TIM3+0x1ac>)
 8001236:	781b      	ldrb	r3, [r3, #0]
 8001238:	b2db      	uxtb	r3, r3
 800123a:	2b01      	cmp	r3, #1
 800123c:	d10a      	bne.n	8001254 <TIM3+0x68>
		{

			IC3_Val1=Timer3_VoidGetCapturedValue(Channle1);
 800123e:	2000      	movs	r0, #0
 8001240:	f7ff fd7c 	bl	8000d3c <Timer3_VoidGetCapturedValue>
 8001244:	4603      	mov	r3, r0
 8001246:	4a58      	ldr	r2, [pc, #352]	; (80013a8 <TIM3+0x1bc>)
 8001248:	6013      	str	r3, [r2, #0]
			//Is_First_Captured = 1;  // set the first captured as true
			// Now change the polarity to falling edge
			Timer3_VoidChangePolarityOnEachChannle(Channle1,TIMER3_FALLING_EDGE);
 800124a:	2101      	movs	r1, #1
 800124c:	2000      	movs	r0, #0
 800124e:	f7ff fd05 	bl	8000c5c <Timer3_VoidChangePolarityOnEachChannle>
 8001252:	e011      	b.n	8001278 <TIM3+0x8c>
		}
		else if (Is_First_Captured3==2)   // if the first is already captured
 8001254:	4b50      	ldr	r3, [pc, #320]	; (8001398 <TIM3+0x1ac>)
 8001256:	781b      	ldrb	r3, [r3, #0]
 8001258:	b2db      	uxtb	r3, r3
 800125a:	2b02      	cmp	r3, #2
 800125c:	d10c      	bne.n	8001278 <TIM3+0x8c>
		{
			IC3_Val2 = Timer3_VoidGetCapturedValue(Channle1) ; // read second value
 800125e:	2000      	movs	r0, #0
 8001260:	f7ff fd6c 	bl	8000d3c <Timer3_VoidGetCapturedValue>
 8001264:	4603      	mov	r3, r0
 8001266:	4a51      	ldr	r2, [pc, #324]	; (80013ac <TIM3+0x1c0>)
 8001268:	6013      	str	r3, [r2, #0]

			// Now change the polarity to rising edge

			Timer3_VoidChangePolarityOnEachChannle(Channle1,TIMER3_RISING_EDGE);
 800126a:	2100      	movs	r1, #0
 800126c:	2000      	movs	r0, #0
 800126e:	f7ff fcf5 	bl	8000c5c <Timer3_VoidChangePolarityOnEachChannle>
			// disable capture interrupt on each channel
			Timer3_VoidDisableIntOnEachChannle(Channle1);
 8001272:	2000      	movs	r0, #0
 8001274:	f7ff fcba 	bl	8000bec <Timer3_VoidDisableIntOnEachChannle>


		}
	}
	if(GET_BIT(TIMER3_SR,2)==1)
 8001278:	4b4a      	ldr	r3, [pc, #296]	; (80013a4 <TIM3+0x1b8>)
 800127a:	681b      	ldr	r3, [r3, #0]
 800127c:	089b      	lsrs	r3, r3, #2
 800127e:	f003 0301 	and.w	r3, r3, #1
 8001282:	2b01      	cmp	r3, #1
 8001284:	d127      	bne.n	80012d6 <TIM3+0xea>
	{

		SET_BIT(TIMER3_SR,2);
 8001286:	4b47      	ldr	r3, [pc, #284]	; (80013a4 <TIM3+0x1b8>)
 8001288:	681b      	ldr	r3, [r3, #0]
 800128a:	4a46      	ldr	r2, [pc, #280]	; (80013a4 <TIM3+0x1b8>)
 800128c:	f043 0304 	orr.w	r3, r3, #4
 8001290:	6013      	str	r3, [r2, #0]

		if(Is_First_Captured4==1)
 8001292:	4b42      	ldr	r3, [pc, #264]	; (800139c <TIM3+0x1b0>)
 8001294:	781b      	ldrb	r3, [r3, #0]
 8001296:	b2db      	uxtb	r3, r3
 8001298:	2b01      	cmp	r3, #1
 800129a:	d10a      	bne.n	80012b2 <TIM3+0xc6>
		{

			IC4_Val1=Timer3_VoidGetCapturedValue(Channle2);
 800129c:	2001      	movs	r0, #1
 800129e:	f7ff fd4d 	bl	8000d3c <Timer3_VoidGetCapturedValue>
 80012a2:	4603      	mov	r3, r0
 80012a4:	4a42      	ldr	r2, [pc, #264]	; (80013b0 <TIM3+0x1c4>)
 80012a6:	6013      	str	r3, [r2, #0]
			//Is_First_Captured = 1;  // set the first captured as true
			// Now change the polarity to falling edge

			Timer3_VoidChangePolarityOnEachChannle(Channle2,TIMER3_FALLING_EDGE);
 80012a8:	2101      	movs	r1, #1
 80012aa:	2001      	movs	r0, #1
 80012ac:	f7ff fcd6 	bl	8000c5c <Timer3_VoidChangePolarityOnEachChannle>
 80012b0:	e011      	b.n	80012d6 <TIM3+0xea>
		}
		else if (Is_First_Captured4==2)   // if the first is already captured
 80012b2:	4b3a      	ldr	r3, [pc, #232]	; (800139c <TIM3+0x1b0>)
 80012b4:	781b      	ldrb	r3, [r3, #0]
 80012b6:	b2db      	uxtb	r3, r3
 80012b8:	2b02      	cmp	r3, #2
 80012ba:	d10c      	bne.n	80012d6 <TIM3+0xea>
		{
			IC4_Val2 = Timer3_VoidGetCapturedValue(Channle2) ; // read second value
 80012bc:	2001      	movs	r0, #1
 80012be:	f7ff fd3d 	bl	8000d3c <Timer3_VoidGetCapturedValue>
 80012c2:	4603      	mov	r3, r0
 80012c4:	4a3b      	ldr	r2, [pc, #236]	; (80013b4 <TIM3+0x1c8>)
 80012c6:	6013      	str	r3, [r2, #0]

			// Now change the polarity to rising edge

			Timer3_VoidChangePolarityOnEachChannle(Channle2,TIMER3_RISING_EDGE);
 80012c8:	2100      	movs	r1, #0
 80012ca:	2001      	movs	r0, #1
 80012cc:	f7ff fcc6 	bl	8000c5c <Timer3_VoidChangePolarityOnEachChannle>
			// disable capture interrupt on each channel
			Timer3_VoidDisableIntOnEachChannle(Channle2);
 80012d0:	2001      	movs	r0, #1
 80012d2:	f7ff fc8b 	bl	8000bec <Timer3_VoidDisableIntOnEachChannle>
		}
	}
	if(GET_BIT(TIMER3_SR,3)==1)
 80012d6:	4b33      	ldr	r3, [pc, #204]	; (80013a4 <TIM3+0x1b8>)
 80012d8:	681b      	ldr	r3, [r3, #0]
 80012da:	08db      	lsrs	r3, r3, #3
 80012dc:	f003 0301 	and.w	r3, r3, #1
 80012e0:	2b01      	cmp	r3, #1
 80012e2:	d127      	bne.n	8001334 <TIM3+0x148>
	{
		SET_BIT(TIMER3_SR,3);
 80012e4:	4b2f      	ldr	r3, [pc, #188]	; (80013a4 <TIM3+0x1b8>)
 80012e6:	681b      	ldr	r3, [r3, #0]
 80012e8:	4a2e      	ldr	r2, [pc, #184]	; (80013a4 <TIM3+0x1b8>)
 80012ea:	f043 0308 	orr.w	r3, r3, #8
 80012ee:	6013      	str	r3, [r2, #0]

		if(Is_First_Captured5==1)
 80012f0:	4b2b      	ldr	r3, [pc, #172]	; (80013a0 <TIM3+0x1b4>)
 80012f2:	781b      	ldrb	r3, [r3, #0]
 80012f4:	b2db      	uxtb	r3, r3
 80012f6:	2b01      	cmp	r3, #1
 80012f8:	d10a      	bne.n	8001310 <TIM3+0x124>
		{

			IC5_Val1=Timer3_VoidGetCapturedValue(Channle3);
 80012fa:	2002      	movs	r0, #2
 80012fc:	f7ff fd1e 	bl	8000d3c <Timer3_VoidGetCapturedValue>
 8001300:	4603      	mov	r3, r0
 8001302:	4a2d      	ldr	r2, [pc, #180]	; (80013b8 <TIM3+0x1cc>)
 8001304:	6013      	str	r3, [r2, #0]
			//Is_First_Captured = 1;  // set the first captured as true
			// Now change the polarity to falling edge

			Timer3_VoidChangePolarityOnEachChannle(Channle3,TIMER3_FALLING_EDGE);
 8001306:	2101      	movs	r1, #1
 8001308:	2002      	movs	r0, #2
 800130a:	f7ff fca7 	bl	8000c5c <Timer3_VoidChangePolarityOnEachChannle>
 800130e:	e011      	b.n	8001334 <TIM3+0x148>
		}
		else if (Is_First_Captured5==2)   // if the first is already captured
 8001310:	4b23      	ldr	r3, [pc, #140]	; (80013a0 <TIM3+0x1b4>)
 8001312:	781b      	ldrb	r3, [r3, #0]
 8001314:	b2db      	uxtb	r3, r3
 8001316:	2b02      	cmp	r3, #2
 8001318:	d10c      	bne.n	8001334 <TIM3+0x148>
		{
			IC5_Val2 = Timer3_VoidGetCapturedValue(Channle3) ; // read second value
 800131a:	2002      	movs	r0, #2
 800131c:	f7ff fd0e 	bl	8000d3c <Timer3_VoidGetCapturedValue>
 8001320:	4603      	mov	r3, r0
 8001322:	4a26      	ldr	r2, [pc, #152]	; (80013bc <TIM3+0x1d0>)
 8001324:	6013      	str	r3, [r2, #0]

			// Now change the polarity to rising edge

			Timer3_VoidChangePolarityOnEachChannle(Channle3,TIMER3_RISING_EDGE);
 8001326:	2100      	movs	r1, #0
 8001328:	2002      	movs	r0, #2
 800132a:	f7ff fc97 	bl	8000c5c <Timer3_VoidChangePolarityOnEachChannle>
			// disable capture interrupt on each channel
			Timer3_VoidDisableIntOnEachChannle(Channle3);
 800132e:	2002      	movs	r0, #2
 8001330:	f7ff fc5c 	bl	8000bec <Timer3_VoidDisableIntOnEachChannle>
		}
	}
	if(GET_BIT(TIMER3_SR,4)==1)
 8001334:	4b1b      	ldr	r3, [pc, #108]	; (80013a4 <TIM3+0x1b8>)
 8001336:	681b      	ldr	r3, [r3, #0]
 8001338:	091b      	lsrs	r3, r3, #4
 800133a:	f003 0301 	and.w	r3, r3, #1
 800133e:	2b01      	cmp	r3, #1
 8001340:	d127      	bne.n	8001392 <TIM3+0x1a6>
	{
		SET_BIT(TIMER3_SR,4);
 8001342:	4b18      	ldr	r3, [pc, #96]	; (80013a4 <TIM3+0x1b8>)
 8001344:	681b      	ldr	r3, [r3, #0]
 8001346:	4a17      	ldr	r2, [pc, #92]	; (80013a4 <TIM3+0x1b8>)
 8001348:	f043 0310 	orr.w	r3, r3, #16
 800134c:	6013      	str	r3, [r2, #0]

		if(Is_First_Captured5==1)
 800134e:	4b14      	ldr	r3, [pc, #80]	; (80013a0 <TIM3+0x1b4>)
 8001350:	781b      	ldrb	r3, [r3, #0]
 8001352:	b2db      	uxtb	r3, r3
 8001354:	2b01      	cmp	r3, #1
 8001356:	d10a      	bne.n	800136e <TIM3+0x182>
		{

			IC5_Val1=Timer3_VoidGetCapturedValue(Channle4);
 8001358:	2003      	movs	r0, #3
 800135a:	f7ff fcef 	bl	8000d3c <Timer3_VoidGetCapturedValue>
 800135e:	4603      	mov	r3, r0
 8001360:	4a15      	ldr	r2, [pc, #84]	; (80013b8 <TIM3+0x1cc>)
 8001362:	6013      	str	r3, [r2, #0]
			//Is_First_Captured = 1;  // set the first captured as true
			// Now change the polarity to falling edge

			Timer3_VoidChangePolarityOnEachChannle(Channle4,TIMER3_FALLING_EDGE);
 8001364:	2101      	movs	r1, #1
 8001366:	2003      	movs	r0, #3
 8001368:	f7ff fc78 	bl	8000c5c <Timer3_VoidChangePolarityOnEachChannle>
			Timer3_VoidChangePolarityOnEachChannle(Channle4,TIMER3_RISING_EDGE);
			// disable capture interrupt on each channel
			Timer3_VoidDisableIntOnEachChannle(Channle4);
		}
	}
}
 800136c:	e011      	b.n	8001392 <TIM3+0x1a6>
		else if (Is_First_Captured5==2)   // if the first is already captured
 800136e:	4b0c      	ldr	r3, [pc, #48]	; (80013a0 <TIM3+0x1b4>)
 8001370:	781b      	ldrb	r3, [r3, #0]
 8001372:	b2db      	uxtb	r3, r3
 8001374:	2b02      	cmp	r3, #2
 8001376:	d10c      	bne.n	8001392 <TIM3+0x1a6>
			IC5_Val2 = Timer3_VoidGetCapturedValue(Channle4) ; // read second value
 8001378:	2003      	movs	r0, #3
 800137a:	f7ff fcdf 	bl	8000d3c <Timer3_VoidGetCapturedValue>
 800137e:	4603      	mov	r3, r0
 8001380:	4a0e      	ldr	r2, [pc, #56]	; (80013bc <TIM3+0x1d0>)
 8001382:	6013      	str	r3, [r2, #0]
			Timer3_VoidChangePolarityOnEachChannle(Channle4,TIMER3_RISING_EDGE);
 8001384:	2100      	movs	r1, #0
 8001386:	2003      	movs	r0, #3
 8001388:	f7ff fc68 	bl	8000c5c <Timer3_VoidChangePolarityOnEachChannle>
			Timer3_VoidDisableIntOnEachChannle(Channle4);
 800138c:	2003      	movs	r0, #3
 800138e:	f7ff fc2d 	bl	8000bec <Timer3_VoidDisableIntOnEachChannle>
}
 8001392:	bf00      	nop
 8001394:	bd80      	pop	{r7, pc}
 8001396:	bf00      	nop
 8001398:	2000005c 	.word	0x2000005c
 800139c:	2000006c 	.word	0x2000006c
 80013a0:	2000007c 	.word	0x2000007c
 80013a4:	40000410 	.word	0x40000410
 80013a8:	20000050 	.word	0x20000050
 80013ac:	20000054 	.word	0x20000054
 80013b0:	20000060 	.word	0x20000060
 80013b4:	20000064 	.word	0x20000064
 80013b8:	20000070 	.word	0x20000070
 80013bc:	20000074 	.word	0x20000074

080013c0 <Ultrasonic_TrigOne>:



void Ultrasonic_TrigOne (void)
{
 80013c0:	b580      	push	{r7, lr}
 80013c2:	af00      	add	r7, sp, #0
	MGPIO_VidSetPinValue(GPIOB, PIN5, HIGH);  // pull the TRIG pin HIGH
 80013c4:	2201      	movs	r2, #1
 80013c6:	2105      	movs	r1, #5
 80013c8:	2001      	movs	r0, #1
 80013ca:	f7fe ffd7 	bl	800037c <MGPIO_VidSetPinValue>
	_delay_us(10);  // wait for 10 us
 80013ce:	200a      	movs	r0, #10
 80013d0:	f7fe feea 	bl	80001a8 <_delay_us>
	MGPIO_VidSetPinValue(GPIOB, PIN5, LOW);  // pull the TRIG pin low
 80013d4:	2200      	movs	r2, #0
 80013d6:	2105      	movs	r1, #5
 80013d8:	2001      	movs	r0, #1
 80013da:	f7fe ffcf 	bl	800037c <MGPIO_VidSetPinValue>
}
 80013de:	bf00      	nop
 80013e0:	bd80      	pop	{r7, pc}

080013e2 <Ultrasonic_TrigTwo>:
void Ultrasonic_TrigTwo (void)
{
 80013e2:	b580      	push	{r7, lr}
 80013e4:	af00      	add	r7, sp, #0
	MGPIO_VidSetPinValue(GPIOA, PIN2, HIGH);  // pull the TRIG pin HIGH
 80013e6:	2201      	movs	r2, #1
 80013e8:	2102      	movs	r1, #2
 80013ea:	2000      	movs	r0, #0
 80013ec:	f7fe ffc6 	bl	800037c <MGPIO_VidSetPinValue>
	_delay_us(10);  // wait for 10 us
 80013f0:	200a      	movs	r0, #10
 80013f2:	f7fe fed9 	bl	80001a8 <_delay_us>
	MGPIO_VidSetPinValue(GPIOA, PIN2, LOW);  // pull the TRIG pin low
 80013f6:	2200      	movs	r2, #0
 80013f8:	2102      	movs	r1, #2
 80013fa:	2000      	movs	r0, #0
 80013fc:	f7fe ffbe 	bl	800037c <MGPIO_VidSetPinValue>
}
 8001400:	bf00      	nop
 8001402:	bd80      	pop	{r7, pc}

08001404 <Ultrasonic_TrigThree>:
void Ultrasonic_TrigThree (void)
{
 8001404:	b580      	push	{r7, lr}
 8001406:	af00      	add	r7, sp, #0
	MGPIO_VidSetPinValue(GPIOB, PIN0, HIGH);  // pull the TRIG pin HIGH
 8001408:	2201      	movs	r2, #1
 800140a:	2100      	movs	r1, #0
 800140c:	2001      	movs	r0, #1
 800140e:	f7fe ffb5 	bl	800037c <MGPIO_VidSetPinValue>
	_delay_us(10);  // wait for 10 us
 8001412:	200a      	movs	r0, #10
 8001414:	f7fe fec8 	bl	80001a8 <_delay_us>
	MGPIO_VidSetPinValue(GPIOB, PIN0, LOW);  // pull the TRIG pin low
 8001418:	2200      	movs	r2, #0
 800141a:	2100      	movs	r1, #0
 800141c:	2001      	movs	r0, #1
 800141e:	f7fe ffad 	bl	800037c <MGPIO_VidSetPinValue>
}
 8001422:	bf00      	nop
 8001424:	bd80      	pop	{r7, pc}

08001426 <Ultrasonic_TrigFour>:
void Ultrasonic_TrigFour (void)
{
 8001426:	b580      	push	{r7, lr}
 8001428:	af00      	add	r7, sp, #0
	MGPIO_VidSetPinValue(GPIOB, PIN10, HIGH);  // pull the TRIG pin HIGH
 800142a:	2201      	movs	r2, #1
 800142c:	210a      	movs	r1, #10
 800142e:	2001      	movs	r0, #1
 8001430:	f7fe ffa4 	bl	800037c <MGPIO_VidSetPinValue>
	_delay_us(10);  // wait for 10 us
 8001434:	200a      	movs	r0, #10
 8001436:	f7fe feb7 	bl	80001a8 <_delay_us>
	MGPIO_VidSetPinValue(GPIOB, PIN10, LOW);  // pull the TRIG pin low
 800143a:	2200      	movs	r2, #0
 800143c:	210a      	movs	r1, #10
 800143e:	2001      	movs	r0, #1
 8001440:	f7fe ff9c 	bl	800037c <MGPIO_VidSetPinValue>
}
 8001444:	bf00      	nop
 8001446:	bd80      	pop	{r7, pc}

08001448 <Ultrasonic_TrigFive>:
void Ultrasonic_TrigFive (void)
{
 8001448:	b580      	push	{r7, lr}
 800144a:	af00      	add	r7, sp, #0
	MGPIO_VidSetPinValue(GPIOA, PIN3, HIGH);  // pull the TRIG pin HIGH
 800144c:	2201      	movs	r2, #1
 800144e:	2103      	movs	r1, #3
 8001450:	2000      	movs	r0, #0
 8001452:	f7fe ff93 	bl	800037c <MGPIO_VidSetPinValue>
	_delay_us(10);  // wait for 10 us
 8001456:	200a      	movs	r0, #10
 8001458:	f7fe fea6 	bl	80001a8 <_delay_us>
	MGPIO_VidSetPinValue(GPIOA, PIN3, LOW);  // pull the TRIG pin low
 800145c:	2200      	movs	r2, #0
 800145e:	2103      	movs	r1, #3
 8001460:	2000      	movs	r0, #0
 8001462:	f7fe ff8b 	bl	800037c <MGPIO_VidSetPinValue>
}
 8001466:	bf00      	nop
 8001468:	bd80      	pop	{r7, pc}
	...

0800146c <Ultrasonic_ReadOne>:
u8 Ultrasonic_ReadOne (void)
{
 800146c:	b580      	push	{r7, lr}
 800146e:	af00      	add	r7, sp, #0
	Timer2_VoidSetPreload(0);
 8001470:	2000      	movs	r0, #0
 8001472:	f7ff f9ef 	bl	8000854 <Timer2_VoidSetPreload>
	Ultrasonic_TrigOne();
 8001476:	f7ff ffa3 	bl	80013c0 <Ultrasonic_TrigOne>
	while(Is_First_Captured1<2);
 800147a:	bf00      	nop
 800147c:	4b10      	ldr	r3, [pc, #64]	; (80014c0 <Ultrasonic_ReadOne+0x54>)
 800147e:	781b      	ldrb	r3, [r3, #0]
 8001480:	b2db      	uxtb	r3, r3
 8001482:	2b01      	cmp	r3, #1
 8001484:	d9fa      	bls.n	800147c <Ultrasonic_ReadOne+0x10>
	Difference1 = IC1_Val2-IC1_Val1;
 8001486:	4b0f      	ldr	r3, [pc, #60]	; (80014c4 <Ultrasonic_ReadOne+0x58>)
 8001488:	681a      	ldr	r2, [r3, #0]
 800148a:	4b0f      	ldr	r3, [pc, #60]	; (80014c8 <Ultrasonic_ReadOne+0x5c>)
 800148c:	681b      	ldr	r3, [r3, #0]
 800148e:	1ad3      	subs	r3, r2, r3
 8001490:	4a0e      	ldr	r2, [pc, #56]	; (80014cc <Ultrasonic_ReadOne+0x60>)
 8001492:	6013      	str	r3, [r2, #0]
	Distance1 = (Difference1 /58);
 8001494:	4b0d      	ldr	r3, [pc, #52]	; (80014cc <Ultrasonic_ReadOne+0x60>)
 8001496:	681b      	ldr	r3, [r3, #0]
 8001498:	4a0d      	ldr	r2, [pc, #52]	; (80014d0 <Ultrasonic_ReadOne+0x64>)
 800149a:	fba2 2303 	umull	r2, r3, r2, r3
 800149e:	095b      	lsrs	r3, r3, #5
 80014a0:	b2da      	uxtb	r2, r3
 80014a2:	4b0c      	ldr	r3, [pc, #48]	; (80014d4 <Ultrasonic_ReadOne+0x68>)
 80014a4:	701a      	strb	r2, [r3, #0]
	Is_First_Captured1=0;
 80014a6:	4b06      	ldr	r3, [pc, #24]	; (80014c0 <Ultrasonic_ReadOne+0x54>)
 80014a8:	2200      	movs	r2, #0
 80014aa:	701a      	strb	r2, [r3, #0]
	Timer2_VoidEnableIntOnEachChannle(Channle1);
 80014ac:	2000      	movs	r0, #0
 80014ae:	f7ff f9e1 	bl	8000874 <Timer2_VoidEnableIntOnEachChannle>
	return Distance1+1;
 80014b2:	4b08      	ldr	r3, [pc, #32]	; (80014d4 <Ultrasonic_ReadOne+0x68>)
 80014b4:	781b      	ldrb	r3, [r3, #0]
 80014b6:	b2db      	uxtb	r3, r3
 80014b8:	3301      	adds	r3, #1
 80014ba:	b2db      	uxtb	r3, r3

}
 80014bc:	4618      	mov	r0, r3
 80014be:	bd80      	pop	{r7, pc}
 80014c0:	2000003c 	.word	0x2000003c
 80014c4:	20000034 	.word	0x20000034
 80014c8:	20000030 	.word	0x20000030
 80014cc:	20000038 	.word	0x20000038
 80014d0:	8d3dcb09 	.word	0x8d3dcb09
 80014d4:	2000003d 	.word	0x2000003d

080014d8 <Ultrasonic_ReadTwo>:
u8 Ultrasonic_ReadTwo (void)
{
 80014d8:	b580      	push	{r7, lr}
 80014da:	af00      	add	r7, sp, #0
	Timer2_VoidSetPreload(0);
 80014dc:	2000      	movs	r0, #0
 80014de:	f7ff f9b9 	bl	8000854 <Timer2_VoidSetPreload>
	Ultrasonic_TrigTwo();
 80014e2:	f7ff ff7e 	bl	80013e2 <Ultrasonic_TrigTwo>
	while(Is_First_Captured2<2);
 80014e6:	bf00      	nop
 80014e8:	4b0f      	ldr	r3, [pc, #60]	; (8001528 <Ultrasonic_ReadTwo+0x50>)
 80014ea:	781b      	ldrb	r3, [r3, #0]
 80014ec:	b2db      	uxtb	r3, r3
 80014ee:	2b01      	cmp	r3, #1
 80014f0:	d9fa      	bls.n	80014e8 <Ultrasonic_ReadTwo+0x10>
	Difference2 = IC2_Val2-IC2_Val1;
 80014f2:	4b0e      	ldr	r3, [pc, #56]	; (800152c <Ultrasonic_ReadTwo+0x54>)
 80014f4:	681a      	ldr	r2, [r3, #0]
 80014f6:	4b0e      	ldr	r3, [pc, #56]	; (8001530 <Ultrasonic_ReadTwo+0x58>)
 80014f8:	681b      	ldr	r3, [r3, #0]
 80014fa:	1ad3      	subs	r3, r2, r3
 80014fc:	4a0d      	ldr	r2, [pc, #52]	; (8001534 <Ultrasonic_ReadTwo+0x5c>)
 80014fe:	6013      	str	r3, [r2, #0]
	Distance2 = (Difference2 /58);
 8001500:	4b0c      	ldr	r3, [pc, #48]	; (8001534 <Ultrasonic_ReadTwo+0x5c>)
 8001502:	681b      	ldr	r3, [r3, #0]
 8001504:	4a0c      	ldr	r2, [pc, #48]	; (8001538 <Ultrasonic_ReadTwo+0x60>)
 8001506:	fba2 2303 	umull	r2, r3, r2, r3
 800150a:	095b      	lsrs	r3, r3, #5
 800150c:	b2da      	uxtb	r2, r3
 800150e:	4b0b      	ldr	r3, [pc, #44]	; (800153c <Ultrasonic_ReadTwo+0x64>)
 8001510:	701a      	strb	r2, [r3, #0]
	Is_First_Captured2=0;
 8001512:	4b05      	ldr	r3, [pc, #20]	; (8001528 <Ultrasonic_ReadTwo+0x50>)
 8001514:	2200      	movs	r2, #0
 8001516:	701a      	strb	r2, [r3, #0]
	Timer2_VoidEnableIntOnEachChannle(Channle2);
 8001518:	2001      	movs	r0, #1
 800151a:	f7ff f9ab 	bl	8000874 <Timer2_VoidEnableIntOnEachChannle>
	return Distance2;
 800151e:	4b07      	ldr	r3, [pc, #28]	; (800153c <Ultrasonic_ReadTwo+0x64>)
 8001520:	781b      	ldrb	r3, [r3, #0]
 8001522:	b2db      	uxtb	r3, r3
}
 8001524:	4618      	mov	r0, r3
 8001526:	bd80      	pop	{r7, pc}
 8001528:	2000004c 	.word	0x2000004c
 800152c:	20000044 	.word	0x20000044
 8001530:	20000040 	.word	0x20000040
 8001534:	20000048 	.word	0x20000048
 8001538:	8d3dcb09 	.word	0x8d3dcb09
 800153c:	2000004d 	.word	0x2000004d

08001540 <Ultrasonic_ReadThree>:

u8 Ultrasonic_ReadThree (void)
{
 8001540:	b580      	push	{r7, lr}
 8001542:	af00      	add	r7, sp, #0
	Timer3_VoidSetPreload(0);
 8001544:	2000      	movs	r0, #0
 8001546:	f7ff fb09 	bl	8000b5c <Timer3_VoidSetPreload>
	Ultrasonic_TrigThree();
 800154a:	f7ff ff5b 	bl	8001404 <Ultrasonic_TrigThree>
	while(Is_First_Captured3<2);
 800154e:	bf00      	nop
 8001550:	4b0f      	ldr	r3, [pc, #60]	; (8001590 <Ultrasonic_ReadThree+0x50>)
 8001552:	781b      	ldrb	r3, [r3, #0]
 8001554:	b2db      	uxtb	r3, r3
 8001556:	2b01      	cmp	r3, #1
 8001558:	d9fa      	bls.n	8001550 <Ultrasonic_ReadThree+0x10>
	Difference3 = IC3_Val2-IC3_Val1;
 800155a:	4b0e      	ldr	r3, [pc, #56]	; (8001594 <Ultrasonic_ReadThree+0x54>)
 800155c:	681a      	ldr	r2, [r3, #0]
 800155e:	4b0e      	ldr	r3, [pc, #56]	; (8001598 <Ultrasonic_ReadThree+0x58>)
 8001560:	681b      	ldr	r3, [r3, #0]
 8001562:	1ad3      	subs	r3, r2, r3
 8001564:	4a0d      	ldr	r2, [pc, #52]	; (800159c <Ultrasonic_ReadThree+0x5c>)
 8001566:	6013      	str	r3, [r2, #0]
	Distance3 = (Difference3 /58);
 8001568:	4b0c      	ldr	r3, [pc, #48]	; (800159c <Ultrasonic_ReadThree+0x5c>)
 800156a:	681b      	ldr	r3, [r3, #0]
 800156c:	4a0c      	ldr	r2, [pc, #48]	; (80015a0 <Ultrasonic_ReadThree+0x60>)
 800156e:	fba2 2303 	umull	r2, r3, r2, r3
 8001572:	095b      	lsrs	r3, r3, #5
 8001574:	b2da      	uxtb	r2, r3
 8001576:	4b0b      	ldr	r3, [pc, #44]	; (80015a4 <Ultrasonic_ReadThree+0x64>)
 8001578:	701a      	strb	r2, [r3, #0]
	Is_First_Captured3=0;
 800157a:	4b05      	ldr	r3, [pc, #20]	; (8001590 <Ultrasonic_ReadThree+0x50>)
 800157c:	2200      	movs	r2, #0
 800157e:	701a      	strb	r2, [r3, #0]
	Timer3_VoidEnableIntOnEachChannle(Channle1);
 8001580:	2000      	movs	r0, #0
 8001582:	f7ff fafb 	bl	8000b7c <Timer3_VoidEnableIntOnEachChannle>
	return Distance3;
 8001586:	4b07      	ldr	r3, [pc, #28]	; (80015a4 <Ultrasonic_ReadThree+0x64>)
 8001588:	781b      	ldrb	r3, [r3, #0]
 800158a:	b2db      	uxtb	r3, r3
}
 800158c:	4618      	mov	r0, r3
 800158e:	bd80      	pop	{r7, pc}
 8001590:	2000005c 	.word	0x2000005c
 8001594:	20000054 	.word	0x20000054
 8001598:	20000050 	.word	0x20000050
 800159c:	20000058 	.word	0x20000058
 80015a0:	8d3dcb09 	.word	0x8d3dcb09
 80015a4:	2000005d 	.word	0x2000005d

080015a8 <Ultrasonic_ReadFour>:
u8 Ultrasonic_ReadFour (void)
{
 80015a8:	b580      	push	{r7, lr}
 80015aa:	af00      	add	r7, sp, #0
	Timer3_VoidSetPreload(0);
 80015ac:	2000      	movs	r0, #0
 80015ae:	f7ff fad5 	bl	8000b5c <Timer3_VoidSetPreload>
	Ultrasonic_TrigFour();
 80015b2:	f7ff ff38 	bl	8001426 <Ultrasonic_TrigFour>
	while(Is_First_Captured4<2);
 80015b6:	bf00      	nop
 80015b8:	4b0f      	ldr	r3, [pc, #60]	; (80015f8 <Ultrasonic_ReadFour+0x50>)
 80015ba:	781b      	ldrb	r3, [r3, #0]
 80015bc:	b2db      	uxtb	r3, r3
 80015be:	2b01      	cmp	r3, #1
 80015c0:	d9fa      	bls.n	80015b8 <Ultrasonic_ReadFour+0x10>
	Difference4 = IC4_Val2-IC4_Val1;
 80015c2:	4b0e      	ldr	r3, [pc, #56]	; (80015fc <Ultrasonic_ReadFour+0x54>)
 80015c4:	681a      	ldr	r2, [r3, #0]
 80015c6:	4b0e      	ldr	r3, [pc, #56]	; (8001600 <Ultrasonic_ReadFour+0x58>)
 80015c8:	681b      	ldr	r3, [r3, #0]
 80015ca:	1ad3      	subs	r3, r2, r3
 80015cc:	4a0d      	ldr	r2, [pc, #52]	; (8001604 <Ultrasonic_ReadFour+0x5c>)
 80015ce:	6013      	str	r3, [r2, #0]
	Distance4 = (Difference4 /58);
 80015d0:	4b0c      	ldr	r3, [pc, #48]	; (8001604 <Ultrasonic_ReadFour+0x5c>)
 80015d2:	681b      	ldr	r3, [r3, #0]
 80015d4:	4a0c      	ldr	r2, [pc, #48]	; (8001608 <Ultrasonic_ReadFour+0x60>)
 80015d6:	fba2 2303 	umull	r2, r3, r2, r3
 80015da:	095b      	lsrs	r3, r3, #5
 80015dc:	b2da      	uxtb	r2, r3
 80015de:	4b0b      	ldr	r3, [pc, #44]	; (800160c <Ultrasonic_ReadFour+0x64>)
 80015e0:	701a      	strb	r2, [r3, #0]
	Is_First_Captured4=0;
 80015e2:	4b05      	ldr	r3, [pc, #20]	; (80015f8 <Ultrasonic_ReadFour+0x50>)
 80015e4:	2200      	movs	r2, #0
 80015e6:	701a      	strb	r2, [r3, #0]
	Timer3_VoidEnableIntOnEachChannle(Channle2);
 80015e8:	2001      	movs	r0, #1
 80015ea:	f7ff fac7 	bl	8000b7c <Timer3_VoidEnableIntOnEachChannle>
	return Distance4;
 80015ee:	4b07      	ldr	r3, [pc, #28]	; (800160c <Ultrasonic_ReadFour+0x64>)
 80015f0:	781b      	ldrb	r3, [r3, #0]
 80015f2:	b2db      	uxtb	r3, r3
}
 80015f4:	4618      	mov	r0, r3
 80015f6:	bd80      	pop	{r7, pc}
 80015f8:	2000006c 	.word	0x2000006c
 80015fc:	20000064 	.word	0x20000064
 8001600:	20000060 	.word	0x20000060
 8001604:	20000068 	.word	0x20000068
 8001608:	8d3dcb09 	.word	0x8d3dcb09
 800160c:	2000006d 	.word	0x2000006d

08001610 <Ultrasonic_ReadFive>:

u8 Ultrasonic_ReadFive (void)
{
 8001610:	b580      	push	{r7, lr}
 8001612:	af00      	add	r7, sp, #0
	Timer3_VoidSetPreload(0);
 8001614:	2000      	movs	r0, #0
 8001616:	f7ff faa1 	bl	8000b5c <Timer3_VoidSetPreload>
	Ultrasonic_TrigFive();
 800161a:	f7ff ff15 	bl	8001448 <Ultrasonic_TrigFive>
	while(Is_First_Captured5<2);
 800161e:	bf00      	nop
 8001620:	4b0f      	ldr	r3, [pc, #60]	; (8001660 <Ultrasonic_ReadFive+0x50>)
 8001622:	781b      	ldrb	r3, [r3, #0]
 8001624:	b2db      	uxtb	r3, r3
 8001626:	2b01      	cmp	r3, #1
 8001628:	d9fa      	bls.n	8001620 <Ultrasonic_ReadFive+0x10>
	Difference5 = IC5_Val2-IC5_Val1;
 800162a:	4b0e      	ldr	r3, [pc, #56]	; (8001664 <Ultrasonic_ReadFive+0x54>)
 800162c:	681a      	ldr	r2, [r3, #0]
 800162e:	4b0e      	ldr	r3, [pc, #56]	; (8001668 <Ultrasonic_ReadFive+0x58>)
 8001630:	681b      	ldr	r3, [r3, #0]
 8001632:	1ad3      	subs	r3, r2, r3
 8001634:	4a0d      	ldr	r2, [pc, #52]	; (800166c <Ultrasonic_ReadFive+0x5c>)
 8001636:	6013      	str	r3, [r2, #0]
	Distance5 = (Difference5 /58);
 8001638:	4b0c      	ldr	r3, [pc, #48]	; (800166c <Ultrasonic_ReadFive+0x5c>)
 800163a:	681b      	ldr	r3, [r3, #0]
 800163c:	4a0c      	ldr	r2, [pc, #48]	; (8001670 <Ultrasonic_ReadFive+0x60>)
 800163e:	fba2 2303 	umull	r2, r3, r2, r3
 8001642:	095b      	lsrs	r3, r3, #5
 8001644:	b2da      	uxtb	r2, r3
 8001646:	4b0b      	ldr	r3, [pc, #44]	; (8001674 <Ultrasonic_ReadFive+0x64>)
 8001648:	701a      	strb	r2, [r3, #0]
	Is_First_Captured5=0;
 800164a:	4b05      	ldr	r3, [pc, #20]	; (8001660 <Ultrasonic_ReadFive+0x50>)
 800164c:	2200      	movs	r2, #0
 800164e:	701a      	strb	r2, [r3, #0]
	Timer3_VoidEnableIntOnEachChannle(Channle4);
 8001650:	2003      	movs	r0, #3
 8001652:	f7ff fa93 	bl	8000b7c <Timer3_VoidEnableIntOnEachChannle>
	return Distance5;
 8001656:	4b07      	ldr	r3, [pc, #28]	; (8001674 <Ultrasonic_ReadFive+0x64>)
 8001658:	781b      	ldrb	r3, [r3, #0]
 800165a:	b2db      	uxtb	r3, r3
}
 800165c:	4618      	mov	r0, r3
 800165e:	bd80      	pop	{r7, pc}
 8001660:	2000007c 	.word	0x2000007c
 8001664:	20000074 	.word	0x20000074
 8001668:	20000070 	.word	0x20000070
 800166c:	20000078 	.word	0x20000078
 8001670:	8d3dcb09 	.word	0x8d3dcb09
 8001674:	2000007d 	.word	0x2000007d

08001678 <APP_voidAutoParking>:



void APP_voidAutoParking()
{
 8001678:	b580      	push	{r7, lr}
 800167a:	af00      	add	r7, sp, #0

	//    Received_distanceOne=Ultrasonic_ReadOne();
	//    _delay_ms(100);
	//	Received_distanceTwo=Ultrasonic_ReadTwo();
	//	_delay_ms(100);
	Received_distanceThree=Ultrasonic_ReadThree();
 800167c:	f7ff ff60 	bl	8001540 <Ultrasonic_ReadThree>
 8001680:	4603      	mov	r3, r0
 8001682:	461a      	mov	r2, r3
 8001684:	4b5e      	ldr	r3, [pc, #376]	; (8001800 <APP_voidAutoParking+0x188>)
 8001686:	701a      	strb	r2, [r3, #0]
	_delay_ms(100);
 8001688:	2064      	movs	r0, #100	; 0x64
 800168a:	f7fe fd71 	bl	8000170 <_delay_ms>
	Received_distanceFour=Ultrasonic_ReadFour();
 800168e:	f7ff ff8b 	bl	80015a8 <Ultrasonic_ReadFour>
 8001692:	4603      	mov	r3, r0
 8001694:	461a      	mov	r2, r3
 8001696:	4b5b      	ldr	r3, [pc, #364]	; (8001804 <APP_voidAutoParking+0x18c>)
 8001698:	701a      	strb	r2, [r3, #0]
	_delay_ms(100);
 800169a:	2064      	movs	r0, #100	; 0x64
 800169c:	f7fe fd68 	bl	8000170 <_delay_ms>
	if(Received_distanceThree > 20  && Received_distanceFour>20 )
 80016a0:	4b57      	ldr	r3, [pc, #348]	; (8001800 <APP_voidAutoParking+0x188>)
 80016a2:	781b      	ldrb	r3, [r3, #0]
 80016a4:	2b14      	cmp	r3, #20
 80016a6:	f240 809e 	bls.w	80017e6 <APP_voidAutoParking+0x16e>
 80016aa:	4b56      	ldr	r3, [pc, #344]	; (8001804 <APP_voidAutoParking+0x18c>)
 80016ac:	781b      	ldrb	r3, [r3, #0]
 80016ae:	2b14      	cmp	r3, #20
 80016b0:	f240 8099 	bls.w	80017e6 <APP_voidAutoParking+0x16e>
	{
		Received_distanceFour=Ultrasonic_ReadFour();
 80016b4:	f7ff ff78 	bl	80015a8 <Ultrasonic_ReadFour>
 80016b8:	4603      	mov	r3, r0
 80016ba:	461a      	mov	r2, r3
 80016bc:	4b51      	ldr	r3, [pc, #324]	; (8001804 <APP_voidAutoParking+0x18c>)
 80016be:	701a      	strb	r2, [r3, #0]
		_delay_ms(100);
 80016c0:	2064      	movs	r0, #100	; 0x64
 80016c2:	f7fe fd55 	bl	8000170 <_delay_ms>
		while(Received_distanceFour>20)
 80016c6:	e00c      	b.n	80016e2 <APP_voidAutoParking+0x6a>
		{
			Received_distanceFour=Ultrasonic_ReadFour();
 80016c8:	f7ff ff6e 	bl	80015a8 <Ultrasonic_ReadFour>
 80016cc:	4603      	mov	r3, r0
 80016ce:	461a      	mov	r2, r3
 80016d0:	4b4c      	ldr	r3, [pc, #304]	; (8001804 <APP_voidAutoParking+0x18c>)
 80016d2:	701a      	strb	r2, [r3, #0]
			_delay_ms(100);
 80016d4:	2064      	movs	r0, #100	; 0x64
 80016d6:	f7fe fd4b 	bl	8000170 <_delay_ms>
			MOTOR_RF_GO_FORWARD();
 80016da:	f7fe ff03 	bl	80004e4 <MOTOR_RF_GO_FORWARD>
			MOTOR_LF_GO_FORWARD();
 80016de:	f7fe ff37 	bl	8000550 <MOTOR_LF_GO_FORWARD>
		while(Received_distanceFour>20)
 80016e2:	4b48      	ldr	r3, [pc, #288]	; (8001804 <APP_voidAutoParking+0x18c>)
 80016e4:	781b      	ldrb	r3, [r3, #0]
 80016e6:	2b14      	cmp	r3, #20
 80016e8:	d8ee      	bhi.n	80016c8 <APP_voidAutoParking+0x50>

		}
		MOTOR_RF_STOP();
 80016ea:	f7fe ff17 	bl	800051c <MOTOR_RF_STOP>
		MOTOR_LF_STOP();
 80016ee:	f7fe ff4b 	bl	8000588 <MOTOR_LF_STOP>

		MOTOR_RF_GO_BACKWARD();
 80016f2:	f7fe ff05 	bl	8000500 <MOTOR_RF_GO_BACKWARD>
		MOTOR_LF_GO_BACKWARD();
 80016f6:	f7fe ff39 	bl	800056c <MOTOR_LF_GO_BACKWARD>
		_delay_ms(400);
 80016fa:	f44f 70c8 	mov.w	r0, #400	; 0x190
 80016fe:	f7fe fd37 	bl	8000170 <_delay_ms>
		MOTOR_RF_STOP();
 8001702:	f7fe ff0b 	bl	800051c <MOTOR_RF_STOP>
		MOTOR_LF_STOP();
 8001706:	f7fe ff3f 	bl	8000588 <MOTOR_LF_STOP>

		//move LF backward
		MOTOR_LF_GO_BACKWARD();
 800170a:	f7fe ff2f 	bl	800056c <MOTOR_LF_GO_BACKWARD>
		_delay_ms(1000);
 800170e:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001712:	f7fe fd2d 	bl	8000170 <_delay_ms>
		MOTOR_LF_STOP();
 8001716:	f7fe ff37 	bl	8000588 <MOTOR_LF_STOP>




		MOTOR_LF_Void_MotorSetSpeed(70);
 800171a:	2046      	movs	r0, #70	; 0x46
 800171c:	f7fe ff0c 	bl	8000538 <MOTOR_LF_Void_MotorSetSpeed>
		MOTOR_RF_Void_MotorSetSpeed(70);
 8001720:	2046      	movs	r0, #70	; 0x46
 8001722:	f7fe fed3 	bl	80004cc <MOTOR_RF_Void_MotorSetSpeed>
		//			MOTOR_RF_GO_BACKWARD();
		//			MOTOR_LF_GO_BACKWARD();
		//			_delay_ms(1000);
		//			MOTOR_RF_STOP();
		//			MOTOR_LF_STOP();
		Received_distanceTwo=Ultrasonic_ReadTwo();
 8001726:	f7ff fed7 	bl	80014d8 <Ultrasonic_ReadTwo>
 800172a:	4603      	mov	r3, r0
 800172c:	461a      	mov	r2, r3
 800172e:	4b36      	ldr	r3, [pc, #216]	; (8001808 <APP_voidAutoParking+0x190>)
 8001730:	701a      	strb	r2, [r3, #0]
		_delay_ms(100);
 8001732:	2064      	movs	r0, #100	; 0x64
 8001734:	f7fe fd1c 	bl	8000170 <_delay_ms>
		if(Received_distanceTwo>4)
 8001738:	4b33      	ldr	r3, [pc, #204]	; (8001808 <APP_voidAutoParking+0x190>)
 800173a:	781b      	ldrb	r3, [r3, #0]
 800173c:	2b04      	cmp	r3, #4
 800173e:	d915      	bls.n	800176c <APP_voidAutoParking+0xf4>
		{
			while(Received_distanceTwo>20)
 8001740:	e00c      	b.n	800175c <APP_voidAutoParking+0xe4>
			{
				Received_distanceTwo=Ultrasonic_ReadTwo();
 8001742:	f7ff fec9 	bl	80014d8 <Ultrasonic_ReadTwo>
 8001746:	4603      	mov	r3, r0
 8001748:	461a      	mov	r2, r3
 800174a:	4b2f      	ldr	r3, [pc, #188]	; (8001808 <APP_voidAutoParking+0x190>)
 800174c:	701a      	strb	r2, [r3, #0]
				_delay_ms(100);
 800174e:	2064      	movs	r0, #100	; 0x64
 8001750:	f7fe fd0e 	bl	8000170 <_delay_ms>
				MOTOR_RF_GO_BACKWARD();
 8001754:	f7fe fed4 	bl	8000500 <MOTOR_RF_GO_BACKWARD>
				MOTOR_LF_GO_BACKWARD();
 8001758:	f7fe ff08 	bl	800056c <MOTOR_LF_GO_BACKWARD>
			while(Received_distanceTwo>20)
 800175c:	4b2a      	ldr	r3, [pc, #168]	; (8001808 <APP_voidAutoParking+0x190>)
 800175e:	781b      	ldrb	r3, [r3, #0]
 8001760:	2b14      	cmp	r3, #20
 8001762:	d8ee      	bhi.n	8001742 <APP_voidAutoParking+0xca>

			}
			MOTOR_RF_STOP();
 8001764:	f7fe feda 	bl	800051c <MOTOR_RF_STOP>
			MOTOR_LF_STOP();
 8001768:	f7fe ff0e 	bl	8000588 <MOTOR_LF_STOP>

		}

		// p>>B
		MOTOR_LF_Void_MotorSetSpeed(90);
 800176c:	205a      	movs	r0, #90	; 0x5a
 800176e:	f7fe fee3 	bl	8000538 <MOTOR_LF_Void_MotorSetSpeed>
		MOTOR_LF_GO_FORWARD();
 8001772:	f7fe feed 	bl	8000550 <MOTOR_LF_GO_FORWARD>
		MOTOR_RF_GO_BACKWARD();
 8001776:	f7fe fec3 	bl	8000500 <MOTOR_RF_GO_BACKWARD>
		_delay_ms(400);
 800177a:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800177e:	f7fe fcf7 	bl	8000170 <_delay_ms>
		MOTOR_RF_STOP();
 8001782:	f7fe fecb 	bl	800051c <MOTOR_RF_STOP>
		MOTOR_LF_STOP();
 8001786:	f7fe feff 	bl	8000588 <MOTOR_LF_STOP>

		_delay_ms(1000);
 800178a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800178e:	f7fe fcef 	bl	8000170 <_delay_ms>

		MOTOR_RF_Void_MotorSetSpeed(55);
 8001792:	2037      	movs	r0, #55	; 0x37
 8001794:	f7fe fe9a 	bl	80004cc <MOTOR_RF_Void_MotorSetSpeed>
		MOTOR_LF_Void_MotorSetSpeed(65);
 8001798:	2041      	movs	r0, #65	; 0x41
 800179a:	f7fe fecd 	bl	8000538 <MOTOR_LF_Void_MotorSetSpeed>
		Received_distanceOne=Ultrasonic_ReadOne();
 800179e:	f7ff fe65 	bl	800146c <Ultrasonic_ReadOne>
 80017a2:	4603      	mov	r3, r0
 80017a4:	461a      	mov	r2, r3
 80017a6:	4b19      	ldr	r3, [pc, #100]	; (800180c <APP_voidAutoParking+0x194>)
 80017a8:	701a      	strb	r2, [r3, #0]
		_delay_ms(100);
 80017aa:	2064      	movs	r0, #100	; 0x64
 80017ac:	f7fe fce0 	bl	8000170 <_delay_ms>
		if(Received_distanceOne>7)
 80017b0:	4b16      	ldr	r3, [pc, #88]	; (800180c <APP_voidAutoParking+0x194>)
 80017b2:	781b      	ldrb	r3, [r3, #0]
 80017b4:	2b07      	cmp	r3, #7
 80017b6:	d915      	bls.n	80017e4 <APP_voidAutoParking+0x16c>
		{
			while(Received_distanceOne>7)
 80017b8:	e00c      	b.n	80017d4 <APP_voidAutoParking+0x15c>
			{
				Received_distanceOne=Ultrasonic_ReadOne();
 80017ba:	f7ff fe57 	bl	800146c <Ultrasonic_ReadOne>
 80017be:	4603      	mov	r3, r0
 80017c0:	461a      	mov	r2, r3
 80017c2:	4b12      	ldr	r3, [pc, #72]	; (800180c <APP_voidAutoParking+0x194>)
 80017c4:	701a      	strb	r2, [r3, #0]
				_delay_ms(100);
 80017c6:	2064      	movs	r0, #100	; 0x64
 80017c8:	f7fe fcd2 	bl	8000170 <_delay_ms>
				MOTOR_RF_GO_FORWARD();
 80017cc:	f7fe fe8a 	bl	80004e4 <MOTOR_RF_GO_FORWARD>
				MOTOR_LF_GO_FORWARD();
 80017d0:	f7fe febe 	bl	8000550 <MOTOR_LF_GO_FORWARD>
			while(Received_distanceOne>7)
 80017d4:	4b0d      	ldr	r3, [pc, #52]	; (800180c <APP_voidAutoParking+0x194>)
 80017d6:	781b      	ldrb	r3, [r3, #0]
 80017d8:	2b07      	cmp	r3, #7
 80017da:	d8ee      	bhi.n	80017ba <APP_voidAutoParking+0x142>

			}
			MOTOR_RF_STOP();
 80017dc:	f7fe fe9e 	bl	800051c <MOTOR_RF_STOP>
			MOTOR_LF_STOP();
 80017e0:	f7fe fed2 	bl	8000588 <MOTOR_LF_STOP>

		}
		while(1);
 80017e4:	e7fe      	b.n	80017e4 <APP_voidAutoParking+0x16c>
	}
	else
	{
		MOTOR_RF_Void_MotorSetSpeed(75);
 80017e6:	204b      	movs	r0, #75	; 0x4b
 80017e8:	f7fe fe70 	bl	80004cc <MOTOR_RF_Void_MotorSetSpeed>
		MOTOR_LF_Void_MotorSetSpeed(75);
 80017ec:	204b      	movs	r0, #75	; 0x4b
 80017ee:	f7fe fea3 	bl	8000538 <MOTOR_LF_Void_MotorSetSpeed>
		MOTOR_RF_GO_FORWARD();
 80017f2:	f7fe fe77 	bl	80004e4 <MOTOR_RF_GO_FORWARD>
		MOTOR_LF_GO_FORWARD();
 80017f6:	f7fe feab 	bl	8000550 <MOTOR_LF_GO_FORWARD>
	}
}
 80017fa:	bf00      	nop
 80017fc:	bd80      	pop	{r7, pc}
 80017fe:	bf00      	nop
 8001800:	20000080 	.word	0x20000080
 8001804:	20000081 	.word	0x20000081
 8001808:	2000007f 	.word	0x2000007f
 800180c:	2000007e 	.word	0x2000007e

08001810 <APP_voidCollisionAvoidance>:



void APP_voidCollisionAvoidance(void)
{
 8001810:	b580      	push	{r7, lr}
 8001812:	af00      	add	r7, sp, #0
	/* Reads the Distances for the responsible sensors */
	Received_distanceOne = Ultrasonic_ReadOne();
 8001814:	f7ff fe2a 	bl	800146c <Ultrasonic_ReadOne>
 8001818:	4603      	mov	r3, r0
 800181a:	461a      	mov	r2, r3
 800181c:	4b75      	ldr	r3, [pc, #468]	; (80019f4 <APP_voidCollisionAvoidance+0x1e4>)
 800181e:	701a      	strb	r2, [r3, #0]
	_delay_ms(100);
 8001820:	2064      	movs	r0, #100	; 0x64
 8001822:	f7fe fca5 	bl	8000170 <_delay_ms>
	Received_distanceTwo = Ultrasonic_ReadTwo();
 8001826:	f7ff fe57 	bl	80014d8 <Ultrasonic_ReadTwo>
 800182a:	4603      	mov	r3, r0
 800182c:	461a      	mov	r2, r3
 800182e:	4b72      	ldr	r3, [pc, #456]	; (80019f8 <APP_voidCollisionAvoidance+0x1e8>)
 8001830:	701a      	strb	r2, [r3, #0]
	_delay_ms(100);
 8001832:	2064      	movs	r0, #100	; 0x64
 8001834:	f7fe fc9c 	bl	8000170 <_delay_ms>
	Received_distanceThree = Ultrasonic_ReadThree();
 8001838:	f7ff fe82 	bl	8001540 <Ultrasonic_ReadThree>
 800183c:	4603      	mov	r3, r0
 800183e:	461a      	mov	r2, r3
 8001840:	4b6e      	ldr	r3, [pc, #440]	; (80019fc <APP_voidCollisionAvoidance+0x1ec>)
 8001842:	701a      	strb	r2, [r3, #0]
	_delay_ms(100);
 8001844:	2064      	movs	r0, #100	; 0x64
 8001846:	f7fe fc93 	bl	8000170 <_delay_ms>
	Received_distanceFive = Ultrasonic_ReadFive();
 800184a:	f7ff fee1 	bl	8001610 <Ultrasonic_ReadFive>
 800184e:	4603      	mov	r3, r0
 8001850:	461a      	mov	r2, r3
 8001852:	4b6b      	ldr	r3, [pc, #428]	; (8001a00 <APP_voidCollisionAvoidance+0x1f0>)
 8001854:	701a      	strb	r2, [r3, #0]
	_delay_ms(100);
 8001856:	2064      	movs	r0, #100	; 0x64
 8001858:	f7fe fc8a 	bl	8000170 <_delay_ms>

	switch(g_u8Flag)
 800185c:	4b69      	ldr	r3, [pc, #420]	; (8001a04 <APP_voidCollisionAvoidance+0x1f4>)
 800185e:	781b      	ldrb	r3, [r3, #0]
 8001860:	3b01      	subs	r3, #1
 8001862:	2b03      	cmp	r3, #3
 8001864:	f200 80c3 	bhi.w	80019ee <APP_voidCollisionAvoidance+0x1de>
 8001868:	a201      	add	r2, pc, #4	; (adr r2, 8001870 <APP_voidCollisionAvoidance+0x60>)
 800186a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800186e:	bf00      	nop
 8001870:	080018bf 	.word	0x080018bf
 8001874:	080018ef 	.word	0x080018ef
 8001878:	08001927 	.word	0x08001927
 800187c:	0800195f 	.word	0x0800195f
	{
	/***************************************************************************/
		case CA_ADAS_FORWARD_STATE:
			while(Received_distanceOne > 20 && Received_distanceThree > 10 && Received_distanceFive > 10)
			{
				MOTOR_RF_GO_FORWARD();
 8001880:	f7fe fe30 	bl	80004e4 <MOTOR_RF_GO_FORWARD>
				MOTOR_LF_GO_FORWARD();
 8001884:	f7fe fe64 	bl	8000550 <MOTOR_LF_GO_FORWARD>
				Received_distanceOne = Ultrasonic_ReadOne();
 8001888:	f7ff fdf0 	bl	800146c <Ultrasonic_ReadOne>
 800188c:	4603      	mov	r3, r0
 800188e:	461a      	mov	r2, r3
 8001890:	4b58      	ldr	r3, [pc, #352]	; (80019f4 <APP_voidCollisionAvoidance+0x1e4>)
 8001892:	701a      	strb	r2, [r3, #0]
				_delay_ms(100);
 8001894:	2064      	movs	r0, #100	; 0x64
 8001896:	f7fe fc6b 	bl	8000170 <_delay_ms>
				Received_distanceThree = Ultrasonic_ReadThree();
 800189a:	f7ff fe51 	bl	8001540 <Ultrasonic_ReadThree>
 800189e:	4603      	mov	r3, r0
 80018a0:	461a      	mov	r2, r3
 80018a2:	4b56      	ldr	r3, [pc, #344]	; (80019fc <APP_voidCollisionAvoidance+0x1ec>)
 80018a4:	701a      	strb	r2, [r3, #0]
				_delay_ms(100);
 80018a6:	2064      	movs	r0, #100	; 0x64
 80018a8:	f7fe fc62 	bl	8000170 <_delay_ms>
				Received_distanceFive = Ultrasonic_ReadFive();
 80018ac:	f7ff feb0 	bl	8001610 <Ultrasonic_ReadFive>
 80018b0:	4603      	mov	r3, r0
 80018b2:	461a      	mov	r2, r3
 80018b4:	4b52      	ldr	r3, [pc, #328]	; (8001a00 <APP_voidCollisionAvoidance+0x1f0>)
 80018b6:	701a      	strb	r2, [r3, #0]
				_delay_ms(100);
 80018b8:	2064      	movs	r0, #100	; 0x64
 80018ba:	f7fe fc59 	bl	8000170 <_delay_ms>
			while(Received_distanceOne > 20 && Received_distanceThree > 10 && Received_distanceFive > 10)
 80018be:	4b4d      	ldr	r3, [pc, #308]	; (80019f4 <APP_voidCollisionAvoidance+0x1e4>)
 80018c0:	781b      	ldrb	r3, [r3, #0]
 80018c2:	2b14      	cmp	r3, #20
 80018c4:	d907      	bls.n	80018d6 <APP_voidCollisionAvoidance+0xc6>
 80018c6:	4b4d      	ldr	r3, [pc, #308]	; (80019fc <APP_voidCollisionAvoidance+0x1ec>)
 80018c8:	781b      	ldrb	r3, [r3, #0]
 80018ca:	2b0a      	cmp	r3, #10
 80018cc:	d903      	bls.n	80018d6 <APP_voidCollisionAvoidance+0xc6>
 80018ce:	4b4c      	ldr	r3, [pc, #304]	; (8001a00 <APP_voidCollisionAvoidance+0x1f0>)
 80018d0:	781b      	ldrb	r3, [r3, #0]
 80018d2:	2b0a      	cmp	r3, #10
 80018d4:	d8d4      	bhi.n	8001880 <APP_voidCollisionAvoidance+0x70>
			}
			MOTOR_RF_STOP();
 80018d6:	f7fe fe21 	bl	800051c <MOTOR_RF_STOP>
			MOTOR_LF_STOP();
 80018da:	f7fe fe55 	bl	8000588 <MOTOR_LF_STOP>
			_delay_ms(1000);
 80018de:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80018e2:	f7fe fc45 	bl	8000170 <_delay_ms>
			g_u8Flag = CA_ADAS_RIGHT_STATE;
 80018e6:	4b47      	ldr	r3, [pc, #284]	; (8001a04 <APP_voidCollisionAvoidance+0x1f4>)
 80018e8:	2202      	movs	r2, #2
 80018ea:	701a      	strb	r2, [r3, #0]
			break;
 80018ec:	e07f      	b.n	80019ee <APP_voidCollisionAvoidance+0x1de>
		/***************************************************************************/
		case CA_ADAS_RIGHT_STATE:
			if(Received_distanceThree > 35)
 80018ee:	4b43      	ldr	r3, [pc, #268]	; (80019fc <APP_voidCollisionAvoidance+0x1ec>)
 80018f0:	781b      	ldrb	r3, [r3, #0]
 80018f2:	2b23      	cmp	r3, #35	; 0x23
 80018f4:	d913      	bls.n	800191e <APP_voidCollisionAvoidance+0x10e>
			{
				MOTOR_RF_GO_BACKWARD();
 80018f6:	f7fe fe03 	bl	8000500 <MOTOR_RF_GO_BACKWARD>
				MOTOR_LF_GO_FORWARD();
 80018fa:	f7fe fe29 	bl	8000550 <MOTOR_LF_GO_FORWARD>
				_delay_ms(700);
 80018fe:	f44f 702f 	mov.w	r0, #700	; 0x2bc
 8001902:	f7fe fc35 	bl	8000170 <_delay_ms>
				MOTOR_RF_STOP();
 8001906:	f7fe fe09 	bl	800051c <MOTOR_RF_STOP>
				MOTOR_LF_STOP();
 800190a:	f7fe fe3d 	bl	8000588 <MOTOR_LF_STOP>
				_delay_ms(1000);
 800190e:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001912:	f7fe fc2d 	bl	8000170 <_delay_ms>
				g_u8Flag = CA_ADAS_FORWARD_STATE;
 8001916:	4b3b      	ldr	r3, [pc, #236]	; (8001a04 <APP_voidCollisionAvoidance+0x1f4>)
 8001918:	2201      	movs	r2, #1
 800191a:	701a      	strb	r2, [r3, #0]
			}
			else
			{
				g_u8Flag = CA_ADAS_LEFT_STATE;
			}
			break;
 800191c:	e067      	b.n	80019ee <APP_voidCollisionAvoidance+0x1de>
				g_u8Flag = CA_ADAS_LEFT_STATE;
 800191e:	4b39      	ldr	r3, [pc, #228]	; (8001a04 <APP_voidCollisionAvoidance+0x1f4>)
 8001920:	2203      	movs	r2, #3
 8001922:	701a      	strb	r2, [r3, #0]
			break;
 8001924:	e063      	b.n	80019ee <APP_voidCollisionAvoidance+0x1de>
		/***************************************************************************/
		case CA_ADAS_LEFT_STATE:
			if(Received_distanceFive > 35)
 8001926:	4b36      	ldr	r3, [pc, #216]	; (8001a00 <APP_voidCollisionAvoidance+0x1f0>)
 8001928:	781b      	ldrb	r3, [r3, #0]
 800192a:	2b23      	cmp	r3, #35	; 0x23
 800192c:	d913      	bls.n	8001956 <APP_voidCollisionAvoidance+0x146>
			{
				MOTOR_RF_GO_FORWARD();
 800192e:	f7fe fdd9 	bl	80004e4 <MOTOR_RF_GO_FORWARD>
				MOTOR_LF_GO_BACKWARD();
 8001932:	f7fe fe1b 	bl	800056c <MOTOR_LF_GO_BACKWARD>
				_delay_ms(700);
 8001936:	f44f 702f 	mov.w	r0, #700	; 0x2bc
 800193a:	f7fe fc19 	bl	8000170 <_delay_ms>
				MOTOR_RF_STOP();
 800193e:	f7fe fded 	bl	800051c <MOTOR_RF_STOP>
				MOTOR_LF_STOP();
 8001942:	f7fe fe21 	bl	8000588 <MOTOR_LF_STOP>
				_delay_ms(1000);
 8001946:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800194a:	f7fe fc11 	bl	8000170 <_delay_ms>
				g_u8Flag = CA_ADAS_FORWARD_STATE;
 800194e:	4b2d      	ldr	r3, [pc, #180]	; (8001a04 <APP_voidCollisionAvoidance+0x1f4>)
 8001950:	2201      	movs	r2, #1
 8001952:	701a      	strb	r2, [r3, #0]
			}
			else
			{
				g_u8Flag = CA_ADAS_REVERSE_STATE;
			}
			break;
 8001954:	e04b      	b.n	80019ee <APP_voidCollisionAvoidance+0x1de>
				g_u8Flag = CA_ADAS_REVERSE_STATE;
 8001956:	4b2b      	ldr	r3, [pc, #172]	; (8001a04 <APP_voidCollisionAvoidance+0x1f4>)
 8001958:	2204      	movs	r2, #4
 800195a:	701a      	strb	r2, [r3, #0]
			break;
 800195c:	e047      	b.n	80019ee <APP_voidCollisionAvoidance+0x1de>
		/***************************************************************************/
		case CA_ADAS_REVERSE_STATE:
			if(Received_distanceTwo > 20)
 800195e:	4b26      	ldr	r3, [pc, #152]	; (80019f8 <APP_voidCollisionAvoidance+0x1e8>)
 8001960:	781b      	ldrb	r3, [r3, #0]
 8001962:	2b14      	cmp	r3, #20
 8001964:	d93e      	bls.n	80019e4 <APP_voidCollisionAvoidance+0x1d4>
			{
				while(Received_distanceThree < 20 && Received_distanceFive < 20)
 8001966:	e015      	b.n	8001994 <APP_voidCollisionAvoidance+0x184>
				{
					MOTOR_RF_GO_BACKWARD();
 8001968:	f7fe fdca 	bl	8000500 <MOTOR_RF_GO_BACKWARD>
					MOTOR_LF_GO_BACKWARD();
 800196c:	f7fe fdfe 	bl	800056c <MOTOR_LF_GO_BACKWARD>
					//_delay_ms(1000);

					Received_distanceThree = Ultrasonic_ReadThree();
 8001970:	f7ff fde6 	bl	8001540 <Ultrasonic_ReadThree>
 8001974:	4603      	mov	r3, r0
 8001976:	461a      	mov	r2, r3
 8001978:	4b20      	ldr	r3, [pc, #128]	; (80019fc <APP_voidCollisionAvoidance+0x1ec>)
 800197a:	701a      	strb	r2, [r3, #0]
					_delay_ms(100);
 800197c:	2064      	movs	r0, #100	; 0x64
 800197e:	f7fe fbf7 	bl	8000170 <_delay_ms>
					Received_distanceFive = Ultrasonic_ReadFive();
 8001982:	f7ff fe45 	bl	8001610 <Ultrasonic_ReadFive>
 8001986:	4603      	mov	r3, r0
 8001988:	461a      	mov	r2, r3
 800198a:	4b1d      	ldr	r3, [pc, #116]	; (8001a00 <APP_voidCollisionAvoidance+0x1f0>)
 800198c:	701a      	strb	r2, [r3, #0]
					_delay_ms(100);
 800198e:	2064      	movs	r0, #100	; 0x64
 8001990:	f7fe fbee 	bl	8000170 <_delay_ms>
				while(Received_distanceThree < 20 && Received_distanceFive < 20)
 8001994:	4b19      	ldr	r3, [pc, #100]	; (80019fc <APP_voidCollisionAvoidance+0x1ec>)
 8001996:	781b      	ldrb	r3, [r3, #0]
 8001998:	2b13      	cmp	r3, #19
 800199a:	d803      	bhi.n	80019a4 <APP_voidCollisionAvoidance+0x194>
 800199c:	4b18      	ldr	r3, [pc, #96]	; (8001a00 <APP_voidCollisionAvoidance+0x1f0>)
 800199e:	781b      	ldrb	r3, [r3, #0]
 80019a0:	2b13      	cmp	r3, #19
 80019a2:	d9e1      	bls.n	8001968 <APP_voidCollisionAvoidance+0x158>
//					Received_distanceTwo = Ultrasonic_ReadTwo();
//					_delay_ms(100);
				}
				if(Received_distanceThree > 20)
 80019a4:	4b15      	ldr	r3, [pc, #84]	; (80019fc <APP_voidCollisionAvoidance+0x1ec>)
 80019a6:	781b      	ldrb	r3, [r3, #0]
 80019a8:	2b14      	cmp	r3, #20
 80019aa:	d90b      	bls.n	80019c4 <APP_voidCollisionAvoidance+0x1b4>
				{
					MOTOR_RF_STOP();
 80019ac:	f7fe fdb6 	bl	800051c <MOTOR_RF_STOP>
					MOTOR_LF_STOP();
 80019b0:	f7fe fdea 	bl	8000588 <MOTOR_LF_STOP>
					_delay_ms(700);
 80019b4:	f44f 702f 	mov.w	r0, #700	; 0x2bc
 80019b8:	f7fe fbda 	bl	8000170 <_delay_ms>
					g_u8Flag = CA_ADAS_RIGHT_STATE;
 80019bc:	4b11      	ldr	r3, [pc, #68]	; (8001a04 <APP_voidCollisionAvoidance+0x1f4>)
 80019be:	2202      	movs	r2, #2
 80019c0:	701a      	strb	r2, [r3, #0]
			else
			{
				MOTOR_RF_STOP();
				MOTOR_LF_STOP();
			}
			break;
 80019c2:	e013      	b.n	80019ec <APP_voidCollisionAvoidance+0x1dc>
				else if(Received_distanceFive > 20)
 80019c4:	4b0e      	ldr	r3, [pc, #56]	; (8001a00 <APP_voidCollisionAvoidance+0x1f0>)
 80019c6:	781b      	ldrb	r3, [r3, #0]
 80019c8:	2b14      	cmp	r3, #20
 80019ca:	d90f      	bls.n	80019ec <APP_voidCollisionAvoidance+0x1dc>
					MOTOR_RF_STOP();
 80019cc:	f7fe fda6 	bl	800051c <MOTOR_RF_STOP>
					MOTOR_LF_STOP();
 80019d0:	f7fe fdda 	bl	8000588 <MOTOR_LF_STOP>
					_delay_ms(700);
 80019d4:	f44f 702f 	mov.w	r0, #700	; 0x2bc
 80019d8:	f7fe fbca 	bl	8000170 <_delay_ms>
					g_u8Flag = CA_ADAS_LEFT_STATE;
 80019dc:	4b09      	ldr	r3, [pc, #36]	; (8001a04 <APP_voidCollisionAvoidance+0x1f4>)
 80019de:	2203      	movs	r2, #3
 80019e0:	701a      	strb	r2, [r3, #0]
			break;
 80019e2:	e003      	b.n	80019ec <APP_voidCollisionAvoidance+0x1dc>
				MOTOR_RF_STOP();
 80019e4:	f7fe fd9a 	bl	800051c <MOTOR_RF_STOP>
				MOTOR_LF_STOP();
 80019e8:	f7fe fdce 	bl	8000588 <MOTOR_LF_STOP>
			break;
 80019ec:	bf00      	nop
	}
}
 80019ee:	bf00      	nop
 80019f0:	bd80      	pop	{r7, pc}
 80019f2:	bf00      	nop
 80019f4:	2000007e 	.word	0x2000007e
 80019f8:	2000007f 	.word	0x2000007f
 80019fc:	20000080 	.word	0x20000080
 8001a00:	20000082 	.word	0x20000082
 8001a04:	20000000 	.word	0x20000000

08001a08 <APP_voidRemoteControl>:
}


/********************************************************************************/
void APP_voidRemoteControl(void)
{
 8001a08:	b580      	push	{r7, lr}
 8001a0a:	b082      	sub	sp, #8
 8001a0c:	af00      	add	r7, sp, #0
	// Receive new data from Bluetooth
	u8 LOC_u8NewData;
	LOC_u8NewData = MUSART1_u8RecCharSynch();
 8001a0e:	f7ff fb39 	bl	8001084 <MUSART1_u8RecCharSynch>
 8001a12:	4603      	mov	r3, r0
 8001a14:	71fb      	strb	r3, [r7, #7]
	_delay_ms(100);
 8001a16:	2064      	movs	r0, #100	; 0x64
 8001a18:	f7fe fbaa 	bl	8000170 <_delay_ms>

	// Motor control based on received data
	switch (LOC_u8NewData) {
 8001a1c:	79fb      	ldrb	r3, [r7, #7]
 8001a1e:	3b31      	subs	r3, #49	; 0x31
 8001a20:	2b03      	cmp	r3, #3
 8001a22:	d83b      	bhi.n	8001a9c <APP_voidRemoteControl+0x94>
 8001a24:	a201      	add	r2, pc, #4	; (adr r2, 8001a2c <APP_voidRemoteControl+0x24>)
 8001a26:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001a2a:	bf00      	nop
 8001a2c:	08001a3d 	.word	0x08001a3d
 8001a30:	08001a55 	.word	0x08001a55
 8001a34:	08001a6d 	.word	0x08001a6d
 8001a38:	08001a85 	.word	0x08001a85
	case '1':
		// Move forward
		MOTOR_RF_GO_FORWARD();
 8001a3c:	f7fe fd52 	bl	80004e4 <MOTOR_RF_GO_FORWARD>
		MOTOR_LF_GO_FORWARD();
 8001a40:	f7fe fd86 	bl	8000550 <MOTOR_LF_GO_FORWARD>
		_delay_ms(250);
 8001a44:	20fa      	movs	r0, #250	; 0xfa
 8001a46:	f7fe fb93 	bl	8000170 <_delay_ms>
		// Stop after a short delay
		MOTOR_RF_STOP();
 8001a4a:	f7fe fd67 	bl	800051c <MOTOR_RF_STOP>
		MOTOR_LF_STOP();
 8001a4e:	f7fe fd9b 	bl	8000588 <MOTOR_LF_STOP>
		break;
 8001a52:	e028      	b.n	8001aa6 <APP_voidRemoteControl+0x9e>

	case '2':
		// Turn right
		MOTOR_RF_GO_FORWARD();
 8001a54:	f7fe fd46 	bl	80004e4 <MOTOR_RF_GO_FORWARD>
		MOTOR_LF_STOP();
 8001a58:	f7fe fd96 	bl	8000588 <MOTOR_LF_STOP>
		_delay_ms(250);
 8001a5c:	20fa      	movs	r0, #250	; 0xfa
 8001a5e:	f7fe fb87 	bl	8000170 <_delay_ms>
		// Stop after a short delay
		MOTOR_RF_STOP();
 8001a62:	f7fe fd5b 	bl	800051c <MOTOR_RF_STOP>
		MOTOR_LF_STOP();
 8001a66:	f7fe fd8f 	bl	8000588 <MOTOR_LF_STOP>
		break;
 8001a6a:	e01c      	b.n	8001aa6 <APP_voidRemoteControl+0x9e>

	case '3':
		// Turn left
		MOTOR_LF_GO_FORWARD();
 8001a6c:	f7fe fd70 	bl	8000550 <MOTOR_LF_GO_FORWARD>
		MOTOR_RF_STOP();
 8001a70:	f7fe fd54 	bl	800051c <MOTOR_RF_STOP>
		_delay_ms(250);
 8001a74:	20fa      	movs	r0, #250	; 0xfa
 8001a76:	f7fe fb7b 	bl	8000170 <_delay_ms>
		// Stop after a short delay
		MOTOR_RF_STOP();
 8001a7a:	f7fe fd4f 	bl	800051c <MOTOR_RF_STOP>
		MOTOR_LF_STOP();
 8001a7e:	f7fe fd83 	bl	8000588 <MOTOR_LF_STOP>
		break;
 8001a82:	e010      	b.n	8001aa6 <APP_voidRemoteControl+0x9e>

	case '4':
		// Move backward
		MOTOR_RF_GO_BACKWARD();
 8001a84:	f7fe fd3c 	bl	8000500 <MOTOR_RF_GO_BACKWARD>
		MOTOR_LF_GO_BACKWARD();
 8001a88:	f7fe fd70 	bl	800056c <MOTOR_LF_GO_BACKWARD>
		_delay_ms(250);
 8001a8c:	20fa      	movs	r0, #250	; 0xfa
 8001a8e:	f7fe fb6f 	bl	8000170 <_delay_ms>
		// Stop after a short delay
		MOTOR_RF_STOP();
 8001a92:	f7fe fd43 	bl	800051c <MOTOR_RF_STOP>
		MOTOR_LF_STOP();
 8001a96:	f7fe fd77 	bl	8000588 <MOTOR_LF_STOP>
		break;
 8001a9a:	e004      	b.n	8001aa6 <APP_voidRemoteControl+0x9e>

	default:
		// Stop if the received command is not recognized
		MOTOR_RF_STOP();
 8001a9c:	f7fe fd3e 	bl	800051c <MOTOR_RF_STOP>
		MOTOR_LF_STOP();
 8001aa0:	f7fe fd72 	bl	8000588 <MOTOR_LF_STOP>
		break;
 8001aa4:	bf00      	nop
	}
}
 8001aa6:	bf00      	nop
 8001aa8:	3708      	adds	r7, #8
 8001aaa:	46bd      	mov	sp, r7
 8001aac:	bd80      	pop	{r7, pc}
 8001aae:	bf00      	nop

08001ab0 <main>:


int main(void)
{
 8001ab0:	b580      	push	{r7, lr}
 8001ab2:	af00      	add	r7, sp, #0
	MRCC_VidInit();
 8001ab4:	f7fe fd8e 	bl	80005d4 <MRCC_VidInit>
	MRCC_VidEnablePeripheralClock(APB1_BUS, TIM2_RCC);
 8001ab8:	2100      	movs	r1, #0
 8001aba:	2001      	movs	r0, #1
 8001abc:	f7fe fdbe 	bl	800063c <MRCC_VidEnablePeripheralClock>
	MRCC_VidEnablePeripheralClock(APB1_BUS, TIM3_RCC);
 8001ac0:	2101      	movs	r1, #1
 8001ac2:	2001      	movs	r0, #1
 8001ac4:	f7fe fdba 	bl	800063c <MRCC_VidEnablePeripheralClock>
	MRCC_VidEnablePeripheralClock(APB2_BUS, GPIOA_RCC);
 8001ac8:	2102      	movs	r1, #2
 8001aca:	2002      	movs	r0, #2
 8001acc:	f7fe fdb6 	bl	800063c <MRCC_VidEnablePeripheralClock>
	MRCC_VidEnablePeripheralClock(APB2_BUS, GPIOB_RCC);
 8001ad0:	2103      	movs	r1, #3
 8001ad2:	2002      	movs	r0, #2
 8001ad4:	f7fe fdb2 	bl	800063c <MRCC_VidEnablePeripheralClock>
	MRCC_VidEnablePeripheralClock(APB1_BUS, TIM4_RCC);
 8001ad8:	2102      	movs	r1, #2
 8001ada:	2001      	movs	r0, #1
 8001adc:	f7fe fdae 	bl	800063c <MRCC_VidEnablePeripheralClock>

	/*Enable Interrupt for each timer*/
	MNVIC_VidEnablePeripheral(TIM2_C);
 8001ae0:	201c      	movs	r0, #28
 8001ae2:	f7fe fd5f 	bl	80005a4 <MNVIC_VidEnablePeripheral>
	MNVIC_VidEnablePeripheral(TIM3_C);
 8001ae6:	201d      	movs	r0, #29
 8001ae8:	f7fe fd5c 	bl	80005a4 <MNVIC_VidEnablePeripheral>
	//timer2
	/*Echo1*/
	MGPIO_VidSetPinDirection(GPIOA,PIN0,INPUT_FLOATING);
 8001aec:	2204      	movs	r2, #4
 8001aee:	2100      	movs	r1, #0
 8001af0:	2000      	movs	r0, #0
 8001af2:	f7fe fb71 	bl	80001d8 <MGPIO_VidSetPinDirection>
	/*Echo2*/
	MGPIO_VidSetPinDirection(GPIOA,PIN1,INPUT_FLOATING);
 8001af6:	2204      	movs	r2, #4
 8001af8:	2101      	movs	r1, #1
 8001afa:	2000      	movs	r0, #0
 8001afc:	f7fe fb6c 	bl	80001d8 <MGPIO_VidSetPinDirection>
	/*Echo3*/
	MGPIO_VidSetPinDirection(GPIOA,PIN6,INPUT_FLOATING);
 8001b00:	2204      	movs	r2, #4
 8001b02:	2106      	movs	r1, #6
 8001b04:	2000      	movs	r0, #0
 8001b06:	f7fe fb67 	bl	80001d8 <MGPIO_VidSetPinDirection>
	/*Echo4*/
	MGPIO_VidSetPinDirection(GPIOA,PIN7,INPUT_FLOATING);
 8001b0a:	2204      	movs	r2, #4
 8001b0c:	2107      	movs	r1, #7
 8001b0e:	2000      	movs	r0, #0
 8001b10:	f7fe fb62 	bl	80001d8 <MGPIO_VidSetPinDirection>
	/*Echo5*/
	MGPIO_VidSetPinDirection(GPIOB,PIN1,INPUT_FLOATING);
 8001b14:	2204      	movs	r2, #4
 8001b16:	2101      	movs	r1, #1
 8001b18:	2001      	movs	r0, #1
 8001b1a:	f7fe fb5d 	bl	80001d8 <MGPIO_VidSetPinDirection>

	/*TIRG1*/
	MGPIO_VidSetPinDirection(GPIOB, PIN5, OUTPUT_SPEED_10MHZ_PP);
 8001b1e:	2201      	movs	r2, #1
 8001b20:	2105      	movs	r1, #5
 8001b22:	2001      	movs	r0, #1
 8001b24:	f7fe fb58 	bl	80001d8 <MGPIO_VidSetPinDirection>
	/*TIRG2*/
	MGPIO_VidSetPinDirection(GPIOA, PIN2, OUTPUT_SPEED_10MHZ_PP);
 8001b28:	2201      	movs	r2, #1
 8001b2a:	2102      	movs	r1, #2
 8001b2c:	2000      	movs	r0, #0
 8001b2e:	f7fe fb53 	bl	80001d8 <MGPIO_VidSetPinDirection>
	/*TIRG3*/
	MGPIO_VidSetPinDirection(GPIOB, PIN0, OUTPUT_SPEED_10MHZ_PP);
 8001b32:	2201      	movs	r2, #1
 8001b34:	2100      	movs	r1, #0
 8001b36:	2001      	movs	r0, #1
 8001b38:	f7fe fb4e 	bl	80001d8 <MGPIO_VidSetPinDirection>
	/*TIRG4*/
	MGPIO_VidSetPinDirection(GPIOB, PIN10, OUTPUT_SPEED_10MHZ_PP);
 8001b3c:	2201      	movs	r2, #1
 8001b3e:	210a      	movs	r1, #10
 8001b40:	2001      	movs	r0, #1
 8001b42:	f7fe fb49 	bl	80001d8 <MGPIO_VidSetPinDirection>
	/*TIRG5*/
	MGPIO_VidSetPinDirection(GPIOA, PIN3, OUTPUT_SPEED_10MHZ_PP);
 8001b46:	2201      	movs	r2, #1
 8001b48:	2103      	movs	r1, #3
 8001b4a:	2000      	movs	r0, #0
 8001b4c:	f7fe fb44 	bl	80001d8 <MGPIO_VidSetPinDirection>

	/*SetCallBack*/
	Timer2_u8InputCaptureSetCallBack(&TIM2);
 8001b50:	4820      	ldr	r0, [pc, #128]	; (8001bd4 <main+0x124>)
 8001b52:	f7fe fe6b 	bl	800082c <Timer2_u8InputCaptureSetCallBack>
	Timer3_u8InputCaptureSetCallBack(&TIM3);
 8001b56:	4820      	ldr	r0, [pc, #128]	; (8001bd8 <main+0x128>)
 8001b58:	f7fe ffec 	bl	8000b34 <Timer3_u8InputCaptureSetCallBack>
	/*Inizailize channle*/
	TIMER2_VoidInitInputCapture(Channle1);
 8001b5c:	2000      	movs	r0, #0
 8001b5e:	f7fe fdff 	bl	8000760 <TIMER2_VoidInitInputCapture>
	TIMER2_VoidInitInputCapture(Channle2);
 8001b62:	2001      	movs	r0, #1
 8001b64:	f7fe fdfc 	bl	8000760 <TIMER2_VoidInitInputCapture>
	TIMER3_VoidInitInputCapture(Channle1);
 8001b68:	2000      	movs	r0, #0
 8001b6a:	f7fe ff33 	bl	80009d4 <TIMER3_VoidInitInputCapture>
	TIMER3_VoidInitInputCapture(Channle2);
 8001b6e:	2001      	movs	r0, #1
 8001b70:	f7fe ff30 	bl	80009d4 <TIMER3_VoidInitInputCapture>
	TIMER3_VoidInitInputCapture(Channle4);
 8001b74:	2003      	movs	r0, #3
 8001b76:	f7fe ff2d 	bl	80009d4 <TIMER3_VoidInitInputCapture>

	MOTORS_Void_MotorInit();
 8001b7a:	f7fe fc79 	bl	8000470 <MOTORS_Void_MotorInit>

	MUSART_VidInit();
 8001b7e:	f7ff fa1d 	bl	8000fbc <MUSART_VidInit>

	MRCC_VidEnablePeripheralClock ( APB2_BUS , USART1_RCC) ;
 8001b82:	210e      	movs	r1, #14
 8001b84:	2002      	movs	r0, #2
 8001b86:	f7fe fd59 	bl	800063c <MRCC_VidEnablePeripheralClock>
	MGPIO_VidSetPinDirection      ( GPIOA , PIN9  , OUTPUT_SPEED_2MHZ_AFPP ) ;
 8001b8a:	220a      	movs	r2, #10
 8001b8c:	2109      	movs	r1, #9
 8001b8e:	2000      	movs	r0, #0
 8001b90:	f7fe fb22 	bl	80001d8 <MGPIO_VidSetPinDirection>
	MGPIO_VidSetPinDirection      ( GPIOA , PIN10 , INPUT_FLOATING         ) ;
 8001b94:	2204      	movs	r2, #4
 8001b96:	210a      	movs	r1, #10
 8001b98:	2000      	movs	r0, #0
 8001b9a:	f7fe fb1d 	bl	80001d8 <MGPIO_VidSetPinDirection>


	MOTOR_RF_Void_MotorSetSpeed(90);
 8001b9e:	205a      	movs	r0, #90	; 0x5a
 8001ba0:	f7fe fc94 	bl	80004cc <MOTOR_RF_Void_MotorSetSpeed>
	MOTOR_LF_Void_MotorSetSpeed(90);
 8001ba4:	205a      	movs	r0, #90	; 0x5a
 8001ba6:	f7fe fcc7 	bl	8000538 <MOTOR_LF_Void_MotorSetSpeed>

	/* Loop forever */
	for(;;)
	{
		switch(g_u8OperationMode)
 8001baa:	4b0c      	ldr	r3, [pc, #48]	; (8001bdc <main+0x12c>)
 8001bac:	781b      	ldrb	r3, [r3, #0]
 8001bae:	2b03      	cmp	r3, #3
 8001bb0:	d00b      	beq.n	8001bca <main+0x11a>
 8001bb2:	2b03      	cmp	r3, #3
 8001bb4:	dc0c      	bgt.n	8001bd0 <main+0x120>
 8001bb6:	2b01      	cmp	r3, #1
 8001bb8:	d004      	beq.n	8001bc4 <main+0x114>
 8001bba:	2b02      	cmp	r3, #2
 8001bbc:	d108      	bne.n	8001bd0 <main+0x120>
		{
			case CAR_OPERATION_COLLISIONAVOID:		// Collision Avoidance Mode
				APP_voidCollisionAvoidance();
 8001bbe:	f7ff fe27 	bl	8001810 <APP_voidCollisionAvoidance>
				break;
 8001bc2:	e006      	b.n	8001bd2 <main+0x122>

			case CAR_OPERATION_AUTOPARKING:		// Auto-Parking Mode
				APP_voidAutoParking();
 8001bc4:	f7ff fd58 	bl	8001678 <APP_voidAutoParking>
				break;
 8001bc8:	e003      	b.n	8001bd2 <main+0x122>

			case CAR_OPERATION_RCCAR:		// RC Car Mode
				APP_voidRemoteControl();
 8001bca:	f7ff ff1d 	bl	8001a08 <APP_voidRemoteControl>
				break;
 8001bce:	e000      	b.n	8001bd2 <main+0x122>

			default:
				break;
 8001bd0:	bf00      	nop
		switch(g_u8OperationMode)
 8001bd2:	e7ea      	b.n	8001baa <main+0xfa>
 8001bd4:	080010f1 	.word	0x080010f1
 8001bd8:	080011ed 	.word	0x080011ed
 8001bdc:	20000001 	.word	0x20000001

08001be0 <Reset_Handler>:
 8001be0:	480d      	ldr	r0, [pc, #52]	; (8001c18 <LoopForever+0x2>)
 8001be2:	4685      	mov	sp, r0
 8001be4:	f3af 8000 	nop.w
 8001be8:	480c      	ldr	r0, [pc, #48]	; (8001c1c <LoopForever+0x6>)
 8001bea:	490d      	ldr	r1, [pc, #52]	; (8001c20 <LoopForever+0xa>)
 8001bec:	4a0d      	ldr	r2, [pc, #52]	; (8001c24 <LoopForever+0xe>)
 8001bee:	2300      	movs	r3, #0
 8001bf0:	e002      	b.n	8001bf8 <LoopCopyDataInit>

08001bf2 <CopyDataInit>:
 8001bf2:	58d4      	ldr	r4, [r2, r3]
 8001bf4:	50c4      	str	r4, [r0, r3]
 8001bf6:	3304      	adds	r3, #4

08001bf8 <LoopCopyDataInit>:
 8001bf8:	18c4      	adds	r4, r0, r3
 8001bfa:	428c      	cmp	r4, r1
 8001bfc:	d3f9      	bcc.n	8001bf2 <CopyDataInit>
 8001bfe:	4a0a      	ldr	r2, [pc, #40]	; (8001c28 <LoopForever+0x12>)
 8001c00:	4c0a      	ldr	r4, [pc, #40]	; (8001c2c <LoopForever+0x16>)
 8001c02:	2300      	movs	r3, #0
 8001c04:	e001      	b.n	8001c0a <LoopFillZerobss>

08001c06 <FillZerobss>:
 8001c06:	6013      	str	r3, [r2, #0]
 8001c08:	3204      	adds	r2, #4

08001c0a <LoopFillZerobss>:
 8001c0a:	42a2      	cmp	r2, r4
 8001c0c:	d3fb      	bcc.n	8001c06 <FillZerobss>
 8001c0e:	f000 f811 	bl	8001c34 <__libc_init_array>
 8001c12:	f7ff ff4d 	bl	8001ab0 <main>

08001c16 <LoopForever>:
 8001c16:	e7fe      	b.n	8001c16 <LoopForever>
 8001c18:	20005000 	.word	0x20005000
 8001c1c:	20000000 	.word	0x20000000
 8001c20:	20000004 	.word	0x20000004
 8001c24:	08001c9c 	.word	0x08001c9c
 8001c28:	20000004 	.word	0x20000004
 8001c2c:	20000084 	.word	0x20000084

08001c30 <ADC1_2_IRQHandler>:
 8001c30:	e7fe      	b.n	8001c30 <ADC1_2_IRQHandler>
	...

08001c34 <__libc_init_array>:
 8001c34:	b570      	push	{r4, r5, r6, lr}
 8001c36:	2600      	movs	r6, #0
 8001c38:	4d0c      	ldr	r5, [pc, #48]	; (8001c6c <__libc_init_array+0x38>)
 8001c3a:	4c0d      	ldr	r4, [pc, #52]	; (8001c70 <__libc_init_array+0x3c>)
 8001c3c:	1b64      	subs	r4, r4, r5
 8001c3e:	10a4      	asrs	r4, r4, #2
 8001c40:	42a6      	cmp	r6, r4
 8001c42:	d109      	bne.n	8001c58 <__libc_init_array+0x24>
 8001c44:	f000 f81a 	bl	8001c7c <_init>
 8001c48:	2600      	movs	r6, #0
 8001c4a:	4d0a      	ldr	r5, [pc, #40]	; (8001c74 <__libc_init_array+0x40>)
 8001c4c:	4c0a      	ldr	r4, [pc, #40]	; (8001c78 <__libc_init_array+0x44>)
 8001c4e:	1b64      	subs	r4, r4, r5
 8001c50:	10a4      	asrs	r4, r4, #2
 8001c52:	42a6      	cmp	r6, r4
 8001c54:	d105      	bne.n	8001c62 <__libc_init_array+0x2e>
 8001c56:	bd70      	pop	{r4, r5, r6, pc}
 8001c58:	f855 3b04 	ldr.w	r3, [r5], #4
 8001c5c:	4798      	blx	r3
 8001c5e:	3601      	adds	r6, #1
 8001c60:	e7ee      	b.n	8001c40 <__libc_init_array+0xc>
 8001c62:	f855 3b04 	ldr.w	r3, [r5], #4
 8001c66:	4798      	blx	r3
 8001c68:	3601      	adds	r6, #1
 8001c6a:	e7f2      	b.n	8001c52 <__libc_init_array+0x1e>
 8001c6c:	08001c94 	.word	0x08001c94
 8001c70:	08001c94 	.word	0x08001c94
 8001c74:	08001c94 	.word	0x08001c94
 8001c78:	08001c98 	.word	0x08001c98

08001c7c <_init>:
 8001c7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001c7e:	bf00      	nop
 8001c80:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001c82:	bc08      	pop	{r3}
 8001c84:	469e      	mov	lr, r3
 8001c86:	4770      	bx	lr

08001c88 <_fini>:
 8001c88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001c8a:	bf00      	nop
 8001c8c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001c8e:	bc08      	pop	{r3}
 8001c90:	469e      	mov	lr, r3
 8001c92:	4770      	bx	lr
